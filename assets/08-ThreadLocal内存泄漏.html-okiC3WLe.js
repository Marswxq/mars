import{_ as c,c as o,a as n,b as e,w as l,d as i,r,o as d,e as p}from"./app-CKtXyHQO.js";const u={},k={class:"table-of-contents"},h=["src"],v=["src"];function m(t,a){const s=r("router-link");return d(),o("div",null,[a[4]||(a[4]=n("h1",{id:"threadlocal",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#threadlocal"},[n("span",null,"ThreadLocal")])],-1)),a[5]||(a[5]=n("blockquote",null,[n("p",null,"ThreadLocal是当前线程的本地变量，在线程Thread的声明周期内起作用，可以用于一个线程内多个方法之间的一些公用变量的传递")],-1)),a[6]||(a[6]=n("p",null,[n("strong",null,"目录")],-1)),n("nav",k,[n("ul",null,[n("li",null,[e(s,{to:"#threadlocal原理"},{default:l(()=>a[0]||(a[0]=[p("ThreadLocal原理")])),_:1})]),n("li",null,[e(s,{to:"#threadlocal为什么会内存泄漏"},{default:l(()=>a[1]||(a[1]=[p("ThreadLocal为什么会内存泄漏")])),_:1})]),n("li",null,[e(s,{to:"#thread、threadlocal、threadlocalmap关系"},{default:l(()=>a[2]||(a[2]=[p("Thread、ThreadLocal、ThreadLocalMap关系")])),_:1})]),n("li",null,[e(s,{to:"#划重点"},{default:l(()=>a[3]||(a[3]=[p("划重点")])),_:1})])])]),a[7]||(a[7]=n("h2",{id:"threadlocal原理",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#threadlocal原理"},[n("span",null,"ThreadLocal原理")])],-1)),a[8]||(a[8]=n("p",null,"ThreadLocal使用过程如下图，每个线程Thread都有自己的一个ThreadLocalMap，ThreadLocalMap中使用Entry存放kv键值对，key是ThreadLocal实例本身，value是真正需要存储的Object。也就是说 ThreadLocal 本身并不存储值，它只是作为一个 key 来让线程从ThreadLocalMap获取value。下图中的虚线表示ThreadLocalMap是使用ThreadLocal的弱引用作为Key，弱引用对象在GC时会被回收。",-1)),n("img",{src:t.$withBase("/images/java/ThreadLocal.png"),alt:"ThreadLocal"},null,8,h),a[9]||(a[9]=n("h2",{id:"threadlocal为什么会内存泄漏",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#threadlocal为什么会内存泄漏"},[n("span",null,"ThreadLocal为什么会内存泄漏")])],-1)),a[10]||(a[10]=n("p",null,"ThreadLocalMap使用ThreadLocal的弱引用作为key，如果一个ThreadLocal没有外部强引用来引用它，那么GC的时候，这个ThreadLocal将会被回收，那么ThreadLocalMap中就会出现key为null的Entry，就没有办法访问这些key为null的Entry的value，如果当前线程再迟迟不结束的话，这些key为null的Entry的value就会一直存在一条强引用链：Thread Ref-> Thread -> ThreaLocalMap -> Entry -> value，也是因为这条引用链的存在，如果线程Thread还在运行，那么Entry就一直不会被回收，进而value也不会被回收。当Thread在线程池中不断被使用后，就会造成内存泄漏。",-1)),a[11]||(a[11]=n("h2",{id:"thread、threadlocal、threadlocalmap关系",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#thread、threadlocal、threadlocalmap关系"},[n("span",null,"Thread、ThreadLocal、ThreadLocalMap关系")])],-1)),a[12]||(a[12]=n("p",null,"每个Thread内部有个ThreadLocal.ThreadLocalMap变量，ThreadLocalMap为ThreadLocal的一个静态内部类，里面定义了Entry来保存数据，Entry存放的key为ThreadLocal。",-1)),n("img",{src:t.$withBase("/images/java/ThreadLocal关系.png"),alt:"ThreadLocal关系"},null,8,v),a[13]||(a[13]=i(`<p>源码参考如下：</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Thread</span> <span class="token keyword">implements</span> <span class="token class-name">Runnable</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">native</span> <span class="token class-name">Thread</span> <span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">/* ThreadLocal values pertaining to this thread. This map is maintained</span>
<span class="line">     * by the ThreadLocal class. */</span></span>
<span class="line">    <span class="token class-name">ThreadLocal<span class="token punctuation">.</span>ThreadLocalMap</span> threadLocals <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ThreadLocal</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">set</span><span class="token punctuation">(</span><span class="token class-name">T</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Thread</span> t <span class="token operator">=</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">ThreadLocalMap</span> map <span class="token operator">=</span> <span class="token function">getMap</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>map <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span></span>
<span class="line">            map<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">else</span></span>
<span class="line">            <span class="token function">createMap</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token class-name">ThreadLocalMap</span> <span class="token function">getMap</span><span class="token punctuation">(</span><span class="token class-name">Thread</span> t<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> t<span class="token punctuation">.</span>threadLocals<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">void</span> <span class="token function">createMap</span><span class="token punctuation">(</span><span class="token class-name">Thread</span> t<span class="token punctuation">,</span> <span class="token class-name">T</span> firstValue<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        t<span class="token punctuation">.</span>threadLocals <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ThreadLocalMap</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> firstValue<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">        </span>
<span class="line">    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">ThreadLocalMap</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Entry</span> <span class="token keyword">extends</span> <span class="token class-name">WeakReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ThreadLocal</span><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token doc-comment comment">/** The value associated with this ThreadLocal. */</span></span>
<span class="line">            <span class="token class-name">Object</span> value<span class="token punctuation">;</span></span>
<span class="line">        </span>
<span class="line">            <span class="token class-name">Entry</span><span class="token punctuation">(</span><span class="token class-name">ThreadLocal</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> k<span class="token punctuation">,</span> <span class="token class-name">Object</span> v<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token keyword">super</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                value <span class="token operator">=</span> v<span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="划重点" tabindex="-1"><a class="header-anchor" href="#划重点"><span>划重点</span></a></h2><ul><li>ThreadLocal在线程池中会被线程反复使用，ThreadLocal的生命周期不等于一次Request的声明周期</li><li>每次使用ThreadLocal完成后调用remove()方法清除数据</li></ul>`,5))])}const b=c(u,[["render",m],["__file","08-ThreadLocal内存泄漏.html.vue"]]),L=JSON.parse('{"path":"/docs/java/08-ThreadLocal%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F.html","title":"ThreadLocal","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"ThreadLocal原理","slug":"threadlocal原理","link":"#threadlocal原理","children":[]},{"level":2,"title":"ThreadLocal为什么会内存泄漏","slug":"threadlocal为什么会内存泄漏","link":"#threadlocal为什么会内存泄漏","children":[]},{"level":2,"title":"Thread、ThreadLocal、ThreadLocalMap关系","slug":"thread、threadlocal、threadlocalmap关系","link":"#thread、threadlocal、threadlocalmap关系","children":[]},{"level":2,"title":"划重点","slug":"划重点","link":"#划重点","children":[]}],"git":{"updatedTime":1734338014000,"contributors":[{"name":"wangxiaoquan","email":"wxq","commits":1}]},"filePathRelative":"docs/java/08-ThreadLocal内存泄漏.md"}');export{b as comp,L as data};
