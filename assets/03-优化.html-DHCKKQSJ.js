import{_ as o,c as i,a as e,b as a,w as n,d as r,r as p,o as d,e as l}from"./app-CKtXyHQO.js";const c="/mars/images/kettle/kettle_good_mysql_conn.png",u={},m={class:"table-of-contents"};function k(h,s){const t=p("router-link");return d(),i("div",null,[s[2]||(s[2]=e("h1",{id:"kettle-优化",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#kettle-优化"},[e("span",null,"Kettle 优化")])],-1)),s[3]||(s[3]=e("p",null,[e("strong",null,"目录")],-1)),e("nav",m,[e("ul",null,[e("li",null,[a(t,{to:"#kettle-内存配置优化"},{default:n(()=>s[0]||(s[0]=[l("Kettle 内存配置优化")])),_:1})]),e("li",null,[a(t,{to:"#mysql-读写速度优化"},{default:n(()=>s[1]||(s[1]=[l("MySQL 读写速度优化")])),_:1})])])]),s[4]||(s[4]=r(`<h2 id="kettle-内存配置优化" tabindex="-1"><a class="header-anchor" href="#kettle-内存配置优化"><span>Kettle 内存配置优化</span></a></h2><ul><li>windows 端</li></ul><p>修改 Spoon.bat 文件，找到<code>if &quot;%PENTAHO_DI_JAVA_OPTIONS%&quot;==&quot;&quot;</code>部分内容，修改为</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token keyword">if</span> <span class="token string">&quot;%PENTAHO_DI_JAVA_OPTIONS%&quot;</span><span class="token operator">==</span><span class="token string">&quot;&quot;</span> <span class="token builtin class-name">set</span> <span class="token assign-left variable">PENTAHO_DI_JAVA_OPTIONS</span><span class="token operator">=</span><span class="token string">&quot;-Xms4096m&quot;</span> <span class="token string">&quot;-Xmx4096m&quot;</span> <span class="token string">&quot;-XX:MaxPermSize=256m&quot;</span> <span class="token string">&quot;-Dfile.encoding=UTF-8&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>linux 端 修改 spoon.sh 文件，找到<code>if [ -z &quot;$PENTAHO_DI_JAVA_OPTIONS&quot; ]; then</code>部分内容，修改为</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token parameter variable">-z</span> <span class="token string">&quot;<span class="token variable">$PENTAHO_DI_JAVA_OPTIONS</span>&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span></span>
<span class="line">    <span class="token assign-left variable">PENTAHO_DI_JAVA_OPTIONS</span><span class="token operator">=</span><span class="token string">&quot;-Xms4096m -Xmx4096m&quot;</span></span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>**注意：**无论 linux，windows 都需要合理设置<code>-Xms</code>，<code>-Xmx</code>配置，内存大小一般为服务器（如果是docker部署，那么就是container容器内存）的70%-80%</p><h2 id="mysql-读写速度优化" tabindex="-1"><a class="header-anchor" href="#mysql-读写速度优化"><span>MySQL 读写速度优化</span></a></h2><p>主要通过优化DB连接配置提升读写速度</p><p>编辑数据库连接=&gt;选项，添加如下参数</p><div class="language-properties line-numbers-mode" data-highlighter="prismjs" data-ext="properties" data-title="properties"><pre><code><span class="line"><span class="token key attr-name">useServerPrepStmts</span><span class="token punctuation">=</span><span class="token value attr-value">false</span></span>
<span class="line"><span class="token key attr-name">rewriteBatchedStatements</span><span class="token punctuation">=</span><span class="token value attr-value">true</span></span>
<span class="line"><span class="token key attr-name">useCompression</span><span class="token punctuation">=</span><span class="token value attr-value">true</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+c+'" alt="myusql db连接优化"></p><p>参数说明：</p><table><thead><tr><th>命名参数</th><th>值</th><th>说明</th></tr></thead><tbody><tr><td>useCompression</td><td>true</td><td>在传输时开启数据压缩 ，提高传输效率</td></tr><tr><td>rewriteBatchedStatements</td><td>true</td><td>让数据库重排Insert语句，合并多条插入语句成为一条，提交插入效率</td></tr><tr><td>useServerPrepStmts</td><td>false</td><td>让数据库重排Insert语句，合并多条插入语句成为一条，提交插入效率</td></tr></tbody></table>',14))])}const _=o(u,[["render",k],["__file","03-优化.html.vue"]]),b=JSON.parse('{"path":"/docs/kettle/03-%E4%BC%98%E5%8C%96.html","title":"Kettle 优化","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"Kettle 内存配置优化","slug":"kettle-内存配置优化","link":"#kettle-内存配置优化","children":[]},{"level":2,"title":"MySQL 读写速度优化","slug":"mysql-读写速度优化","link":"#mysql-读写速度优化","children":[]}],"git":{"updatedTime":1734338014000,"contributors":[{"name":"wangxiaoquan","email":"wxq","commits":1}]},"filePathRelative":"docs/kettle/03-优化.md"}');export{_ as comp,b as data};
