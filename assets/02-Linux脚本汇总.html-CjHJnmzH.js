import{_ as n,c as a,d as e,o as l}from"./app-CKtXyHQO.js";const p={};function i(t,s){return l(),a("div",null,s[0]||(s[0]=[e(`<h1 id="linux-脚本汇总" tabindex="-1"><a class="header-anchor" href="#linux-脚本汇总"><span>Linux 脚本汇总</span></a></h1><h2 id="比较ab两台服务器文件是否一致" tabindex="-1"><a class="header-anchor" href="#比较ab两台服务器文件是否一致"><span>比较AB两台服务器文件是否一致</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token shebang important">#!/bin/bash</span></span>
<span class="line"><span class="token comment">#假设A机器到B机器已经做了无密码登录设置</span></span>
<span class="line"><span class="token assign-left variable">dir</span><span class="token operator">=</span>/home/web11/newsystem</span>
<span class="line"><span class="token assign-left variable">md5dir</span><span class="token operator">=</span>/home/web11</span>
<span class="line"><span class="token function">rm</span> <span class="token parameter variable">-rf</span> <span class="token variable">$md5dir</span>/md5.txt <span class="token variable">$md5dir</span>/md5_b.txt</span>
<span class="line"><span class="token comment">##假设B机器的IP为192.168.0.100</span></span>
<span class="line"><span class="token assign-left variable">B_user</span><span class="token operator">=</span>web11</span>
<span class="line"><span class="token assign-left variable">B_ip</span><span class="token operator">=</span><span class="token number">192.168</span>.131.243</span>
<span class="line"><span class="token comment">#过滤掉.kepp文件</span></span>
<span class="line"><span class="token function">find</span> <span class="token string">&quot;<span class="token variable">$dir</span>&quot;</span> <span class="token parameter variable">-type</span> f <span class="token operator">|</span><span class="token function">grep</span> <span class="token parameter variable">-v</span> <span class="token string">&quot;*.keep&quot;</span><span class="token operator">|</span> <span class="token function">xargs</span> md5sum <span class="token operator">&gt;</span> <span class="token variable">$md5dir</span>/md5.txt</span>
<span class="line"><span class="token function">ssh</span> <span class="token variable">$B_user</span>@<span class="token variable">$B_ip</span> <span class="token string">&quot;rm -rf <span class="token variable">$md5dir</span>/md5_b.txt&quot;</span></span>
<span class="line"><span class="token function">ssh</span> <span class="token variable">$B_user</span>@<span class="token variable">$B_ip</span> <span class="token string">&quot;find &#39;<span class="token variable">$dir</span>&#39; -type f |grep -v &quot;</span>*.keep<span class="token string">&quot;| xargs md5sum &gt; <span class="token variable">$md5dir</span>/md5_b.txt&quot;</span> </span>
<span class="line"><span class="token function">scp</span> <span class="token variable">$B_user</span>@<span class="token variable">$B_ip</span><span class="token builtin class-name">:</span><span class="token variable">$md5dir</span>/md5_b.txt <span class="token variable">$md5dir</span></span>
<span class="line"><span class="token keyword">for</span> <span class="token for-or-select variable">f</span> <span class="token keyword">in</span> <span class="token variable"><span class="token variable">\`</span><span class="token function">awk</span> <span class="token string">&#39;{print $2}&#39;</span> $md5dir/md5.txt<span class="token variable">\`</span></span></span>
<span class="line"><span class="token keyword">do</span> </span>
<span class="line">  <span class="token keyword">if</span> <span class="token function">grep</span> <span class="token parameter variable">-wq</span> <span class="token string">&quot;<span class="token variable">$f</span>&quot;</span> <span class="token variable">$md5dir</span>/md5_b.txt</span>
<span class="line">  <span class="token keyword">then</span> </span>
<span class="line">    <span class="token comment">#-w全字符匹配，$f$--以$f变量全字符结尾的字符串，防止1.js.com.js 1.js 这种文件比较时错误</span></span>
<span class="line">    <span class="token comment">#也可以考虑使用长度控制 echo &quot;$f&quot;|wc -L</span></span>
<span class="line">    <span class="token assign-left variable">md5_a</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token function">grep</span> <span class="token parameter variable">-w</span> $f$ $md5dir/md5.txt<span class="token operator">|</span><span class="token function">grep</span> <span class="token parameter variable">-v</span> <span class="token string">&quot;*.keep&quot;</span><span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;{print $1}&#39;</span><span class="token variable">\`</span></span></span>
<span class="line">    <span class="token assign-left variable">md5_b</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token function">grep</span> <span class="token parameter variable">-w</span> $f$ $md5dir/md5_b.txt<span class="token operator">|</span><span class="token function">grep</span> <span class="token parameter variable">-v</span> <span class="token string">&quot;*.keep&quot;</span><span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;{print $1}&#39;</span><span class="token variable">\`</span></span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">&quot;<span class="token variable">$md5_a</span>&quot;</span> <span class="token operator">!=</span> <span class="token string">&quot;<span class="token variable">$md5_b</span>&quot;</span> <span class="token punctuation">]</span></span>
<span class="line">    <span class="token keyword">then</span> </span>
<span class="line">      <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$f</span> changde.&quot;</span></span>
<span class="line">    <span class="token keyword">fi</span></span>
<span class="line">  <span class="token keyword">else</span>     </span>
<span class="line">    <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$f</span> deleted.&quot;</span></span>
<span class="line">  <span class="token keyword">fi</span></span>
<span class="line"><span class="token keyword">done</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="命令行中的参数传递" tabindex="-1"><a class="header-anchor" href="#命令行中的参数传递"><span>命令行中的参数传递</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token shebang important">#!/bin/bash</span></span>
<span class="line"><span class="token comment"># using a global variable to pass a value</span></span>
<span class="line"><span class="token keyword">function</span> <span class="token function-name function">db1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment"># $1和$2 不能从命令行中传递，只能调用函数时，手动传递</span></span>
<span class="line">    <span class="token builtin class-name">echo</span> <span class="token variable"><span class="token variable">$((</span>$<span class="token number">1</span> <span class="token operator">*</span> $<span class="token number">2</span><span class="token variable">))</span></span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$#</span> <span class="token parameter variable">-eq</span> <span class="token number">2</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span></span>
<span class="line">    <span class="token assign-left variable">value</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>db1 $1 $2<span class="token variable">)</span></span></span>
<span class="line">    <span class="token builtin class-name">echo</span> <span class="token string">&quot;The result is <span class="token variable">$value</span>&quot;</span></span>
<span class="line"><span class="token keyword">else</span></span>
<span class="line">    <span class="token builtin class-name">echo</span> <span class="token string">&quot;Usage: badtest1 a b&quot;</span></span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="调用外部脚本方法" tabindex="-1"><a class="header-anchor" href="#调用外部脚本方法"><span>调用外部脚本方法</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">外部脚本 ：脚本库.sh</span>
<span class="line"><span class="token comment">#!/bin/bash</span></span>
<span class="line"><span class="token comment"># myscript functions</span></span>
<span class="line"><span class="token keyword">function</span> <span class="token function-name function">addem</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token builtin class-name">echo</span> <span class="token variable"><span class="token variable">$((</span>$<span class="token number">1</span> <span class="token operator">+</span> $<span class="token number">2</span><span class="token variable">))</span></span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token keyword">function</span> <span class="token function-name function">multem</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token builtin class-name">echo</span> <span class="token variable"><span class="token variable">$((</span>$<span class="token number">1</span> <span class="token operator">*</span> $<span class="token number">2</span><span class="token variable">))</span></span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token keyword">function</span> <span class="token function-name function">divem</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$2</span> <span class="token parameter variable">-ne</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span></span>
<span class="line">        <span class="token builtin class-name">echo</span> <span class="token variable"><span class="token variable">$((</span>$<span class="token number">1</span> <span class="token operator">/</span> $<span class="token number">2</span><span class="token variable">))</span></span></span>
<span class="line">    <span class="token keyword">else</span></span>
<span class="line">        <span class="token builtin class-name">echo</span> <span class="token parameter variable">-1</span></span>
<span class="line">    <span class="token keyword">fi</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">使用库函数.sh </span>
<span class="line"><span class="token comment">#!/bin/bash</span></span>
<span class="line"><span class="token comment">#using a library file the wrong way</span></span>
<span class="line"><span class="token comment">#两个. .之间有空格，等同于 source ./脚本库.sh</span></span>
<span class="line"><span class="token builtin class-name">.</span> ./脚本库.sh</span>
<span class="line"><span class="token assign-left variable">result</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>addem <span class="token number">10</span> <span class="token number">15</span><span class="token variable">)</span></span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&quot;The result is <span class="token variable">$result</span>&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="局部变量" tabindex="-1"><a class="header-anchor" href="#局部变量"><span>局部变量</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token shebang important">#!/bin/bash</span></span>
<span class="line"><span class="token comment"># demonstrating the local keyword</span></span>
<span class="line"><span class="token keyword">function</span> <span class="token function-name function">func1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token builtin class-name">local</span> <span class="token assign-left variable">temp</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$((</span>$value <span class="token operator">+</span> <span class="token number">5</span><span class="token variable">))</span></span></span>
<span class="line">    <span class="token assign-left variable">result</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$((</span>$temp <span class="token operator">*</span> <span class="token number">2</span><span class="token variable">))</span></span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token assign-left variable">temp</span><span class="token operator">=</span><span class="token number">4</span></span>
<span class="line"><span class="token assign-left variable">value</span><span class="token operator">=</span><span class="token number">6</span></span>
<span class="line">func1</span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&quot;The result is <span class="token variable">$result</span>&quot;</span></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$temp</span> <span class="token parameter variable">-gt</span> <span class="token variable">$value</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span></span>
<span class="line">    <span class="token builtin class-name">echo</span> <span class="token string">&quot;temp is larger&quot;</span></span>
<span class="line"><span class="token keyword">else</span></span>
<span class="line">    <span class="token builtin class-name">echo</span> <span class="token string">&quot;temp is smaller&quot;</span></span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="系统信息" tabindex="-1"><a class="header-anchor" href="#系统信息"><span>系统信息</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token shebang important">#!/bin/bash</span></span>
<span class="line"><span class="token function-name function">disk_info</span> <span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">   <span class="token builtin class-name">echo</span> <span class="token string">&quot;======================disk info========================&quot;</span></span>
<span class="line">   <span class="token function">df</span> -ThP<span class="token operator">|</span><span class="token function">column</span> <span class="token parameter variable">-t</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token function-name function">cpu_info</span> <span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">   <span class="token builtin class-name">echo</span> <span class="token string">&quot;=======================cpu info========================&quot;</span></span>
<span class="line">   <span class="token builtin class-name">echo</span> <span class="token string">&quot;cpu processor is <span class="token variable"><span class="token variable">$(</span><span class="token function">grep</span> <span class="token string">&quot;processor&quot;</span> /proc/cpuinfo <span class="token operator">|</span><span class="token function">wc</span> <span class="token parameter variable">-l</span><span class="token variable">)</span></span>&quot;</span></span>
<span class="line">   <span class="token builtin class-name">echo</span> <span class="token string">&quot;cpu mode name is <span class="token variable"><span class="token variable">$(</span><span class="token function">grep</span> <span class="token string">&quot;model name&quot;</span> /proc/cpuinfo <span class="token operator">|</span><span class="token function">uniq</span><span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;{print $4,$5,$6,$7,$8,$9}&#39;</span><span class="token variable">)</span></span>&quot;</span></span>
<span class="line">   <span class="token function">grep</span> <span class="token string">&quot;cpu MHz&quot;</span> /proc/cpuinfo <span class="token operator">|</span><span class="token function">uniq</span> <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;{print $1,$2&quot;:&quot;$4}&#39;</span></span>
<span class="line">   <span class="token function">awk</span> <span class="token string">&#39;/cache size/ {print $1,$2&quot;:&quot;$4$5}&#39;</span> /proc/cpuinfo <span class="token operator">|</span><span class="token function">uniq</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token function-name function">mem_info</span> <span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">   <span class="token builtin class-name">echo</span> <span class="token string">&quot;=====================memory info========================&quot;</span></span>
<span class="line">   <span class="token assign-left variable">MemTotal</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">awk</span> <span class="token string">&#39;/MemTotal/ {print $2}&#39;</span> /proc/meminfo<span class="token variable">)</span></span></span>
<span class="line">   <span class="token assign-left variable">MemFree</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">awk</span> <span class="token string">&#39;/MemFree/ {print $2}&#39;</span> /proc/meminfo<span class="token variable">)</span></span></span>
<span class="line">   <span class="token assign-left variable">Buffers</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">awk</span> <span class="token string">&#39;/^Buffers:/ {print $2}&#39;</span> /proc/meminfo<span class="token variable">)</span></span></span>
<span class="line">   <span class="token assign-left variable">Cached</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">awk</span> <span class="token string">&#39;/^Cached:/ {print $2}&#39;</span> /proc/meminfo<span class="token variable">)</span></span></span>
<span class="line">   <span class="token assign-left variable">FreeMem</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$((</span>$MemFree<span class="token operator">/</span><span class="token number">1024</span><span class="token operator">+</span>$Buffers<span class="token operator">/</span><span class="token number">1024</span><span class="token operator">+</span>$Cached<span class="token operator">/</span><span class="token number">1024</span><span class="token variable">))</span></span></span>
<span class="line">   <span class="token assign-left variable">UsedMem</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$((</span>$MemTotal<span class="token operator">/</span><span class="token number">1024</span><span class="token operator">-</span>$FreeMem<span class="token variable">))</span></span></span>
<span class="line">   <span class="token builtin class-name">echo</span> <span class="token string">&quot;Total memory is <span class="token variable"><span class="token variable">$((</span>$MemTotal<span class="token operator">/</span><span class="token number">1024</span><span class="token variable">))</span></span> MB&quot;</span></span>
<span class="line">   <span class="token builtin class-name">echo</span> <span class="token string">&quot;Free  memory is <span class="token variable">\${FreeMem}</span> MB&quot;</span></span>
<span class="line">   <span class="token builtin class-name">echo</span> <span class="token string">&quot;Used  memory is <span class="token variable">\${UsedMem}</span> MB&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token comment">#负载情况</span></span>
<span class="line"><span class="token function-name function">loadavg_info</span> <span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">   <span class="token builtin class-name">echo</span> <span class="token string">&quot;===================load average info====================&quot;</span></span>
<span class="line">   <span class="token assign-left variable">Load1</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">awk</span>  <span class="token string">&#39;{print $1}&#39;</span> /proc/loadavg<span class="token variable">)</span></span></span>
<span class="line">   <span class="token assign-left variable">Load5</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">awk</span>  <span class="token string">&#39;{print $2}&#39;</span> /proc/loadavg<span class="token variable">)</span></span></span>
<span class="line">   <span class="token assign-left variable">Load10</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">awk</span> <span class="token string">&#39;{print $3}&#39;</span> /proc/loadavg<span class="token variable">)</span></span></span>
<span class="line">   <span class="token builtin class-name">echo</span> <span class="token string">&quot;Loadavg in 1  min is <span class="token variable">$Load1</span>&quot;</span></span>
<span class="line">   <span class="token builtin class-name">echo</span> <span class="token string">&quot;Loadavg in 5  min is <span class="token variable">$Load5</span>&quot;</span></span>
<span class="line">   <span class="token builtin class-name">echo</span> <span class="token string">&quot;Loadavg in 10 min is <span class="token variable">$Load10</span>&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token function-name function">network_info</span> <span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">   <span class="token builtin class-name">echo</span> <span class="token string">&quot;=====================network info=======================&quot;</span></span>
<span class="line">   <span class="token assign-left variable">network_card</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">ip</span> addr <span class="token operator">|</span><span class="token function">grep</span> inet <span class="token operator">|</span><span class="token function">egrep</span> <span class="token parameter variable">-v</span> <span class="token string">&quot;inet6|127.0.0.1&quot;</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;{print $NF}&#39;</span><span class="token variable">)</span></span></span>
<span class="line">   <span class="token assign-left variable">IP</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">ip</span> addr <span class="token operator">|</span><span class="token function">grep</span> inet <span class="token operator">|</span><span class="token function">egrep</span> <span class="token parameter variable">-v</span> <span class="token string">&quot;inet6|127.0.0.1&quot;</span> <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;{print $2}&#39;</span> <span class="token operator">|</span><span class="token function">awk</span> <span class="token parameter variable">-F</span> <span class="token string">&quot;/&quot;</span> <span class="token string">&#39;{print $1}&#39;</span><span class="token variable">)</span></span></span>
<span class="line">   <span class="token assign-left variable">MAC</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">cat</span> /sys/class/net/$network_card/address<span class="token variable">)</span></span> </span>
<span class="line">   <span class="token builtin class-name">echo</span> <span class="token string">&quot;network: <span class="token variable">$network_card</span>  address is  <span class="token variable">$IP</span>&quot;</span></span>
<span class="line">   <span class="token builtin class-name">echo</span> <span class="token string">&quot; IP: <span class="token variable">$IP</span>&quot;</span></span>
<span class="line">   <span class="token builtin class-name">echo</span> <span class="token string">&quot;MAC: <span class="token variable">$MAC</span>&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 执行函数</span></span>
<span class="line">disk_info </span>
<span class="line">cpu_info</span>
<span class="line">mem_info </span>
<span class="line"><span class="token comment">#负载情况</span></span>
<span class="line">loadavg_info   </span>
<span class="line">network_info</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="清理日志" tabindex="-1"><a class="header-anchor" href="#清理日志"><span>清理日志</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token shebang important">#!/bin/bash</span></span>
<span class="line"><span class="token assign-left variable">dir1</span><span class="token operator">=</span>/opt/cloud/instances/           <span class="token comment">#/opt/cloud/instances/ 删除15天前的       </span></span>
<span class="line"><span class="token assign-left variable">dir2</span><span class="token operator">=</span>/opt/cloud/log/                      <span class="token comment">#/opt/cloud/log/ 删除7天前的</span></span>
<span class="line"> </span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token parameter variable">-d</span> <span class="token variable">$dir1</span> <span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">then</span></span>
<span class="line">    <span class="token function">find</span> <span class="token variable">$dir1</span> <span class="token parameter variable">-type</span> f <span class="token parameter variable">-name</span> <span class="token string">&quot;*.log&quot;</span> <span class="token parameter variable">-mtime</span> +15 <span class="token operator">|</span><span class="token function">xargs</span> <span class="token function">rm</span> <span class="token parameter variable">-f</span></span>
<span class="line"><span class="token keyword">elif</span> <span class="token punctuation">[</span> <span class="token parameter variable">-d</span> <span class="token variable">$dir2</span> <span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">then</span></span>
<span class="line">    <span class="token function">find</span> <span class="token variable">$dir2</span> <span class="token parameter variable">-type</span> f <span class="token parameter variable">-mtime</span> +7 <span class="token operator">|</span><span class="token function">xargs</span> <span class="token function">rm</span> <span class="token parameter variable">-f</span></span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="io使用率" tabindex="-1"><a class="header-anchor" href="#io使用率"><span>IO使用率</span></a></h2><p>监控磁盘IO使用率，并找出哪个进程造成磁盘使用率很高</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token shebang important">#!/bin/bash</span></span>
<span class="line"><span class="token comment">##监控磁盘IO使用率，并找出哪个进程造成磁盘使用率很高</span></span>
<span class="line"><span class="token comment">##该脚本需要写一个常驻循环</span></span>
<span class="line"><span class="token comment">#判断机器上是否安装iostat命令</span></span>
<span class="line"><span class="token keyword">if</span> <span class="token operator">!</span> <span class="token function">which</span> iostat <span class="token operator">&amp;&gt;</span>/dev/null</span>
<span class="line"><span class="token keyword">then</span></span>
<span class="line">    yum <span class="token function">install</span> <span class="token parameter variable">-y</span> sysstat</span>
<span class="line">    <span class="token comment">#如果你的机器为ubuntu，请使用这个命令：apt-get install -y sysstat</span></span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"><span class="token comment">#判断机器上是否安装iotop命令</span></span>
<span class="line"><span class="token keyword">if</span> <span class="token operator">!</span> <span class="token function">which</span> iotop <span class="token operator">&amp;&gt;</span>/dev/null</span>
<span class="line"><span class="token keyword">then</span></span>
<span class="line">    yum <span class="token function">install</span> <span class="token parameter variable">-y</span> iotop</span>
<span class="line">    <span class="token comment">#如果你的机器为ubuntu，请使用这个命令：apt-get install -y iotop</span></span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"><span class="token comment">#定义记录日志的目录</span></span>
<span class="line"><span class="token assign-left variable">logdir</span><span class="token operator">=</span>/tmp/iolog</span>
<span class="line"><span class="token punctuation">[</span> <span class="token parameter variable">-d</span> <span class="token variable">$logdir</span> <span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token function">mkdir</span> <span class="token variable">$logdir</span></span>
<span class="line"><span class="token comment">#定义日志名字</span></span>
<span class="line"><span class="token assign-left variable">dt</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token function">date</span> +%F<span class="token variable">\`</span></span></span>
<span class="line"><span class="token comment">#定义获取io的函数（取5次平均值）</span></span>
<span class="line"><span class="token function-name function">get_io</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">{</span>    </span>
<span class="line">    iostat <span class="token parameter variable">-dx</span> <span class="token number">1</span> <span class="token number">5</span> <span class="token operator">&gt;</span> <span class="token variable">$logdir</span>/iostat.log</span>
<span class="line">    <span class="token assign-left variable">sum</span><span class="token operator">=</span><span class="token number">0</span></span>
<span class="line">    <span class="token comment">#取最后一列的%util值循环遍历然后相加</span></span>
<span class="line">    <span class="token keyword">for</span> <span class="token for-or-select variable">ut</span> <span class="token keyword">in</span>  <span class="token variable"><span class="token variable">\`</span><span class="token function">grep</span> <span class="token string">&quot;^<span class="token variable">$1</span>&quot;</span> $logdir/iostat.log<span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;{print $NF}&#39;</span><span class="token operator">|</span><span class="token function">cut</span> -d. <span class="token parameter variable">-f1</span><span class="token variable">\`</span></span></span>
<span class="line">    <span class="token keyword">do</span></span>
<span class="line">        <span class="token assign-left variable">sum</span><span class="token operator">=</span>$<span class="token punctuation">[</span><span class="token variable">$sum</span>+<span class="token variable">$ut</span><span class="token punctuation">]</span></span>
<span class="line">    <span class="token keyword">done</span></span>
<span class="line">    <span class="token builtin class-name">echo</span> $<span class="token punctuation">[</span><span class="token variable">$sum</span>/5<span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token comment">#这里的true表示条件为真</span></span>
<span class="line"><span class="token keyword">while</span> <span class="token boolean">true</span></span>
<span class="line"><span class="token keyword">do</span></span>
<span class="line">    <span class="token comment">#获取所有设备，对所有设备名遍历</span></span>
<span class="line">    <span class="token keyword">for</span> <span class="token for-or-select variable">d</span> <span class="token keyword">in</span> <span class="token variable"><span class="token variable">\`</span>iostat -dx<span class="token operator">|</span><span class="token function">egrep</span> <span class="token parameter variable">-v</span> <span class="token string">&#39;^$|Device:|CPU\\)&#39;</span><span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;{print $1}&#39;</span><span class="token variable">\`</span></span></span>
<span class="line">    <span class="token keyword">do</span></span>
<span class="line">        <span class="token assign-left variable">io</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span>get_io $d<span class="token variable">\`</span></span></span>
<span class="line">        <span class="token comment">#如果io使用率大于等于80</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$io</span> <span class="token parameter variable">-ge</span> <span class="token number">80</span> <span class="token punctuation">]</span></span>
<span class="line">        <span class="token keyword">then</span></span>
<span class="line">            <span class="token comment">#向日志里记录时间、iostat和iotop信息</span></span>
<span class="line">            <span class="token function">date</span> <span class="token operator">&gt;&gt;</span> <span class="token variable">$logdir</span>/<span class="token variable">$dt</span>   </span>
<span class="line">            <span class="token function">cat</span> <span class="token variable">$logdir</span>/iostat.log <span class="token operator">&gt;&gt;</span><span class="token variable">$logdir</span>/<span class="token variable">$dt</span></span>
<span class="line">            iotop <span class="token parameter variable">-obn2</span> <span class="token operator">&gt;&gt;</span><span class="token variable">$logdir</span>/<span class="token variable">$dt</span></span>
<span class="line">            <span class="token builtin class-name">echo</span> <span class="token string">&quot;####################&quot;</span> <span class="token operator">&gt;&gt;</span><span class="token variable">$logdir</span>/<span class="token variable">$dt</span></span>
<span class="line">        <span class="token keyword">fi</span></span>
<span class="line">    <span class="token comment">#休眠10秒，继续以上步骤</span></span>
<span class="line">    <span class="token keyword">done</span></span>
<span class="line">    <span class="token function">sleep</span> <span class="token number">10</span></span>
<span class="line"><span class="token keyword">done</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="截取字符串" tabindex="-1"><a class="header-anchor" href="#截取字符串"><span>截取字符串</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token variable">\${string<span class="token operator">:</span> start <span class="token operator">:</span>length}</span> 从 string 字符串的左边第 start 个字符开始，向右截取 length 个字符。</span>
<span class="line"><span class="token variable">\${string<span class="token operator">:</span> start}</span> 从 string 字符串的左边第 start 个字符开始截取，直到最后。</span>
<span class="line"><span class="token variable">\${string<span class="token operator">:</span> 0-start <span class="token operator">:</span>length}</span> 从 string 字符串的右边第 start 个字符开始，向右截取 length 个字符。</span>
<span class="line"><span class="token variable">\${string<span class="token operator">:</span> 0-start}</span> 从 string 字符串的右边第 start 个字符开始截取，直到最后。</span>
<span class="line"><span class="token variable">\${string<span class="token operator">#</span>*chars}</span>  从 string 字符串第一次出现 *chars 的位置开始，截取 *chars 右边的所有字符。</span>
<span class="line"><span class="token variable">\${string<span class="token operator">##</span>*chars}</span> 从 string 字符串最后一次出现 *chars 的位置开始，截取 *chars 右边的所有字符。</span>
<span class="line"><span class="token variable">\${string<span class="token operator">%</span>chars*}</span>\`从 string 字符串第一次出现 chars* 的位置开始，截取 *chars 左边的所有字符。</span>
<span class="line"><span class="token variable">\${string<span class="token operator">%%</span>chars*}</span> 从 string 字符串最后一次出现 chars* 的位置开始，截取 *chars 左边的所有字符。</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>示例</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token shebang important">#!/bin/bash</span></span>
<span class="line"><span class="token assign-left variable">str</span><span class="token operator">=</span><span class="token string">&quot;hello world !&quot;</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token variable">\${str<span class="token operator">:</span>2<span class="token operator">:</span>3}</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token variable">\${str<span class="token operator">:</span>5}</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token variable">\${str<span class="token operator">:</span>0-7}</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token variable">\${str<span class="token operator">:</span>0-7<span class="token operator">:</span>3}</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token variable">\${str<span class="token operator">#</span>*o}</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token variable">\${str<span class="token operator">##</span>*o}</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token variable">\${str<span class="token operator">%</span>o*}</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token variable">\${str<span class="token operator">%%</span>o*}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">llo</span>
<span class="line">world !</span>
<span class="line">world !</span>
<span class="line">wor</span>
<span class="line">world !</span>
<span class="line">rld !</span>
<span class="line">hello w</span>
<span class="line">hell</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>注意：</strong> 使用<code>%</code>和<code>#</code>时，后边的<code>*</code>位置不同</p><h2 id="解压并重启服务" tabindex="-1"><a class="header-anchor" href="#解压并重启服务"><span>解压并重启服务</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token shebang important">#!/bin/bash</span></span>
<span class="line"><span class="token comment">#domain目录</span></span>
<span class="line"><span class="token assign-left variable">domain_home</span><span class="token operator">=</span>/opt/web11/weblogic/user_projects/domains/cqsi</span>
<span class="line"><span class="token keyword">function</span> <span class="token function-name function">restart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">#如果进程pid存在，kill掉</span></span>
<span class="line">  <span class="token assign-left variable">PID</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token function">ps</span> <span class="token parameter variable">-ef</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token function">java</span> <span class="token operator">|</span> <span class="token function">grep</span> cqsiServer <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-v</span> <span class="token function">grep</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;{print $2}&#39;</span><span class="token variable">\`</span></span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">\${PID}</span> <span class="token punctuation">]</span></span>
<span class="line">  <span class="token keyword">then</span></span>
<span class="line">    <span class="token function">kill</span> <span class="token parameter variable">-9</span> <span class="token variable">\${PID}</span></span>
<span class="line">  <span class="token keyword">fi</span></span>
<span class="line">  <span class="token comment">#清理缓存  </span></span>
<span class="line">  <span class="token function">rm</span> <span class="token parameter variable">-rf</span> <span class="token variable">$domain_home</span>/servers/cqsiServer/tmp <span class="token variable">$domain_home</span>/servers/cqsiServer/cache</span>
<span class="line">  <span class="token comment">#后台启动并重定向日志输出文件</span></span>
<span class="line">  <span class="token function">nohup</span> <span class="token function">sh</span> <span class="token variable">$domain_home</span>/startWebLogic.sh <span class="token operator">&gt;</span><span class="token variable">$domain_home</span>/nohup.log  <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span> <span class="token operator">&amp;</span></span>
<span class="line">  <span class="token comment">#查看日志  </span></span>
<span class="line">  <span class="token function">tail</span> <span class="token parameter variable">-f</span> <span class="token variable">$domain_home</span>/nohup.log</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token comment">#判断EAPDomain.zip是否上传</span></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token parameter variable">-f</span> EAPDomain.zip <span class="token punctuation">]</span> </span>
<span class="line"><span class="token keyword">then</span> </span>
<span class="line">  <span class="token builtin class-name">echo</span> <span class="token string">&quot;开始解压EAPDomain.zip………………………………&quot;</span> </span>
<span class="line">  <span class="token function">unzip</span> <span class="token parameter variable">-o</span> ./EAPDomain.zip</span>
<span class="line"><span class="token keyword">else</span></span>
<span class="line">  <span class="token builtin class-name">echo</span> <span class="token string">&quot;不存在EAPDomain.zip文件，请检查文件是否已经上传！&quot;</span></span>
<span class="line">  <span class="token builtin class-name">exit</span> <span class="token number">1</span></span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$?</span> <span class="token parameter variable">-eq</span> <span class="token number">0</span> <span class="token punctuation">]</span> </span>
<span class="line"><span class="token keyword">then</span> </span>
<span class="line">  <span class="token builtin class-name">echo</span> <span class="token string">&quot;解压完成………………………………&quot;</span></span>
<span class="line">  <span class="token builtin class-name">echo</span> <span class="token string">&quot;开始执行web.xml等文件替换，执行unzip overwrite.zip………………………………&quot;</span></span>
<span class="line">  <span class="token function">unzip</span> <span class="token parameter variable">-o</span> ./overwrite.zip</span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$?</span> <span class="token parameter variable">-eq</span> <span class="token number">0</span> <span class="token punctuation">]</span></span>
<span class="line"><span class="token keyword">then</span></span>
<span class="line">  <span class="token builtin class-name">echo</span> <span class="token string">&quot;替换完成………………………………&quot;</span></span>
<span class="line">  <span class="token builtin class-name">echo</span> <span class="token string">&quot;版本更新成功！！！&quot;</span></span>
<span class="line"><span class="token keyword">else</span></span>
<span class="line">  <span class="token builtin class-name">echo</span> <span class="token string">&quot;替换文件失败，请检查overwrite.zip文件&quot;</span> </span>
<span class="line">  <span class="token builtin class-name">exit</span> <span class="token number">1</span> </span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$?</span> <span class="token parameter variable">-eq</span> <span class="token number">0</span> <span class="token punctuation">]</span></span>
<span class="line"><span class="token keyword">then</span> </span>
<span class="line">  <span class="token builtin class-name">echo</span> <span class="token string">&quot;执行授权操作&quot;</span></span>
<span class="line">  <span class="token function">chmod</span> <span class="token number">744</span> <span class="token parameter variable">-R</span> ./EAPDomain</span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$?</span> <span class="token parameter variable">-eq</span> <span class="token number">0</span> <span class="token punctuation">]</span></span>
<span class="line"><span class="token keyword">then</span> </span>
<span class="line">  <span class="token builtin class-name">echo</span> <span class="token string">&quot;授权744成功！&quot;</span></span>
<span class="line"><span class="token keyword">else</span></span>
<span class="line">  <span class="token builtin class-name">echo</span> <span class="token string">&quot;授权失败！不影响版本更新内容，可能影响ftp工具上传单独文件&quot;</span></span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$?</span> <span class="token parameter variable">-ne</span> <span class="token number">0</span> <span class="token punctuation">]</span></span>
<span class="line"><span class="token keyword">then</span> </span>
<span class="line">  <span class="token builtin class-name">exit</span> <span class="token number">1</span></span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"></span>
<span class="line"><span class="token builtin class-name">read</span> <span class="token parameter variable">-p</span> <span class="token string">&quot;是否现在重新启动服务y/n，是请输入y，否请输入n: &quot;</span> option</span>
<span class="line"><span class="token keyword">case</span> <span class="token variable">$option</span> <span class="token keyword">in</span> </span>
<span class="line">  y<span class="token punctuation">)</span></span>
<span class="line">    restart</span>
<span class="line">  	<span class="token punctuation">;</span><span class="token punctuation">;</span></span>
<span class="line">  n<span class="token punctuation">)</span></span>
<span class="line">    <span class="token builtin class-name">echo</span> <span class="token string">&quot;您选择了不重新启动服务，如有class、配置文件等更新，系统可能不生效！&quot;</span></span>
<span class="line">    <span class="token builtin class-name">exit</span> <span class="token number">0</span> </span>
<span class="line">  	<span class="token punctuation">;</span><span class="token punctuation">;</span></span>
<span class="line">  *<span class="token punctuation">)</span></span>
<span class="line">  	<span class="token builtin class-name">echo</span> <span class="token string">&quot;输入参数错误！&quot;</span></span>
<span class="line">    <span class="token builtin class-name">exit</span> <span class="token number">1</span></span>
<span class="line">    <span class="token punctuation">;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">esac</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="创建并写入文件" tabindex="-1"><a class="header-anchor" href="#创建并写入文件"><span>创建并写入文件</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">cat</span> <span class="token operator">&gt;</span> welcome.txt <span class="token operator">&lt;&lt;</span> <span class="token string">EOF</span>
<span class="line">欢迎来到Shell编程世界！</span>
<span class="line">这里是一个充满挑战和乐趣的地方。</span>
<span class="line">EOF</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="使用变量" tabindex="-1"><a class="header-anchor" href="#使用变量"><span>使用变量</span></a></h3><p>在<code>EOF</code>块中可以使用<code>Shell</code>变量来实现动态生成文件内容。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token assign-left variable">name</span><span class="token operator">=</span><span class="token string">&quot;Shell 编程&quot;</span></span>
<span class="line"><span class="token function">cat</span> <span class="token operator">&gt;</span> message.txt <span class="token operator">&lt;&lt;</span> <span class="token string">EOF</span>
<span class="line">欢迎进入 <span class="token variable">\${name}</span> 的世界！</span>
<span class="line">EOF</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样写入的内容就是“欢迎进入 Shell 编程 的世界！”</p><h3 id="防止变量扩展" tabindex="-1"><a class="header-anchor" href="#防止变量扩展"><span>防止变量扩展</span></a></h3><p>如果希望<code>EOF</code>块中的内容原样输出（不进行变量扩展），可以使用引号将<code>EOF</code>包裹起来。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">cat</span> <span class="token operator">&gt;</span> example.txt <span class="token operator">&lt;&lt;</span> <span class="token string">&#39;EOF&#39;</span>
<span class="line">文件路径：$HOME</span>
<span class="line">EOF</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样<code>$HOME</code>不会被替换为实际的家目录路径。</p><h2 id="mysql-备份和还原-dcoker-方式" tabindex="-1"><a class="header-anchor" href="#mysql-备份和还原-dcoker-方式"><span>Mysql 备份和还原（dcoker 方式）</span></a></h2><p>根据脚本中的汉字按需修改</p><h3 id="固定备份模式" tabindex="-1"><a class="header-anchor" href="#固定备份模式"><span>固定备份模式</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token shebang important">#!/bin/bash</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 容器名称</span></span>
<span class="line"><span class="token assign-left variable">containerName</span><span class="token operator">=</span>你的容器名称</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 容器id</span></span>
<span class="line"><span class="token assign-left variable">containerId</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token function">docker</span> <span class="token function">ps</span> <span class="token operator">|</span><span class="token function">grep</span> $containerName <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;{print $1}&#39;</span><span class="token variable">\`</span></span></span>
<span class="line"></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token variable">$containerId</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 容器中备份路径（需要挂载到宿主机的路径）</span></span>
<span class="line"></span>
<span class="line"><span class="token assign-left variable">containerPath</span><span class="token operator">=</span><span class="token string">&#39;你容器中的一个文件路径&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token assign-left variable">dbPassword</span><span class="token operator">=</span><span class="token string">&#39;你的mysql密码&#39;</span></span>
<span class="line"><span class="token comment"># 备份的数据库</span></span>
<span class="line"><span class="token assign-left variable">dbNames</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token string">&#39;你要备份的数据库名称1&#39;</span> <span class="token string">&#39;你要备份的数据库名称2&#39;</span> <span class="token string">&#39;你要备份的数据库名称3&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># docker备份</span></span>
<span class="line"><span class="token keyword">for</span> <span class="token for-or-select variable">dbName</span> <span class="token keyword">in</span> <span class="token string">&quot;<span class="token variable">\${dbNames<span class="token punctuation">[</span>@<span class="token punctuation">]</span>}</span>&quot;</span><span class="token punctuation">;</span> <span class="token keyword">do</span></span>
<span class="line">   <span class="token builtin class-name">echo</span> <span class="token string">&#39;开始执行docker备份:&#39;</span><span class="token variable">$dbName</span></span>
<span class="line">   <span class="token assign-left variable">command</span><span class="token operator">=</span><span class="token string">&quot;mysqldump -uroot -p<span class="token variable">$dbPassword</span> -h127.0.0.1 --databases <span class="token variable">$dbName</span> &gt; <span class="token variable">$containerPath</span>/你的备份文件前缀-<span class="token variable">$dbName</span>-<span class="token variable"><span class="token variable">\`</span><span class="token function">date</span> <span class="token string">&quot;+%Y%m%d&quot;</span><span class="token variable">\`</span></span>.sql&quot;</span></span>
<span class="line">   <span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span>  <span class="token variable">$containerId</span> <span class="token function">bash</span> <span class="token parameter variable">-c</span> <span class="token string">&quot;<span class="token variable">$command</span>&quot;</span></span>
<span class="line"><span class="token keyword">done</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 归档</span></span>
<span class="line"><span class="token assign-left variable">backupSourceDir</span><span class="token operator">=</span><span class="token string">&quot;你宿主机路径，与containerPath挂载关联的宿主机路径&quot;</span></span>
<span class="line"><span class="token assign-left variable">backupDir</span><span class="token operator">=</span><span class="token string">&quot;你宿主机存放归档文件的路径&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token operator">!</span> <span class="token parameter variable">-d</span> <span class="token string">&quot;<span class="token variable">$backupDir</span>&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span></span>
<span class="line">  <span class="token function">mkdir</span> <span class="token variable">$backupDir</span></span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"></span>
<span class="line"><span class="token function">tar</span> <span class="token parameter variable">-zcvf</span> <span class="token variable">$backupDir</span>/你的备份文件前缀-<span class="token variable"><span class="token variable">\`</span><span class="token function">date</span> <span class="token string">&quot;+%Y%m%d&quot;</span><span class="token variable">\`</span></span>.tar.gz <span class="token variable">$backupSourceDir</span>/你的备份文件前缀*.sql</span>
<span class="line"></span>
<span class="line"><span class="token function">rm</span> <span class="token parameter variable">-rf</span> <span class="token variable">$backupSourceDir</span>/你的备份文件前缀*.sql</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="手动输入备份" tabindex="-1"><a class="header-anchor" href="#手动输入备份"><span>手动输入备份</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token shebang important">#!/bin/bash</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 需要修改的变量</span></span>
<span class="line"><span class="token comment"># 数据库容器名称（据实修改）</span></span>
<span class="line"><span class="token assign-left variable">containerName</span><span class="token operator">=</span>mysql</span>
<span class="line"><span class="token comment"># 数据库密码（据实修改）</span></span>
<span class="line"><span class="token assign-left variable">dbpassword</span><span class="token operator">=</span>你的mysql密码</span>
<span class="line"><span class="token comment"># 数据库用户</span></span>
<span class="line"><span class="token assign-left variable">dbuser</span><span class="token operator">=</span><span class="token string">&#39;root&#39;</span></span>
<span class="line"><span class="token comment"># 数据库端口</span></span>
<span class="line"><span class="token assign-left variable">dbport</span><span class="token operator">=</span><span class="token string">&#39;3306&#39;</span></span>
<span class="line"><span class="token comment"># 获取数据库容器id</span></span>
<span class="line"><span class="token assign-left variable">containerId</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">docker</span> <span class="token function">ps</span> <span class="token operator">|</span> <span class="token function">grep</span> $containerName <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;{print $1}&#39;</span><span class="token variable">)</span></span></span>
<span class="line"></span>
<span class="line"><span class="token assign-left variable">script</span><span class="token operator">=</span><span class="token string">&quot;mysqldump -uroot -p<span class="token variable">$dbpassword</span> -h127.0.0.1 -P<span class="token variable">$dbport</span>&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 输入的变量</span></span>
<span class="line"><span class="token assign-left variable">db</span><span class="token operator">=</span><span class="token string">&#39;&#39;</span></span>
<span class="line"><span class="token assign-left variable">table</span><span class="token operator">=</span><span class="token string">&#39;&#39;</span></span>
<span class="line"><span class="token assign-left variable">bakdir</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">pwd</span><span class="token variable">)</span></span></span>
<span class="line"><span class="token builtin class-name">read</span> <span class="token parameter variable">-p</span> <span class="token string">&quot;请输入要备份的数据库：&quot;</span> dbname</span>
<span class="line"></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token parameter variable">-z</span> <span class="token variable">$dbname</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span></span>
<span class="line">	<span class="token assign-left variable">db</span><span class="token operator">=</span><span class="token variable">$dbname</span></span>
<span class="line">	<span class="token builtin class-name">echo</span> <span class="token string">&quot;输入为空，请重新输入&quot;</span></span>
<span class="line">	<span class="token builtin class-name">exit</span> <span class="token number">1</span></span>
<span class="line"><span class="token keyword">else</span></span>
<span class="line">	<span class="token assign-left variable">db</span><span class="token operator">=</span><span class="token variable">$dbname</span></span>
<span class="line">	<span class="token assign-left variable">script</span><span class="token operator">=</span><span class="token variable">$script</span><span class="token string">&quot; --databases <span class="token variable">$db</span>&quot;</span></span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"></span>
<span class="line"><span class="token builtin class-name">read</span> <span class="token parameter variable">-p</span> <span class="token string">&quot;请输入要备份的表（多个表使用空格分割），跳过请输入回车：&quot;</span> <span class="token parameter variable">-a</span> tablenames</span>
<span class="line"></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token parameter variable">-z</span> <span class="token variable">$tablenames</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span></span>
<span class="line">	<span class="token builtin class-name">echo</span> <span class="token string">&quot;未指定备份表，将进行<span class="token variable">$db</span>全库导出&quot;</span></span>
<span class="line"><span class="token keyword">else</span></span>
<span class="line">	<span class="token keyword">for</span> <span class="token for-or-select variable">arg</span> <span class="token keyword">in</span> <span class="token string">&quot;<span class="token variable">\${tablenames<span class="token punctuation">[</span>@<span class="token punctuation">]</span>}</span>&quot;</span><span class="token punctuation">;</span> <span class="token keyword">do</span></span>
<span class="line">		<span class="token assign-left variable">table</span><span class="token operator">+=</span><span class="token string">&quot;<span class="token variable">$arg</span> &quot;</span></span>
<span class="line">	<span class="token keyword">done</span></span>
<span class="line">	<span class="token comment"># 拼接脚本</span></span>
<span class="line">	<span class="token assign-left variable">script</span><span class="token operator">=</span><span class="token variable">$script</span><span class="token string">&quot; --tables <span class="token variable">$table</span> &quot;</span></span>
<span class="line"><span class="token builtin class-name">:</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&#39;where&#39;</span>
<span class="line">	read -p &quot;请输入 where 条件（默认无），跳过请输入回车：&quot; where</span>
<span class="line">	if [ -n &quot;$where&quot; ]; then </span>
<span class="line">		echo &quot;where:&quot; $where</span>
<span class="line">		safe_where=$(printf &quot;%s&quot; &quot;$where&quot; | sed &quot;s/&#39;/\\\\\\\\&#39;/g&quot;)</span>
<span class="line">		echo &quot;safe_where:&quot; $safe_where</span>
<span class="line">		script=&quot;$script --where &#39;$safe_where&#39;&quot;</span>
<span class="line">	fi</span>
<span class="line">where</span></span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 是否导出建表语句</span></span>
<span class="line"><span class="token builtin class-name">read</span> <span class="token parameter variable">-p</span> <span class="token string">&quot;是否导出create语句（是输入y/yes，否输入n/no，默认不导出create语句），跳过请输入回车：&quot;</span> createsql</span>
<span class="line"><span class="token keyword">case</span> <span class="token variable">$createsql</span> <span class="token keyword">in</span> </span>
<span class="line">	y<span class="token operator">|</span><span class="token function">yes</span><span class="token punctuation">)</span></span>
<span class="line">		<span class="token punctuation">;</span><span class="token punctuation">;</span></span>
<span class="line">	*<span class="token punctuation">)</span></span>
<span class="line">		<span class="token assign-left variable">script</span><span class="token operator">=</span><span class="token variable">$script</span><span class="token string">&quot; --no-create-info&quot;</span></span>
<span class="line">		<span class="token punctuation">;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">esac</span></span>
<span class="line"></span>
<span class="line"><span class="token assign-left variable">filename</span><span class="token operator">=</span><span class="token variable">$db</span>-<span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> <span class="token string">&#39;+%Y%m%d%H%M%S&#39;</span><span class="token variable">)</span></span></span>
<span class="line"></span>
<span class="line"><span class="token assign-left variable">script</span><span class="token operator">=</span><span class="token variable">$script</span><span class="token string">&quot; &gt; /<span class="token variable">$filename</span>.sql&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token builtin class-name">read</span> <span class="token parameter variable">-p</span> <span class="token string">&quot;请输入导出文件路径（默认当前路径），跳过请输入回车：&quot;</span> bakpath</span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token operator">!</span> <span class="token parameter variable">-z</span> <span class="token variable">$bakpath</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span></span>
<span class="line">	<span class="token assign-left variable">bakdir</span><span class="token operator">=</span><span class="token variable">$bakpath</span></span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"></span>
<span class="line"><span class="token builtin class-name">echo</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 执行导出</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&quot;[1/4] 正在导出数据库...&quot;</span></span>
<span class="line"><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> <span class="token variable">$containerId</span> <span class="token function">bash</span> <span class="token parameter variable">-c</span> <span class="token string">&quot;<span class="token variable">$script</span>&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$?</span> <span class="token parameter variable">-eq</span> <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span></span>
<span class="line">	<span class="token builtin class-name">echo</span> <span class="token string">&quot;导出完成，准备开始执行压缩&quot;</span></span>
<span class="line">	<span class="token builtin class-name">echo</span> </span>
<span class="line"><span class="token keyword">else</span></span>
<span class="line">	<span class="token builtin class-name">echo</span> <span class="token string">&quot;导出失败！！&quot;</span></span>
<span class="line">	<span class="token builtin class-name">exit</span> <span class="token number">2</span></span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 压缩</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&quot;[2/4] 正在压缩备份文件...&quot;</span></span>
<span class="line"><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> <span class="token variable">$containerId</span> <span class="token function">bash</span> <span class="token parameter variable">-c</span> <span class="token string">&quot;tar -zcvf <span class="token variable">$filename</span>.tar.gz <span class="token variable">$filename</span>.sql&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$?</span> <span class="token parameter variable">-eq</span> <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span></span>
<span class="line">	<span class="token builtin class-name">echo</span> <span class="token string">&quot;压缩完成，准备开始执行拷贝&quot;</span></span>
<span class="line">	<span class="token builtin class-name">echo</span> </span>
<span class="line"><span class="token keyword">else</span></span>
<span class="line">	<span class="token builtin class-name">echo</span> <span class="token string">&quot;压缩失败！！&quot;</span></span>
<span class="line">	<span class="token builtin class-name">exit</span> <span class="token number">2</span></span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 拷贝</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&quot;[3/4] 正在拷贝到宿主机...&quot;</span></span>
<span class="line"><span class="token function">docker</span> <span class="token function">cp</span> <span class="token variable">$containerId</span><span class="token builtin class-name">:</span><span class="token variable">$filename</span>.tar.gz <span class="token variable">$bakdir</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$?</span> <span class="token parameter variable">-eq</span> <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span></span>
<span class="line">	<span class="token builtin class-name">echo</span> <span class="token string">&quot;拷贝完成,准备开始执行清理&quot;</span></span>
<span class="line">	<span class="token builtin class-name">echo</span> </span>
<span class="line"><span class="token keyword">else</span></span>
<span class="line">	<span class="token builtin class-name">echo</span> <span class="token string">&quot;拷贝失败！！&quot;</span></span>
<span class="line">	<span class="token builtin class-name">exit</span> <span class="token number">2</span></span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 清理容器中的文件</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&quot;[4/4] 正在清理临时文件...&quot;</span></span>
<span class="line"><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> <span class="token variable">$containerId</span> <span class="token function">bash</span> <span class="token parameter variable">-c</span> <span class="token string">&quot;rm -rf <span class="token variable">$filename</span>.tar.gz <span class="token variable">$filename</span>.sql&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$?</span> <span class="token parameter variable">-eq</span> <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span></span>
<span class="line">	<span class="token builtin class-name">echo</span> <span class="token string">&quot;清理完成!&quot;</span></span>
<span class="line">	<span class="token builtin class-name">echo</span></span>
<span class="line"><span class="token keyword">else</span></span>
<span class="line">	<span class="token builtin class-name">echo</span> <span class="token string">&quot;清理失败！！&quot;</span></span>
<span class="line">	<span class="token builtin class-name">exit</span> <span class="token number">2</span></span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&quot;=====================================================&quot;</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&quot;备份成功！文件位置: <span class="token variable">$bakdir</span>/<span class="token variable">$filename</span>.tar.gz&quot;</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&quot;=====================================================&quot;</span></span>
<span class="line"><span class="token builtin class-name">echo</span></span>
<span class="line"><span class="token builtin class-name">exit</span> <span class="token number">0</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="如何替换导出语句种的-schema" tabindex="-1"><a class="header-anchor" href="#如何替换导出语句种的-schema"><span>如何替换导出语句种的 schema</span></a></h4><p>mysqldump 导出的 sql 文件种，一般会指定 schema</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">--</span>
<span class="line">-- Current Database: <span class="token variable"><span class="token variable">\`</span>mdm<span class="token variable">\`</span></span></span>
<span class="line">--</span>
<span class="line"></span>
<span class="line">CREATE DATABASE /*<span class="token operator">!</span><span class="token number">32312</span> IF NOT EXISTS*/ <span class="token variable"><span class="token variable">\`</span>mdm<span class="token variable">\`</span></span> /*<span class="token operator">!</span><span class="token number">40100</span> DEFAULT CHARACTER SET utf8mb4 */<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">USE <span class="token variable"><span class="token variable">\`</span>mdm-server_6f433393d93d4ee9b49bcc1bd43b4c87<span class="token variable">\`</span></span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当文件过大时，vim 和普通的 sed 命令无法修改脚本，可以尝试使用如下脚本</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">perl <span class="token parameter variable">-i</span> <span class="token parameter variable">-pe</span> <span class="token string">&#39;</span>
<span class="line">if (!$replaced &amp;&amp; /^\\s*USE\\s+\`?mdm\`?\\s*;/) {</span>
<span class="line">	s/^(\\s*)USE\\s+\`?mdm\`?\\s*;/$1USE \`mdm-server_6f433393d93d4ee9b49bcc1bd43b4c87\`;/;</span>
<span class="line">	$replaced = 1;</span>
<span class="line">}</span>
<span class="line">&#39;</span> mdm-20250710190956.sql</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="还原备份" tabindex="-1"><a class="header-anchor" href="#还原备份"><span>还原备份</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token shebang important">#!/bin/bash</span></span>
<span class="line"><span class="token comment"># 需要修改的变量</span></span>
<span class="line"><span class="token comment"># 数据库密码（据实修改）</span></span>
<span class="line"><span class="token assign-left variable">dbpassword</span><span class="token operator">=</span>你的mysql密码</span>
<span class="line"><span class="token comment"># 数据库用户</span></span>
<span class="line"><span class="token assign-left variable">dbuser</span><span class="token operator">=</span><span class="token string">&#39;root&#39;</span></span>
<span class="line"><span class="token comment"># 数据库端口</span></span>
<span class="line"><span class="token assign-left variable">dbport</span><span class="token operator">=</span><span class="token string">&#39;3306&#39;</span></span>
<span class="line"><span class="token comment"># 数据库容器名称</span></span>
<span class="line"><span class="token assign-left variable">containerName</span><span class="token operator">=</span>mysql</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 获取数据库容器id</span></span>
<span class="line"><span class="token assign-left variable">containerId</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">docker</span> <span class="token function">ps</span> <span class="token operator">|</span> <span class="token function">grep</span> $containerName <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;{print $1}&#39;</span><span class="token variable">)</span></span></span>
<span class="line"></span>
<span class="line"><span class="token assign-left variable">script</span><span class="token operator">=</span><span class="token string">&quot;mysql -uroot -p<span class="token variable">$dbpassword</span> -h127.0.0.1 -P<span class="token variable">$dbport</span> -e &quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token builtin class-name">read</span> <span class="token parameter variable">-p</span> <span class="token string">&quot;请输入要执行的文件：&quot;</span> dbfile</span>
<span class="line"></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token parameter variable">-z</span> <span class="token variable">$dbfile</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span></span>
<span class="line">	<span class="token builtin class-name">echo</span> <span class="token string">&quot;输入为空，请重新输入&quot;</span></span>
<span class="line">	<span class="token builtin class-name">exit</span> <span class="token number">2</span></span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"></span>
<span class="line"><span class="token assign-left variable">filepath</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">dirname</span> $dbfile<span class="token variable">)</span></span></span>
<span class="line"><span class="token builtin class-name">cd</span> <span class="token variable">$filepath</span></span>
<span class="line"><span class="token assign-left variable">filename</span><span class="token operator">=</span><span class="token string">&#39;&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">case</span> <span class="token variable">$dbfile</span> <span class="token keyword">in</span> </span>
<span class="line">	*.tar.gz<span class="token punctuation">)</span></span>
<span class="line">		<span class="token builtin class-name">echo</span> <span class="token string">&quot;执行的文件为.tar.gz格式，执行解压&quot;</span></span>
<span class="line">		<span class="token assign-left variable">filename</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">tar</span> <span class="token parameter variable">-zxvf</span> $dbfile<span class="token variable">)</span></span></span>
<span class="line">		<span class="token punctuation">;</span><span class="token punctuation">;</span></span>
<span class="line">	*.sql<span class="token punctuation">)</span></span>
<span class="line">		<span class="token builtin class-name">echo</span> <span class="token string">&quot;执行的文件为.sql格式&quot;</span></span>
<span class="line">		<span class="token assign-left variable">filename</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">basename</span> $dbfile<span class="token variable">)</span></span></span>
<span class="line">		<span class="token punctuation">;</span><span class="token punctuation">;</span></span>
<span class="line">	*<span class="token punctuation">)</span></span>
<span class="line">		<span class="token builtin class-name">echo</span> <span class="token string">&quot;不支持的格式，请使用.tar.gz或.sql文件&quot;</span></span>
<span class="line">		<span class="token builtin class-name">exit</span> <span class="token number">2</span></span>
<span class="line">		<span class="token punctuation">;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">esac</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 拼接脚本</span></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token operator">!</span> <span class="token parameter variable">-z</span> <span class="token variable">$filename</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span></span>
<span class="line">	<span class="token assign-left variable">script</span><span class="token operator">=</span><span class="token variable">$script</span><span class="token string">&quot; <span class="token entity" title="\\&quot;">\\&quot;</span>source /<span class="token variable">$filename</span><span class="token entity" title="\\&quot;">\\&quot;</span>&quot;</span></span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"></span>
<span class="line"><span class="token builtin class-name">echo</span> </span>
<span class="line"></span>
<span class="line"><span class="token comment"># 拷贝</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&quot;[1/3] 正在向docker容器拷贝文件...&quot;</span></span>
<span class="line"><span class="token function">docker</span> <span class="token function">cp</span> <span class="token variable">$filename</span> <span class="token variable">$containerId</span>:/<span class="token variable">$filename</span></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$?</span> <span class="token parameter variable">-eq</span> <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span></span>
<span class="line">	<span class="token builtin class-name">echo</span> <span class="token string">&quot;拷贝完成，即将执行导入………………………………&quot;</span></span>
<span class="line">	<span class="token builtin class-name">echo</span></span>
<span class="line"><span class="token keyword">else</span></span>
<span class="line">	<span class="token builtin class-name">echo</span> <span class="token string">&quot;拷贝失败！！&quot;</span></span>
<span class="line">	<span class="token builtin class-name">exit</span> <span class="token number">2</span></span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&quot;[2/3] 正在执行数据库导入...&quot;</span></span>
<span class="line"><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> <span class="token variable">$containerId</span> <span class="token function">bash</span> <span class="token parameter variable">-c</span> <span class="token string">&quot;<span class="token variable">$script</span>&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$?</span> <span class="token parameter variable">-eq</span> <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span></span>
<span class="line">        <span class="token builtin class-name">echo</span> <span class="token string">&quot;执行导入完成，即将执行清理&quot;</span></span>
<span class="line">        <span class="token builtin class-name">echo</span></span>
<span class="line"><span class="token keyword">else</span></span>
<span class="line">        <span class="token builtin class-name">echo</span> <span class="token string">&quot;拷贝失败！！&quot;</span></span>
<span class="line">        <span class="token builtin class-name">exit</span> <span class="token number">2</span></span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 清理容器内脚本</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&quot;[3/3] 正在清理docker容器生成的临时文件...&quot;</span></span>
<span class="line"><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> <span class="token variable">$containerId</span> <span class="token function">bash</span> <span class="token parameter variable">-c</span> <span class="token string">&quot;rm -rf /<span class="token variable">$filename</span>&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$?</span> <span class="token parameter variable">-eq</span> <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span></span>
<span class="line">        <span class="token builtin class-name">echo</span> <span class="token string">&quot;执行清理完成&quot;</span></span>
<span class="line">        <span class="token builtin class-name">echo</span></span>
<span class="line"><span class="token keyword">else</span></span>
<span class="line">        <span class="token builtin class-name">echo</span> <span class="token string">&quot;拷贝失败！！&quot;</span></span>
<span class="line">        <span class="token builtin class-name">exit</span> <span class="token number">2</span></span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">case</span> <span class="token variable">$dbfile</span> <span class="token keyword">in</span></span>
<span class="line">        *.tar.gz<span class="token punctuation">)</span></span>
<span class="line">                <span class="token function">rm</span> <span class="token parameter variable">-rf</span> <span class="token variable">$filename</span></span>
<span class="line">		<span class="token punctuation">;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">esac</span></span>
<span class="line"></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&quot;导入完成!&quot;</span></span>
<span class="line"><span class="token builtin class-name">echo</span></span>
<span class="line"></span>
<span class="line"><span class="token builtin class-name">exit</span> <span class="token number">0</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="远程备份-open-ssh-方式" tabindex="-1"><a class="header-anchor" href="#远程备份-open-ssh-方式"><span>远程备份 (open ssh 方式)</span></a></h2><h3 id="自动备份最新文件" tabindex="-1"><a class="header-anchor" href="#自动备份最新文件"><span>自动备份最新文件</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token shebang important">#!/bin/bash</span></span>
<span class="line"><span class="token comment"># 备份服务器</span></span>
<span class="line"><span class="token assign-left variable">ip</span><span class="token operator">=</span>备份服务器ip</span>
<span class="line"><span class="token comment"># 密钥文件</span></span>
<span class="line"><span class="token assign-left variable">rsa</span><span class="token operator">=</span>密钥文件</span>
<span class="line"><span class="token comment"># 获取最新备份文件</span></span>
<span class="line"><span class="token assign-left variable">bakfiledir</span><span class="token operator">=</span>最新备份文件所在路径</span>
<span class="line"><span class="token comment"># 通过 ssh 远程执行命令获取需要备份的文件</span></span>
<span class="line"><span class="token assign-left variable">bakfile</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token function">ssh</span> <span class="token parameter variable">-i</span> $rsa root@$ip <span class="token string">&quot;find <span class="token variable">$bakfiledir</span>/*.tar.gz -type f -print0 | xargs -0 stat -c &#39;%Y %n&#39; | sort -nr | head -n 1 | cut -d &#39; &#39; -f 2&quot;</span><span class="token variable">\`</span></span></span>
<span class="line"><span class="token comment"># 备份文件存放地址</span></span>
<span class="line"><span class="token assign-left variable">targetdir</span><span class="token operator">=</span>备份文件存放路径</span>
<span class="line"><span class="token comment"># 执行备份</span></span>
<span class="line"><span class="token function">sudo</span> <span class="token function">scp</span> <span class="token parameter variable">-i</span> <span class="token variable">$rsa</span> root@<span class="token variable">$ip</span><span class="token builtin class-name">:</span><span class="token variable">$bakfile</span> <span class="token variable">$targetdir</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="备份并删除" tabindex="-1"><a class="header-anchor" href="#备份并删除"><span>备份并删除</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token shebang important">#!/bin/bash</span></span>
<span class="line"><span class="token comment"># 备份服务器</span></span>
<span class="line"><span class="token assign-left variable">ip</span><span class="token operator">=</span>备份服务器ip</span>
<span class="line"><span class="token comment"># 密钥</span></span>
<span class="line"><span class="token assign-left variable">rsa</span><span class="token operator">=</span>密钥文件</span>
<span class="line"><span class="token comment"># 获取最新备份文件</span></span>
<span class="line"><span class="token assign-left variable">nexus</span><span class="token operator">=</span><span class="token string">&#39;/data/nexus&#39;</span></span>
<span class="line"><span class="token comment"># 备份文件路径</span></span>
<span class="line"><span class="token assign-left variable">targetnexus</span><span class="token operator">=</span>/media/pi/Bakup/01-backup/01-hy/nexus</span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token operator">!</span> <span class="token parameter variable">-d</span> <span class="token variable">$targetnexus</span> <span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">then</span></span>
<span class="line">	<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> <span class="token variable">$targetnexus</span></span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&#39;开始执行&#39;</span><span class="token variable"><span class="token variable">\`</span><span class="token function">basename</span> $targetnexus<span class="token variable">\`</span></span><span class="token string">&#39;备份&#39;</span></span>
<span class="line"><span class="token comment"># 压缩</span></span>
<span class="line"><span class="token assign-left variable">nexusfilename</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token function">basename</span> $targetnexus<span class="token variable">\`</span></span>-<span class="token variable"><span class="token variable">\`</span><span class="token function">date</span> +<span class="token string">&#39;%Y%m%d&#39;</span><span class="token variable">\`</span></span>.tar.gz</span>
<span class="line"><span class="token function">sudo</span> <span class="token function">ssh</span> <span class="token parameter variable">-i</span> <span class="token variable">$rsa</span> root@<span class="token variable">$ip</span> <span class="token string">&quot;tar -zcf /data/backup/<span class="token variable"><span class="token variable">\`</span><span class="token function">basename</span> $nexus<span class="token variable">\`</span></span>/<span class="token variable">$nexusfilename</span> <span class="token variable">$nexus</span>&quot;</span></span>
<span class="line"><span class="token comment"># 备份</span></span>
<span class="line"><span class="token function">sudo</span> <span class="token function">scp</span> <span class="token parameter variable">-i</span> <span class="token variable">$rsa</span> root@<span class="token variable">$ip</span>:/data/backup/<span class="token variable"><span class="token variable">\`</span><span class="token function">basename</span> $nexus<span class="token variable">\`</span></span>/<span class="token variable">$nexusfilename</span> <span class="token variable">$targetnexus</span></span>
<span class="line"><span class="token comment"># 删除源备份文件</span></span>
<span class="line"><span class="token function">sudo</span> <span class="token function">ssh</span> <span class="token parameter variable">-i</span> <span class="token variable">$rsa</span> root@<span class="token variable">$ip</span> <span class="token string">&quot;rm -rf /data/backup/<span class="token variable"><span class="token variable">\`</span><span class="token function">basename</span> $nexus<span class="token variable">\`</span></span>/<span class="token variable">$nexusfilename</span>&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="分卷备份" tabindex="-1"><a class="header-anchor" href="#分卷备份"><span>分卷备份</span></a></h2><h3 id="分卷压缩备份" tabindex="-1"><a class="header-anchor" href="#分卷压缩备份"><span>分卷压缩备份</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token shebang important">#!/bin/bash</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 获取当前日期</span></span>
<span class="line"><span class="token assign-left variable">backup_date</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +<span class="token string">&quot;%Y-%m-%d&quot;</span><span class="token variable">)</span></span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 备份目录</span></span>
<span class="line"><span class="token assign-left variable">backup_dir</span><span class="token operator">=</span><span class="token string">&quot;/data/backup/mysql/tar&quot;</span></span>
<span class="line"><span class="token assign-left variable">log_dir</span><span class="token operator">=</span><span class="token string">&quot;/data/backup/mysql&quot;</span></span>
<span class="line"><span class="token assign-left variable">mysql_dir</span><span class="token operator">=</span><span class="token string">&quot;/data/mysql&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 判断备份目录是否存在，如果不存在则创建</span></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token operator">!</span> <span class="token parameter variable">-d</span> <span class="token string">&quot;<span class="token variable">$backup_dir</span>&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span></span>
<span class="line">  <span class="token function">mkdir</span> <span class="token variable">$backup_dir</span></span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 压缩备份文件，并将压缩文件存储到备份目录 : $backup_dir/mysql_$backup_date.tar.gz</span></span>
<span class="line"><span class="token builtin class-name">cd</span> <span class="token variable">$backup_dir</span></span>
<span class="line"><span class="token function">tar</span> <span class="token parameter variable">-cz</span> <span class="token variable">$mysql_dir</span> <span class="token operator">|</span> <span class="token function">split</span> <span class="token parameter variable">-b</span> 10G <span class="token parameter variable">-d</span> <span class="token parameter variable">-a</span> <span class="token number">2</span> - <span class="token string">&quot;mysql_<span class="token variable">$backup_date</span>.tar.gz.part_&quot;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 记录备份日志，包括备份日期、备份文件名、备份文件大小等信息</span></span>
<span class="line"><span class="token assign-left variable">backup_size</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">du</span> <span class="token parameter variable">-h</span> $backup_dir/mysql_$backup_date.tar.gz <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;{print $1}&#39;</span><span class="token variable">)</span></span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$backup_date</span> Backup Completed: mysql_<span class="token variable">$backup_date</span>.tar.gz (<span class="token variable">$backup_size</span>)&quot;</span> <span class="token operator">&gt;&gt;</span> <span class="token variable">$log_dir</span>/mysql_backup.log</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 清理7天前的备份</span></span>
<span class="line"><span class="token function">find</span> <span class="token variable">$backup_dir</span> <span class="token parameter variable">-maxdepth</span> <span class="token number">1</span> <span class="token parameter variable">-mtime</span> +7 <span class="token parameter variable">-name</span> <span class="token string">&quot;*&quot;</span> <span class="token parameter variable">-exec</span> <span class="token punctuation">\\</span>rm <span class="token parameter variable">-rf</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token punctuation">\\</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="合并分卷" tabindex="-1"><a class="header-anchor" href="#合并分卷"><span>合并分卷</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">cat</span> <span class="token punctuation">[</span>分卷前缀<span class="token punctuation">]</span>.tar.gz.part_* <span class="token operator">&gt;</span> <span class="token punctuation">[</span>分卷前缀<span class="token punctuation">]</span>.tar.gz</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="远程拉取分卷备份" tabindex="-1"><a class="header-anchor" href="#远程拉取分卷备份"><span>远程拉取分卷备份</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token shebang important">#!/bin/bash</span></span>
<span class="line"><span class="token comment"># 备份服务器</span></span>
<span class="line"><span class="token assign-left variable">ip</span><span class="token operator">=</span>服务器ip</span>
<span class="line"><span class="token comment"># 密钥</span></span>
<span class="line"><span class="token assign-left variable">rsa</span><span class="token operator">=</span>服务器密钥</span>
<span class="line"><span class="token comment"># 获取最新备份文件</span></span>
<span class="line"><span class="token assign-left variable">bakfiledir</span><span class="token operator">=</span>远端服务器备份文件位置</span>
<span class="line"><span class="token comment"># 备份文件</span></span>
<span class="line"><span class="token function">sudo</span> <span class="token function">ssh</span> <span class="token parameter variable">-i</span> <span class="token variable">$rsa</span> root@<span class="token variable">$ip</span> <span class="token string">&quot;find <span class="token variable">$bakfiledir</span>/*.tar.gz.part_* -type f -print0 | xargs -0 stat -c &#39;%Y %n&#39; | sort -nr | head -n 10 | cut -d &#39; &#39; -f 2&quot;</span> <span class="token operator">|</span> <span class="token keyword">while</span> <span class="token assign-left variable"><span class="token environment constant">IFS</span></span><span class="token operator">=</span> <span class="token builtin class-name">read</span> <span class="token parameter variable">-r</span> <span class="token function">file</span><span class="token punctuation">;</span> <span class="token keyword">do</span></span>
<span class="line">  <span class="token assign-left variable">targetdir</span><span class="token operator">=</span>本地备份文件存放位置</span>
<span class="line">  <span class="token comment"># 备份</span></span>
<span class="line">  <span class="token function">sudo</span> <span class="token function">scp</span> <span class="token parameter variable">-i</span> <span class="token variable">$rsa</span> root@<span class="token variable">$ip</span><span class="token builtin class-name">:</span><span class="token variable">$file</span> <span class="token variable">$targetdir</span></span>
<span class="line">  <span class="token builtin class-name">echo</span> <span class="token variable">$file</span></span>
<span class="line"><span class="token keyword">done</span></span>
<span class="line"><span class="token builtin class-name">exit</span> <span class="token number">1</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,60)]))}const o=n(p,[["render",i],["__file","02-Linux脚本汇总.html.vue"]]),r=JSON.parse('{"path":"/docs/linux/02-Linux%E8%84%9A%E6%9C%AC%E6%B1%87%E6%80%BB.html","title":"Linux 脚本汇总","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"比较AB两台服务器文件是否一致","slug":"比较ab两台服务器文件是否一致","link":"#比较ab两台服务器文件是否一致","children":[]},{"level":2,"title":"命令行中的参数传递","slug":"命令行中的参数传递","link":"#命令行中的参数传递","children":[]},{"level":2,"title":"调用外部脚本方法","slug":"调用外部脚本方法","link":"#调用外部脚本方法","children":[]},{"level":2,"title":"局部变量","slug":"局部变量","link":"#局部变量","children":[]},{"level":2,"title":"系统信息","slug":"系统信息","link":"#系统信息","children":[]},{"level":2,"title":"清理日志","slug":"清理日志","link":"#清理日志","children":[]},{"level":2,"title":"IO使用率","slug":"io使用率","link":"#io使用率","children":[]},{"level":2,"title":"截取字符串","slug":"截取字符串","link":"#截取字符串","children":[]},{"level":2,"title":"解压并重启服务","slug":"解压并重启服务","link":"#解压并重启服务","children":[]},{"level":2,"title":"创建并写入文件","slug":"创建并写入文件","link":"#创建并写入文件","children":[{"level":3,"title":"使用变量","slug":"使用变量","link":"#使用变量","children":[]},{"level":3,"title":"防止变量扩展","slug":"防止变量扩展","link":"#防止变量扩展","children":[]}]},{"level":2,"title":"Mysql 备份和还原（dcoker 方式）","slug":"mysql-备份和还原-dcoker-方式","link":"#mysql-备份和还原-dcoker-方式","children":[{"level":3,"title":"固定备份模式","slug":"固定备份模式","link":"#固定备份模式","children":[]},{"level":3,"title":"手动输入备份","slug":"手动输入备份","link":"#手动输入备份","children":[]},{"level":3,"title":"还原备份","slug":"还原备份","link":"#还原备份","children":[]}]},{"level":2,"title":"远程备份 (open ssh 方式)","slug":"远程备份-open-ssh-方式","link":"#远程备份-open-ssh-方式","children":[{"level":3,"title":"自动备份最新文件","slug":"自动备份最新文件","link":"#自动备份最新文件","children":[]},{"level":3,"title":"备份并删除","slug":"备份并删除","link":"#备份并删除","children":[]}]},{"level":2,"title":"分卷备份","slug":"分卷备份","link":"#分卷备份","children":[{"level":3,"title":"分卷压缩备份","slug":"分卷压缩备份","link":"#分卷压缩备份","children":[]},{"level":3,"title":"合并分卷","slug":"合并分卷","link":"#合并分卷","children":[]},{"level":3,"title":"远程拉取分卷备份","slug":"远程拉取分卷备份","link":"#远程拉取分卷备份","children":[]}]}],"git":{"updatedTime":1757562223000,"contributors":[{"name":"wangxiaoquan","email":"wxq","commits":3}]},"filePathRelative":"docs/linux/02-Linux脚本汇总.md"}');export{o as comp,r as data};
