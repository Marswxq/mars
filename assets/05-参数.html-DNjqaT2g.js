import{_ as o,c as l,a as s,b as t,w as p,d as i,r as c,o as u,e}from"./app-CKtXyHQO.js";const r="/mars/images/kettle/kettle_argument_kjb.png",k="/mars/images/kettle/kettle_argument_ktr.png",d="/mars/images/kettle/kettle_argument_input.png",m="/mars/images/kettle/kettle_param_job.png",b="/mars/images/kettle/kettle_param_job_setparam.png",g="/mars/images/kettle/kettle_param_job_check.png",v="/mars/images/kettle/kettle_param_ktr_setparam.png",_="/mars/images/kettle/kettle_param_job_ktr_param.png",q="/mars/images/kettle/kettle_param_job_ktr_param1.png",h="/mars/images/kettle/kettle_param_job_ktr_param2.png",f="/mars/images/kettle/kettle_param_job_ktr_param3.png",j="/mars/images/kettle/kettle_param_obtain.png",y="/mars/images/kettle/kettle_variable_job.png",x="/mars/images/kettle/kettle_variable_job1.png",w="/mars/images/kettle/kettle_variable_job2.png",V="/mars/images/kettle/kettle_variable_job3.png",E="/mars/images/kettle/kettle_variable_job4.png",A={},L={class:"table-of-contents"};function N(T,n){const a=c("router-link");return u(),l("div",null,[n[6]||(n[6]=s("h1",{id:"kettle-参数",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#kettle-参数"},[s("span",null,"Kettle 参数")])],-1)),n[7]||(n[7]=s("p",null,[s("strong",null,"目录")],-1)),s("nav",L,[s("ul",null,[s("li",null,[t(a,{to:"#参数种类"},{default:p(()=>n[0]||(n[0]=[e("参数种类")])),_:1})]),s("li",null,[t(a,{to:"#参数比较"},{default:p(()=>n[1]||(n[1]=[e("参数比较")])),_:1})]),s("li",null,[t(a,{to:"#参数示例"},{default:p(()=>n[2]||(n[2]=[e("参数示例")])),_:1}),s("ul",null,[s("li",null,[t(a,{to:"#位置参数-argument"},{default:p(()=>n[3]||(n[3]=[e("位置参数（argument）")])),_:1})]),s("li",null,[t(a,{to:"#命名参数-parameter"},{default:p(()=>n[4]||(n[4]=[e("命名参数（parameter）")])),_:1})]),s("li",null,[t(a,{to:"#变量-variable"},{default:p(()=>n[5]||(n[5]=[e("变量（variable）")])),_:1})])])])])]),n[8]||(n[8]=i('<h2 id="参数种类" tabindex="-1"><a class="header-anchor" href="#参数种类"><span>参数种类</span></a></h2><p>Kettle 支持3种参数：位置参数（argument）、命名参数（parameter）、变量（variable）。</p><h2 id="参数比较" tabindex="-1"><a class="header-anchor" href="#参数比较"><span>参数比较</span></a></h2><table><thead><tr><th></th><th>位置参数（argument）</th><th>命名参数（parameter）</th><th>变量（variable）</th></tr></thead><tbody><tr><td>说明</td><td>根据参数的位置来设置和读取参数值，用于在kjb外部传入，并在kjb内部使用</td><td>根据参数的名字来设置和读取参数值，用于在kjb外部传入，并在kjb内部使用</td><td>根据参数的位置来设置和读取参数值，用于在kjb外部传入，并在kjb内部使用</td></tr><tr><td>注意</td><td>1. 参数值只能由外部传入<code>arg1 arg2 arg3</code><br>2. 通过位置来取值<br>3. 只能在转换中（transform）获取到参数值<br>4. 最多支持10个参数<br></td><td>1. 参数值只能由外部传入<code>-param:Key=Value</code>，Key必须固定，值可以在kjb内部重新赋值<br>2. 可以在作业属性中指定默认值，如果外部不传入，就取默认值<br>3.可在作业、转换中任意使用<br>4.不能动态新增<br>5.通过<code>${Key}</code>或者<code>%%Key%%</code>使用</td><td>1. 变量必须在KJB内部定义，在内部赋值，在内部使用（Key=Value）<br>2. 虽然变量只能在内部定义、赋值和使用，但是因为Key和Value都可以是变量，所以可以从外部（文件、数据库等）读取变量名、变量值，实现动态的变量声明、赋值，功能非常强大<br>3. 可在作业、转换任意使用<br>4. 可以动态声明、赋值、使用<br>5.通过<code>${Key}</code>或者<code>%%Key%%</code>使用</td></tr><tr><td>定义</td><td>不需要定义</td><td>双击作业（或转换）的空白处，在弹出的“命名参数”标签页，可以设置参数的名字</td><td>1. 在作业中，通过“通用”-&gt;“设置变量”控件定义<br>2. 在转换中，通过“作业”-&gt;“设置变量”控件定义<br>3. 在作业中，通过“JS脚本”控件设置，如<code>parent_job.setVariable(&quot;VAR1&quot;, &quot;abc123&quot;)</code></td></tr><tr><td>赋值</td><td>1. 在设计界面（spoon.bat）点击执行按钮时，可以在弹出的“Run Options”设置，每次运行都要重新设置<br>2. 在命令行界面（kitchen.bat）执行.kjb文件时，直接指定。如：sh kitchen.sh -file=/kettle/test.kjb 20150101 abc 123，这里按顺序指定了3个参数，以空格隔开<br>3. 父作业里面执行一个子作业时，可以在“Job”控件的位置参数标签里指定，可以使用变量</td><td>1. 在设计界面（spoon.bat）点击执行按钮时，可以在弹出的“Run Options”设置，每次运行都要重新设置<br>2. 在命令行kitchen.bat执行.kjb文件时，直接指定。如：<code>sh kitchen.sh -file=/kettle/test.kjb -param:P1=20150101 -param:P2=abc -param:P3=123</code>，这里指定了三个命名参数P1、P2、P3的参数值，顺序不限<br>3. 父作业里面执行一个子作业时，可以在“作业”控件的“命名参数”标签里指定，可以使用变量，可以使用数据流批量赋值并循环</td><td>1. 在作业中，通过General-&gt;Set Variables控件赋值<br>2. 在转换中，通过“作业”下的“设置变量”控件赋值，前面必须带有一个“输入”控件（强大的关键点就在这里，“输入”控件有多少，我们就可以有多少种方法去动态设置变量），且“输入”控件生成的记录数必须是1条（也可以是0，此时变量未能赋值）<br>3. 在作业中，通过“JS脚本”控件设置，如<code>parent_job.setVariable(&quot;VAR1&quot;, &quot;abc123&quot;)</code><br>4. 父作业里面执行一个子作业时，子作业可以自由使用父作业定义的变量，包括重新赋值，不用刻意传递</td></tr><tr><td>取值</td><td>新建一个转换，选择“输入”下的“获取系统信息”控件，type选择“命令行参数1、2、3...”，即可读取对应位置的参数值。</td><td>1. 在所有控件中，末尾带有菱形$号的输入框都可以使用，通过<code>${KEY_NAME}</code>或者<code>%KEY_NAME%</code>取值。可以嵌套使用，比如${P1}的内容是ABC${P2}123，那么${P2}的值也会被替代成真实值<br>2. 通过作业里面的JavaScript脚本控件读取，如：parent_job.getVariable(&quot;VAR1&quot;)<br>3. 在SQL中使用变量时需要把“是否替换变量”勾选上，否则无法使变量生效。</td><td>1. 在所有控件中，末尾带有菱形$号的输入框都可以使用，通过<code>${KEY_NAME}</code>使用。可以嵌套使用，比如<code>${P1}</code>的内容是<code>ABC${P2}123</code>，那么<code>${P2}</code>的值也会被替代成真实值<br>2. 通过作业里面的JavaScript脚本控件读取，如：<code>parent_job.getVariable(&quot;VAR1&quot;)</code></td></tr></tbody></table><h2 id="参数示例" tabindex="-1"><a class="header-anchor" href="#参数示例"><span>参数示例</span></a></h2><h3 id="位置参数-argument" tabindex="-1"><a class="header-anchor" href="#位置参数-argument"><span>位置参数（argument）</span></a></h3><p>位置参数在“获取系统信息”控件中叫做命令行参数。</p><p>可以把位置参数理解成是命令行后边以空格分割的参数（字符串）。</p><ul><li>作业</li></ul><p><img src="'+r+'" alt="位置参数kjb"></p><ul><li>转换</li></ul><p><img src="'+k+'" alt="位置参数ktr"></p><ul><li>传值方式1</li></ul><p><img src="'+d+`" alt="位置参数方式1"></p><ul><li><p>传值方式2</p><ul><li>linux<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">kitchen.sh <span class="token parameter variable">-file</span><span class="token operator">=</span>/xxxx.kjb <span class="token parameter variable">-log</span><span class="token operator">=</span>/xxx.log <span class="token number">1</span> <span class="token number">2</span> </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li>windows<div class="language-bat line-numbers-mode" data-highlighter="prismjs" data-ext="bat" data-title="bat"><pre><code><span class="line">Kitchen.bat /file=d:\\xxxx.kjb /log=d:\\xxxx.log 1 2 </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul></li></ul><h3 id="命名参数-parameter" tabindex="-1"><a class="header-anchor" href="#命名参数-parameter"><span>命名参数（parameter）</span></a></h3><p>命名参数可以简单把它理解为“变量”，它可以在作业、转换中使用，也可以在同一个作业的不通转换中传递。</p><p>命名参数一个很好的优点就是支持“默认值”，这一特点应用得当可以解决很多业务上的问题。</p><ul><li>作业</li></ul><p><img src="`+m+'" alt="命名参数作业"></p><ul><li>设置作业命名参数</li></ul><p><img src="'+b+'" alt="作业命名参数设置"></p><ul><li><p>测试数据 <img src="'+g+'" alt="测试数据"></p><ul><li><p>创建测试表test</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">if</span> <span class="token operator">not</span> <span class="token keyword">exists</span> <span class="token identifier"><span class="token punctuation">`</span>test<span class="token punctuation">`</span></span> <span class="token punctuation">(</span></span>\n<span class="line">  <span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token identifier"><span class="token punctuation">`</span>name<span class="token punctuation">`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token identifier"><span class="token punctuation">`</span>sex<span class="token punctuation">`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token identifier"><span class="token punctuation">`</span>age<span class="token punctuation">`</span></span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span><span class="token punctuation">)</span></span>\n<span class="line"><span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8mb4<span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>创建测试表test1</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">if</span> <span class="token operator">not</span> <span class="token keyword">exists</span> <span class="token identifier"><span class="token punctuation">`</span>test1<span class="token punctuation">`</span></span> <span class="token punctuation">(</span></span>\n<span class="line">  <span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token identifier"><span class="token punctuation">`</span>name<span class="token punctuation">`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token identifier"><span class="token punctuation">`</span>sex<span class="token punctuation">`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token identifier"><span class="token punctuation">`</span>age<span class="token punctuation">`</span></span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span><span class="token punctuation">)</span></span>\n<span class="line"><span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8mb4<span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>初始化测试数据</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">truncate</span> <span class="token keyword">table</span> test1<span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">truncate</span> <span class="token keyword">table</span> test<span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">replace</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">`</span>demo<span class="token punctuation">`</span></span><span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>test<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>name<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>sex<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>age<span class="token punctuation">`</span></span><span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;mars&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">replace</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">`</span>demo<span class="token punctuation">`</span></span><span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>test<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>name<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>sex<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>age<span class="token punctuation">`</span></span><span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;lucy&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;女&#39;</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">replace</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">`</span>demo<span class="token punctuation">`</span></span><span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>test<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>name<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>sex<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>age<span class="token punctuation">`</span></span><span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&#39;lily&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;女&#39;</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p>作业中转换的设置-将命名参数传递给转换 <img src="'+v+'" alt="作业将命名参数床底给转换"></p><ul><li>sql中使用命名参数<div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> test <span class="token keyword">where</span> <span class="token identifier"><span class="token punctuation">`</span>age<span class="token punctuation">`</span></span> <span class="token operator">=</span> ${ktr_age} <span class="token operator">and</span> sex <span class="token operator">=</span> <span class="token string">&#39;%%ktr_sex%%&#39;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><p><strong>注意：</strong></p><ol><li><p>sql 中使用变量的两种方式<code>${命名参数}</code>或<code>%%命名参数%%</code></p></li><li><p>sql 中使用变量必须勾选“替换 SQL 语句里的变量”</p></li></ol></li><li><p>作业中配置命名参数传值给作业将命名参数传递给转换</p></li></ul><p><img src="'+_+'" alt="作业中配置命名参数传值给作业将命名参数传递给转换"></p><ul><li>转换-转换之间获取命名参数</li></ul><p><img src="'+q+'" alt="转换-转换之间获取命名参数"></p><ul><li>作业中转换的设置-作业转换之间获取命名参数</li></ul><p><img src="'+h+'" alt="作业中转换的设置-作业转换之间获取命名参数"></p><p><img src="'+f+'" alt="作业中转换的设置-作业转换之间获取命名参数"></p><p><strong>注意：</strong></p><ol><li>需要勾选 Options tab页下的“执行每一行输入”，这样才能保证获取到上一个转换结果的每一行数据</li><li>命令参数tab页，使用流列名映射上一步输出的结果字段，命名参数通过“获取参数”获取本转换设置的命名参数</li></ol><ul><li>传值方式1</li></ul><p><img src="'+j+`" alt="命名参数传值方式1"></p><ul><li><p>传值方式2</p><ul><li>linux<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">kitchen.sh <span class="token parameter variable">-file</span><span class="token operator">=</span>/xxxx.kjb <span class="token parameter variable">-log</span><span class="token operator">=</span>/xxx.log <span class="token parameter variable">-param:kjb_age</span><span class="token operator">=</span><span class="token number">18</span> <span class="token parameter variable">-param:kjb_sex</span><span class="token operator">=</span>女</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li>windows<div class="language-bat line-numbers-mode" data-highlighter="prismjs" data-ext="bat" data-title="bat"><pre><code><span class="line">Kitchen.bat /file=d:\\xxxx.kjb /log=d:\\xxxx.log /param:kjb_age=18 /param:kjb_sex=女</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul></li></ul><h3 id="变量-variable" tabindex="-1"><a class="header-anchor" href="#变量-variable"><span>变量（variable）</span></a></h3><p>变量分为局部变量和全局变量，全局变量在<code>kettle.properties</code>中配置，多为系统级别内容，这里主要说局部变量。</p><p>局部变量一共有4个作用域：</p><ul><li><p>Valid in the virtual machine: 在 jvm 虚拟机中有效</p></li><li><p>Valid in the parent job：在父作业中有效</p></li><li><p>Valid in the grand-parent job：在当前作业中有效</p></li><li><p>Valid in the root job：在根作业中有效</p></li></ul><p><strong>注意：</strong> 局部变量声明后不能在当前转换里使用，因此需要合理的配置作业中“设置变量”所处的位置，把需要引用局部变量的转换放在“设置变量”之后的转换中来实现需求。</p><p>下面是一个综合的示例，介绍如何通过“设置变量”、“获取变量”、“js 脚本”（作业和转换中 js 脚本方式不一样）控件操作变量。</p><ul><li>作业</li></ul><p><img src="`+y+'" alt="变量"></p><ul><li>作业-设置变量-测试变量</li></ul><p><img src="'+x+'" alt="设置变量-测试变量"></p><ul><li>作业-JavaScript-获取并修改变量 <img src="'+w+`" alt="JavaScript-获取并修改变量"><ul><li>js 脚本内容<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">  <span class="token comment">// 日志</span></span>
<span class="line">  <span class="token keyword">var</span> subject <span class="token operator">=</span> <span class="token string">&quot;自定义日志输出-方式2&quot;</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">var</span> log <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">org<span class="token punctuation">.</span>pentaho<span class="token punctuation">.</span>di<span class="token punctuation">.</span>core<span class="token punctuation">.</span>logging<span class="token punctuation">.</span>LogChannel</span><span class="token punctuation">(</span>subject<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token comment">// 变量初始值</span></span>
<span class="line">  log<span class="token punctuation">.</span><span class="token function">logMinimal</span><span class="token punctuation">(</span><span class="token string">&quot;**********************变量tmp初始值：&quot;</span><span class="token operator">+</span>parent_job<span class="token punctuation">.</span><span class="token function">getVariable</span><span class="token punctuation">(</span><span class="token string">&quot;tmp&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  log<span class="token punctuation">.</span><span class="token function">logMinimal</span><span class="token punctuation">(</span><span class="token string">&quot;**********************变量tmp1初始值：&quot;</span><span class="token operator">+</span>parent_job<span class="token punctuation">.</span><span class="token function">getVariable</span><span class="token punctuation">(</span><span class="token string">&quot;tmp1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  log<span class="token punctuation">.</span><span class="token function">logMinimal</span><span class="token punctuation">(</span><span class="token string">&quot;**********************变量tmp2初始值：&quot;</span><span class="token operator">+</span>parent_job<span class="token punctuation">.</span><span class="token function">getVariable</span><span class="token punctuation">(</span><span class="token string">&quot;tmp2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  log<span class="token punctuation">.</span><span class="token function">logMinimal</span><span class="token punctuation">(</span><span class="token string">&quot;**********************变量tmp3初始值：&quot;</span><span class="token operator">+</span>parent_job<span class="token punctuation">.</span><span class="token function">getVariable</span><span class="token punctuation">(</span><span class="token string">&quot;tmp3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token comment">// 变量赋值</span></span>
<span class="line">    </span>
<span class="line">  <span class="token comment">// 变量初始值</span></span>
<span class="line">  parent_job<span class="token punctuation">.</span><span class="token function">setVariable</span><span class="token punctuation">(</span><span class="token string">&quot;tmp&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  parent_job<span class="token punctuation">.</span><span class="token function">setVariable</span><span class="token punctuation">(</span><span class="token string">&quot;tmp1&quot;</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  parent_job<span class="token punctuation">.</span><span class="token function">setVariable</span><span class="token punctuation">(</span><span class="token string">&quot;tmp2&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;2024-02-02&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  parent_job<span class="token punctuation">.</span><span class="token function">setVariable</span><span class="token punctuation">(</span><span class="token string">&quot;tmp3&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;efg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">  log<span class="token punctuation">.</span><span class="token function">logMinimal</span><span class="token punctuation">(</span><span class="token string">&quot;**********************变量tmp在js中赋值后：&quot;</span><span class="token operator">+</span>parent_job<span class="token punctuation">.</span><span class="token function">getVariable</span><span class="token punctuation">(</span><span class="token string">&quot;tmp&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  log<span class="token punctuation">.</span><span class="token function">logMinimal</span><span class="token punctuation">(</span><span class="token string">&quot;**********************变量tmp1在js中赋值后：&quot;</span><span class="token operator">+</span>parent_job<span class="token punctuation">.</span><span class="token function">getVariable</span><span class="token punctuation">(</span><span class="token string">&quot;tmp1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  log<span class="token punctuation">.</span><span class="token function">logMinimal</span><span class="token punctuation">(</span><span class="token string">&quot;**********************变量tmp2在js中赋值后：&quot;</span><span class="token operator">+</span>parent_job<span class="token punctuation">.</span><span class="token function">getVariable</span><span class="token punctuation">(</span><span class="token string">&quot;tmp2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  log<span class="token punctuation">.</span><span class="token function">logMinimal</span><span class="token punctuation">(</span><span class="token string">&quot;**********************变量tmp3在js中赋值后：&quot;</span><span class="token operator">+</span>parent_job<span class="token punctuation">.</span><span class="token function">getVariable</span><span class="token punctuation">(</span><span class="token string">&quot;tmp3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">  <span class="token boolean">true</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li></ul><p><strong>注意：</strong> js脚本在作业中获取变量使用<code>parent_job.getVariable(&quot;tmp&quot;)</code>，赋值变量使用<code>parent_job.setVariable(&quot;tmp&quot;,&quot;2&quot;)</code> 与转换中不一致</p><ul><li>转换-转换设置变量</li></ul><p><img src="`+V+'" alt="转换-转换设置变量"></p><ul><li><p>转换-转换获取变量</p><p><img src="'+E+`" alt="转换-转换获取变量"></p><ul><li>js 脚本内容<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">  <span class="token comment">//Script here</span></span>
<span class="line">  <span class="token function">Alert</span><span class="token punctuation">(</span><span class="token string">&quot;转换获取ktr_tmp1变量值为：&quot;</span><span class="token operator">+</span>ktr_tmp1<span class="token punctuation">)</span> <span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token function">Alert</span><span class="token punctuation">(</span><span class="token string">&quot;kjb中tmp变量值：&quot;</span><span class="token operator">+</span><span class="token function">getVariable</span><span class="token punctuation">(</span><span class="token string">&quot;tmp&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;default&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">;</span></span>
<span class="line">  </span>
<span class="line">  <span class="token function">Alert</span><span class="token punctuation">(</span><span class="token string">&quot;转换设置中ktr_a变量值为：&quot;</span><span class="token operator">+</span><span class="token function">getVariable</span><span class="token punctuation">(</span><span class="token string">&quot;ktr_a&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;default&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">;</span></span>
<span class="line">  </span>
<span class="line">  <span class="token function">setVariable</span><span class="token punctuation">(</span><span class="token string">&quot;ktr_a&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;123&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;r&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  </span>
<span class="line">  <span class="token function">Alert</span><span class="token punctuation">(</span><span class="token string">&quot;js中ktr_a变量值为：&quot;</span><span class="token operator">+</span><span class="token function">getVariable</span><span class="token punctuation">(</span><span class="token string">&quot;ktr_a&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;default&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li></ul><p><strong>注意：</strong> js脚本在转换中获取变量使用<code>getVariable(&quot;ktr_a&quot;,&quot;default&quot;))</code>，赋值变量使用<code>setVariable(&quot;ktr_a&quot;,&quot;123&quot;,&quot;r&quot;)</code> 与作业中不一致</p>`,50))])}const U=o(A,[["render",N],["__file","05-参数.html.vue"]]),S=JSON.parse('{"path":"/docs/kettle/05-%E5%8F%82%E6%95%B0.html","title":"Kettle 参数","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"参数种类","slug":"参数种类","link":"#参数种类","children":[]},{"level":2,"title":"参数比较","slug":"参数比较","link":"#参数比较","children":[]},{"level":2,"title":"参数示例","slug":"参数示例","link":"#参数示例","children":[{"level":3,"title":"位置参数（argument）","slug":"位置参数-argument","link":"#位置参数-argument","children":[]},{"level":3,"title":"命名参数（parameter）","slug":"命名参数-parameter","link":"#命名参数-parameter","children":[]},{"level":3,"title":"变量（variable）","slug":"变量-variable","link":"#变量-variable","children":[]}]}],"git":{"updatedTime":1734338014000,"contributors":[{"name":"wangxiaoquan","email":"wxq","commits":1}]},"filePathRelative":"docs/kettle/05-参数.md"}');export{U as comp,S as data};
