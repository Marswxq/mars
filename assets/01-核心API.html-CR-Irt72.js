import{_ as c,c as l,a as s,b as t,w as p,d as i,r as o,o as u,e}from"./app-CKtXyHQO.js";const k={},r={class:"table-of-contents"};function d(v,n){const a=o("router-link");return u(),l("div",null,[n[31]||(n[31]=s("h1",{id:"核心api",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#核心api"},[s("span",null,"核心API")])],-1)),n[32]||(n[32]=s("p",null,[s("strong",null,"目录")],-1)),s("nav",r,[s("ul",null,[s("li",null,[t(a,{to:"#processengine"},{default:p(()=>n[0]||(n[0]=[e("ProcessEngine")])),_:1}),s("ul",null,[s("li",null,[t(a,{to:"#获取processengine"},{default:p(()=>n[1]||(n[1]=[e("获取ProcessEngine")])),_:1})])])]),s("li",null,[t(a,{to:"#服务service"},{default:p(()=>n[2]||(n[2]=[e("服务service")])),_:1})]),s("li",null,[t(a,{to:"#repositoryservice"},{default:p(()=>n[3]||(n[3]=[e("RepositoryService")])),_:1}),s("ul",null,[s("li",null,[t(a,{to:"#获取repositoryservice"},{default:p(()=>n[4]||(n[4]=[e("获取RepositoryService")])),_:1})]),s("li",null,[t(a,{to:"#部署工作流"},{default:p(()=>n[5]||(n[5]=[e("部署工作流")])),_:1})]),s("li",null,[t(a,{to:"#生成的表数据"},{default:p(()=>n[6]||(n[6]=[e("生成的表数据")])),_:1})]),s("li",null,[t(a,{to:"#删除工作流"},{default:p(()=>n[7]||(n[7]=[e("删除工作流")])),_:1})]),s("li",null,[t(a,{to:"#查询工作流"},{default:p(()=>n[8]||(n[8]=[e("查询工作流")])),_:1})])])]),s("li",null,[t(a,{to:"#runtimeservice"},{default:p(()=>n[9]||(n[9]=[e("RuntimeService")])),_:1}),s("ul",null,[s("li",null,[t(a,{to:"#获取runtimeservice"},{default:p(()=>n[10]||(n[10]=[e("获取RuntimeService")])),_:1})]),s("li",null,[t(a,{to:"#启动流程"},{default:p(()=>n[11]||(n[11]=[e("启动流程")])),_:1})]),s("li",null,[t(a,{to:"#生成的表数据-1"},{default:p(()=>n[12]||(n[12]=[e("生成的表数据")])),_:1})]),s("li",null,[t(a,{to:"#流程的激活和挂起"},{default:p(()=>n[13]||(n[13]=[e("流程的激活和挂起")])),_:1})]),s("li",null,[t(a,{to:"#流程实例的查询"},{default:p(()=>n[14]||(n[14]=[e("流程实例的查询")])),_:1})]),s("li",null,[t(a,{to:"#流程对象的查询"},{default:p(()=>n[15]||(n[15]=[e("流程对象的查询")])),_:1})]),s("li",null,[t(a,{to:"#流程实例的删除"},{default:p(()=>n[16]||(n[16]=[e("流程实例的删除")])),_:1})]),s("li",null,[t(a,{to:"#流程实例的状态查询"},{default:p(()=>n[17]||(n[17]=[e("流程实例的状态查询")])),_:1})])])]),s("li",null,[t(a,{to:"#historyservice"},{default:p(()=>n[18]||(n[18]=[e("HistoryService")])),_:1}),s("ul",null,[s("li",null,[t(a,{to:"#获取historyservice"},{default:p(()=>n[19]||(n[19]=[e("获取HistoryService")])),_:1})]),s("li",null,[t(a,{to:"#查询历史流程实例"},{default:p(()=>n[20]||(n[20]=[e("查询历史流程实例")])),_:1})]),s("li",null,[t(a,{to:"#查询某个流程实例所有历史活动"},{default:p(()=>n[21]||(n[21]=[e("查询某个流程实例所有历史活动")])),_:1})]),s("li",null,[t(a,{to:"#根据办理人查看历史流程任务"},{default:p(()=>n[22]||(n[22]=[e("根据办理人查看历史流程任务")])),_:1})]),s("li",null,[t(a,{to:"#根据流程实例的id查看历史流程变量"},{default:p(()=>n[23]||(n[23]=[e("根据流程实例的ID查看历史流程变量")])),_:1})])])]),s("li",null,[t(a,{to:"#taskservice"},{default:p(()=>n[24]||(n[24]=[e("TaskService")])),_:1}),s("ul",null,[s("li",null,[t(a,{to:"#获取taskservice"},{default:p(()=>n[25]||(n[25]=[e("获取TaskService")])),_:1})]),s("li",null,[t(a,{to:"#任务的创建与删除"},{default:p(()=>n[26]||(n[26]=[e("任务的创建与删除")])),_:1})]),s("li",null,[t(a,{to:"#流程变量的设置和获取"},{default:p(()=>n[27]||(n[27]=[e("流程变量的设置和获取")])),_:1})]),s("li",null,[t(a,{to:"#在当前任务中存储和查询流程变量"},{default:p(()=>n[28]||(n[28]=[e("在当前任务中存储和查询流程变量")])),_:1})]),s("li",null,[t(a,{to:"#自定义对象作为流程变量"},{default:p(()=>n[29]||(n[29]=[e("自定义对象作为流程变量")])),_:1})]),s("li",null,[t(a,{to:"#查询历史流程变量"},{default:p(()=>n[30]||(n[30]=[e("查询历史流程变量")])),_:1})])])])])]),n[33]||(n[33]=i(`<h2 id="processengine" tabindex="-1"><a class="header-anchor" href="#processengine"><span><code>ProcessEngine</code></span></a></h2><ul><li>创建流程引擎对象。 activiti中最核心的类，其他类都是由ProcessEngine取得</li></ul><h3 id="获取processengine" tabindex="-1"><a class="header-anchor" href="#获取processengine"><span>获取<code>ProcessEngine</code></span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"> <span class="token class-name">ProcessEngine</span> processEngine <span class="token operator">=</span> <span class="token class-name">ProcessEngines</span><span class="token punctuation">.</span><span class="token function">getDefaultProcessEngine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="服务service" tabindex="-1"><a class="header-anchor" href="#服务service"><span>服务service</span></a></h2><p>Activiti提供了7个服务接口，都通过ProcessEngine来获取，并且支持链式编程风格。</p><table><thead><tr><th>服务接口</th><th>说明</th></tr></thead><tbody><tr><td>RepositoryService</td><td>仓库服务，用于管理仓库，比如部署或删除流程定义，读取流程资源等。</td></tr><tr><td>IdentifyService</td><td>身份服务，管理用户，组以及它们之间的关系。</td></tr><tr><td>RuntimeService</td><td>运行时服务，管理所有正在运行的流程实例，任务等对象。</td></tr><tr><td>TaskService</td><td>任务服务，管理任务。</td></tr><tr><td>FormService</td><td>表单服务，管理和流程，任务相关的表单。</td></tr><tr><td>HistroyService</td><td>历史服务，管理历史数据。</td></tr><tr><td>ManagementService</td><td>引擎管理服务，比如管理引擎的配置，数据库和作业等核心对象。</td></tr></tbody></table><p>源码</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">EngineServices</span> <span class="token punctuation">{</span></span>
<span class="line"> </span>
<span class="line">  <span class="token class-name">RepositoryService</span> <span class="token function">getRepositoryService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  </span>
<span class="line">  <span class="token class-name">RuntimeService</span> <span class="token function">getRuntimeService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  </span>
<span class="line">  <span class="token class-name">FormService</span> <span class="token function">getFormService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  </span>
<span class="line">  <span class="token class-name">TaskService</span> <span class="token function">getTaskService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  </span>
<span class="line">  <span class="token class-name">HistoryService</span> <span class="token function">getHistoryService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  </span>
<span class="line">  <span class="token class-name">IdentityService</span> <span class="token function">getIdentityService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  </span>
<span class="line">  <span class="token class-name">ManagementService</span> <span class="token function">getManagementService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  </span>
<span class="line">  <span class="token class-name">DynamicBpmnService</span> <span class="token function">getDynamicBpmnService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  </span>
<span class="line">  <span class="token class-name">ProcessEngineConfiguration</span> <span class="token function">getProcessEngineConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="repositoryservice" tabindex="-1"><a class="header-anchor" href="#repositoryservice"><span><code>RepositoryService</code></span></a></h2><ul><li><p><code>RepositoryService</code>是 Acitiviti 的仓库服务类。所谓的仓库指流程定义文档的两个文件： bpmn 文件和流程图片。</p></li><li><p><code>RepositoryService</code> 核心就是流程文件的部署，删除，查询流程定义。</p></li></ul><h3 id="获取repositoryservice" tabindex="-1"><a class="header-anchor" href="#获取repositoryservice"><span>获取<code>RepositoryService</code></span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token class-name">RepositoryService</span> repositoryService <span class="token operator">=</span> processEngine<span class="token punctuation">.</span><span class="token function">getRepositoryService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="部署工作流" tabindex="-1"><a class="header-anchor" href="#部署工作流"><span>部署工作流</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ActivitiRepTest</span> <span class="token punctuation">{</span></span>
<span class="line"> </span>
<span class="line">    <span class="token class-name">RepositoryService</span> repositoryService<span class="token punctuation">;</span></span>
<span class="line"> </span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 默认简化方式： 启动时会默认寻找classpath下面的activiti.cfg.xml文件</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token annotation punctuation">@Before</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">initConfigWithDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">//创建流程引擎对象</span></span>
<span class="line">        <span class="token class-name">ProcessEngine</span> processEngine <span class="token operator">=</span> <span class="token class-name">ProcessEngines</span><span class="token punctuation">.</span><span class="token function">getDefaultProcessEngine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        repositoryService <span class="token operator">=</span> processEngine<span class="token punctuation">.</span><span class="token function">getRepositoryService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"> </span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 部署流程 直接加载bpmn文件和图片文件</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token annotation punctuation">@Test</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">deployActivitByPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">//创建部署对象</span></span>
<span class="line">        <span class="token class-name">DeploymentBuilder</span> deploymentBuilder <span class="token operator">=</span> repositoryService<span class="token punctuation">.</span><span class="token function">createDeployment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">//加载流程的配置文件和图片</span></span>
<span class="line">        deploymentBuilder<span class="token punctuation">.</span><span class="token function">addClasspathResource</span><span class="token punctuation">(</span><span class="token string">&quot;diagrams/test.bpmn&quot;</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">addClasspathResource</span><span class="token punctuation">(</span><span class="token string">&quot;diagrams/test.png&quot;</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token string">&quot;部署的流程定义名称&quot;</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">category</span><span class="token punctuation">(</span><span class="token string">&quot;业务分类，可自行定义&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">;</span></span>
<span class="line">        deploymentBuilder<span class="token punctuation">.</span><span class="token function">deploy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"> </span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 部署流程  直接加载bpmn文件和流程图片的压缩文件</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token annotation punctuation">@Test</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">deployActivitByFileZip</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">//创建部署对象</span></span>
<span class="line">        <span class="token class-name">DeploymentBuilder</span> deploymentBuilder <span class="token operator">=</span> repositoryService<span class="token punctuation">.</span><span class="token function">createDeployment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">InputStream</span> inputStream <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getResourceAsStream</span><span class="token punctuation">(</span><span class="token string">&quot;diagrams/test.zip&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">ZipInputStream</span> zipInputStream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ZipInputStream</span><span class="token punctuation">(</span>inputStream<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">//加载流程的配置文件和图片</span></span>
<span class="line">        deploymentBuilder<span class="token punctuation">.</span><span class="token function">addZipInputStream</span><span class="token punctuation">(</span>zipInputStream<span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token string">&quot;部署的流程定义名称&quot;</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">category</span><span class="token punctuation">(</span><span class="token string">&quot;业务分类，可自行定义&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">;</span></span>
<span class="line">        deploymentBuilder<span class="token punctuation">.</span><span class="token function">deploy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="生成的表数据" tabindex="-1"><a class="header-anchor" href="#生成的表数据"><span>生成的表数据</span></a></h3><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment"># 其中 act_re_procdef 表中的 RESOURCE_NAME_ 字段 = act_ge_bytearray中NAME_字段</span></span>
<span class="line"><span class="token keyword">select</span> <span class="token operator">*</span>  <span class="token keyword">from</span>  act_re_deployment<span class="token punctuation">;</span> <span class="token comment">-- 工作流部署表</span></span>
<span class="line"><span class="token keyword">select</span> <span class="token operator">*</span>  <span class="token keyword">from</span>  act_ge_bytearray<span class="token punctuation">;</span> <span class="token comment">-- 存储二进制相关文件</span></span>
<span class="line"><span class="token keyword">select</span> <span class="token operator">*</span>  <span class="token keyword">from</span>  act_re_procdef<span class="token punctuation">;</span> <span class="token comment">-- 流程定义数据</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="删除工作流" tabindex="-1"><a class="header-anchor" href="#删除工作流"><span>删除工作流</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">repositoryService<span class="token punctuation">.</span><span class="token function">deleteDeployment</span><span class="token punctuation">(</span>deploymentId<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="查询工作流" tabindex="-1"><a class="header-anchor" href="#查询工作流"><span>查询工作流</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@Test</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">queryProcessDefinition</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ProcessDefinition</span><span class="token punctuation">&gt;</span></span> processDefinitionList <span class="token operator">=</span> repositoryService<span class="token punctuation">.</span><span class="token function">createProcessDefinitionQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token comment">//添加查询条件</span></span>
<span class="line">                <span class="token comment">//.processDefinitionName(&quot;流程定义的name&quot;)</span></span>
<span class="line">                <span class="token comment">//.processDefinitionId(&quot;流程定义的id&quot;)</span></span>
<span class="line">                <span class="token comment">//.processDefinitionKey(&quot;流程定义的key&quot;)</span></span>
<span class="line">                <span class="token comment">//排序</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">orderByProcessDefinitionVersion</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">asc</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token comment">//查询结果</span></span>
<span class="line">                <span class="token comment">//.count() //返回结果集数量</span></span>
<span class="line">                <span class="token comment">//.listPage(firstResult,  maxResults)//分页查询</span></span>
<span class="line">                <span class="token comment">//.singleResult() //唯一结果</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//总的结果集数量</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="runtimeservice" tabindex="-1"><a class="header-anchor" href="#runtimeservice"><span><code>RuntimeService</code></span></a></h2><ul><li><code>RuntimeService</code> 主要针对流程实例相关操作</li><li><code>RuntimeService</code>提供了很多启动流程的API，并且全部的命名规则为<code>startProcessInstanceByXX</code>，比如按照流程定义key值启动的，按照流程定义Id启动的等等。</li></ul><h3 id="获取runtimeservice" tabindex="-1"><a class="header-anchor" href="#获取runtimeservice"><span>获取<code>RuntimeService</code></span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token class-name">RuntimeService</span>  runtimeService <span class="token operator">=</span> processEngine<span class="token punctuation">.</span><span class="token function">getRuntimeService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>在Activiti中，启动了一个流程后，就会创建一个流程实例（ProcessInstance），简单来说流程实例就是根据一次（一条）业务数据用流程驱动的入口 Execution 的含义就是一个流程实例（ProcessInstance）具体要执行的过程对象。 两者的对象映射关系：ProcessInstance(1)—&gt;Execution( N)，其中N &gt;= 1。 每个流程实例至少会有一个执行流（execution），如果流程中没有分支，则N=1，如果流程中出现了分支，则N&gt;1</p><h3 id="启动流程" tabindex="-1"><a class="header-anchor" href="#启动流程"><span>启动流程</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token class-name">ProcessInstance</span> processInstance <span class="token operator">=</span> runtimeService<span class="token punctuation">.</span><span class="token function">startProcessInstanceByKey</span><span class="token punctuation">(</span><span class="token string">&quot;processInsKey&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="生成的表数据-1" tabindex="-1"><a class="header-anchor" href="#生成的表数据-1"><span>生成的表数据</span></a></h3><ol><li>在<code>act_ru_execution</code>表产生一条数据，代表正在执行的流程对象，重点数据如下</li></ol><table><thead><tr><th><div style="width:200px;">字段</div></th><th><div style="width:300px;">说明</div></th></tr></thead><tbody><tr><td>ID_</td><td>正在执行的流程对象的ID</td></tr><tr><td>PROC_INST_ID_</td><td>流程实例ID</td></tr><tr><td>PROC_DEF_ID_</td><td>流程定义ID</td></tr><tr><td>ACT_ID_</td><td>执行到流程任务节点的ID</td></tr></tbody></table><ol start="2"><li>在流程实例的历史表<code>act_hi_procinst</code>中产生一条数据</li></ol><table><thead><tr><th><div style="width:200px;">字段 </div></th><th><div style="width:300px;">说明 </div></th></tr></thead><tbody><tr><td>ID_</td><td>正在执行的流程对象的ID</td></tr><tr><td>PROC_INST_ID_</td><td>流程实例ID</td></tr><tr><td>PROC_DEF_ID_</td><td>流程定义ID</td></tr><tr><td>ACT_ID_</td><td>执行到流程任务节点的ID</td></tr><tr><td>START_TIME_</td><td>流程开始时间</td></tr><tr><td>END_TIME_</td><td>流程结束时间</td></tr></tbody></table><ol start="3"><li>在<code>act_ru_task</code>任务表生成一条数据（经常用的表），存储的流程上正在运行的节点任务，重点数据如下</li></ol><table><thead><tr><th><div style="width:200px;">字段</div></th><th><div style="width:200px;">说明</div></th></tr></thead><tbody><tr><td>EXECUTION_ID_</td><td>流程对象id（act_ru_execution表id）</td></tr><tr><td>PROC_INST_ID_</td><td>流程实例id</td></tr><tr><td>PROC_DEF_ID_</td><td>流程定义id</td></tr><tr><td>NAME_</td><td>当前流程任务的名称（流程图任务节点自己设置的name）</td></tr><tr><td>TASK_DEF_KEY_</td><td>当前流程任务的key（流程图任务节点自己设置的key）</td></tr><tr><td>ASSIGNEE_</td><td>当前任务代办人</td></tr><tr><td>CREATE_TIME_</td><td>任务节点的创建时间</td></tr></tbody></table><ol start="4"><li><code>act_hi_taskinst</code>历史任务实例表，流程所有节点任务历史存储表，生成时机：流程在<code>act_ru_task</code> 创建的时候，同时也会在<code>act_hi_taskinst</code>创建一条。<code>endtime</code>暂时还没有。，重点数据如下</li></ol><table><thead><tr><th>字段</th><th>说明</th></tr></thead><tbody><tr><td>EXECUTION_ID_</td><td>流程对象id（act_ru_execution表id）</td></tr><tr><td>PROC_INST_ID_</td><td>流程实例id</td></tr><tr><td>PROC_DEF_ID_</td><td>流程定义id</td></tr><tr><td>NAME_</td><td>当前流程任务的名称（流程图任务节点自己设置的name）</td></tr><tr><td>TASK_DEF_KEY_</td><td>当前流程任务的key（流程图任务节点自己设置的key）</td></tr><tr><td>ASSIGNEE_</td><td>当前任务代办人</td></tr><tr><td>CREATE_TIME_</td><td>任务节点的创建时间</td></tr></tbody></table><ol start="5"><li><code>act_hi_actinst</code>历史所有经过的活动。某个流程实例历史上经过的全部活动节点，所有的活动，在这表中都会有数据</li></ol><h3 id="流程的激活和挂起" tabindex="-1"><a class="header-anchor" href="#流程的激活和挂起"><span>流程的激活和挂起</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@Test</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">suspendAndActivateProcessInstanceTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">String</span>  processDefinitionKey <span class="token operator">=</span> <span class="token string">&quot;activit_key&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">ProcessInstance</span> processInstance <span class="token operator">=</span>         runtimeService<span class="token punctuation">.</span><span class="token function">createProcessInstanceQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">processDefinitionKey</span><span class="token punctuation">(</span>processDefinitionKey<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">variableValueEquals</span><span class="token punctuation">(</span><span class="token string">&quot;title&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;启动流程&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">singleResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">String</span> processInstanceId <span class="token operator">=</span> processInstance<span class="token punctuation">.</span><span class="token function">getProcessInstanceId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;流程实例是否挂起： &quot;</span> <span class="token operator">+</span>processInstance<span class="token punctuation">.</span><span class="token function">isSuspended</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">//挂起流程实例</span></span>
<span class="line">    runtimeService<span class="token punctuation">.</span><span class="token function">suspendProcessInstanceById</span><span class="token punctuation">(</span>processInstanceId<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">//验证是否挂起</span></span>
<span class="line">    <span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">assertTrue</span><span class="token punctuation">(</span>runtimeService<span class="token punctuation">.</span><span class="token function">createProcessInstanceQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">processInstanceId</span><span class="token punctuation">(</span>processInstanceId<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">singleResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isSuspended</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">//激活流程实例</span></span>
<span class="line">    runtimeService<span class="token punctuation">.</span><span class="token function">activateProcessInstanceById</span><span class="token punctuation">(</span>processInstanceId<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">//验证是否激活</span></span>
<span class="line">    <span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">assertTrue</span><span class="token punctuation">(</span><span class="token operator">!</span>runtimeService<span class="token punctuation">.</span><span class="token function">createProcessInstanceQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">processInstanceId</span><span class="token punctuation">(</span>processInstanceId<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">singleResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isSuspended</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="流程实例的查询" tabindex="-1"><a class="header-anchor" href="#流程实例的查询"><span>流程实例的查询</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@Test</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">qrocessInstanceQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    </span>
<span class="line">    <span class="token class-name">String</span> processDefinitionKey <span class="token operator">=</span> <span class="token string">&quot;activit_key&quot;</span><span class="token punctuation">;</span><span class="token comment">//流程定义key</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">//创建 流程实例查询对象</span></span>
<span class="line">    <span class="token class-name">ProcessInstanceQuery</span> processInstanceQuery <span class="token operator">=</span> runtimeService<span class="token punctuation">.</span><span class="token function">createProcessInstanceQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">//查询出多条记录</span></span>
<span class="line">    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ProcessInstance</span><span class="token punctuation">&gt;</span></span> processInstanceList <span class="token operator">=</span> processInstanceQuery</span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">processDefinitionKey</span><span class="token punctuation">(</span>processDefinitionKey<span class="token punctuation">)</span><span class="token comment">//根据流程定义的key来查询</span></span>
<span class="line">            <span class="token comment">//.processDefinitionVersion(1)//根据流程定义的版本号查询</span></span>
<span class="line">            <span class="token comment">//.processDefinitionId(&quot;activit_key:4:1&quot;) //根据流程定义的id查询</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">orderByProcessDefinitionKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//按照流程定义key的排序</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">desc</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//降序</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  </span>
<span class="line">    <span class="token comment">//如果能确定数据库查询的结果只有一条记录，可以采用 singleResult</span></span>
<span class="line">    <span class="token class-name">ProcessInstance</span> processInstance <span class="token operator">=</span> processInstanceQuery</span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">processDefinitionKey</span><span class="token punctuation">(</span>processDefinitionKey<span class="token punctuation">)</span><span class="token comment">//根据流程定义的key来查询</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">singleResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;流程实例ID： &quot;</span> <span class="token operator">+</span> processInstance<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;正在活动的节点ID： &quot;</span> <span class="token operator">+</span> processInstance<span class="token punctuation">.</span><span class="token function">getActivityId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;流程定义的ID： &quot;</span> <span class="token operator">+</span> processInstance<span class="token punctuation">.</span><span class="token function">getProcessDefinitionId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">//查询激活的流程实例</span></span>
<span class="line">    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ProcessInstance</span><span class="token punctuation">&gt;</span></span> activateList <span class="token operator">=</span> runtimeService<span class="token punctuation">.</span><span class="token function">createProcessInstanceQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">processDefinitionKey</span><span class="token punctuation">(</span>processDefinitionKey<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">active</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">assertTrue</span><span class="token punctuation">(</span>activateList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">//相反 查询挂起的流程则是</span></span>
<span class="line">    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ProcessInstance</span><span class="token punctuation">&gt;</span></span> suspendList <span class="token operator">=</span> runtimeService<span class="token punctuation">.</span><span class="token function">createProcessInstanceQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">processDefinitionKey</span><span class="token punctuation">(</span>processDefinitionKey<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">suspended</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">assertTrue</span><span class="token punctuation">(</span>suspendList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">//根据变量来查询</span></span>
<span class="line">    <span class="token comment">// 根据title=&#39;启动流程&#39;,以及processDefinitionKey来作为查询条件进行查询</span></span>
<span class="line">    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ProcessInstance</span><span class="token punctuation">&gt;</span></span> varList <span class="token operator">=</span> runtimeService<span class="token punctuation">.</span><span class="token function">createProcessInstanceQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">variableValueEquals</span><span class="token punctuation">(</span><span class="token string">&quot;title&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;启动流程&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">assertTrue</span><span class="token punctuation">(</span>varList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="流程对象的查询" tabindex="-1"><a class="header-anchor" href="#流程对象的查询"><span>流程对象的查询</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@Test</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">executionQueryTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">String</span>  processDefinitionKey <span class="token operator">=</span> <span class="token string">&quot;activit_key&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Execution</span><span class="token punctuation">&gt;</span></span> executionList <span class="token operator">=</span> runtimeService<span class="token punctuation">.</span><span class="token function">createExecutionQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">processDefinitionKey</span><span class="token punctuation">(</span>processDefinitionKey<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="流程实例的删除" tabindex="-1"><a class="header-anchor" href="#流程实例的删除"><span>流程实例的删除</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@Test</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">deleteProcessInstanceTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">String</span>  processDefinitionKey <span class="token operator">=</span> <span class="token string">&quot;activit_key&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">ProcessInstance</span> processInstance <span class="token operator">=</span> runtimeService<span class="token punctuation">.</span><span class="token function">createProcessInstanceQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">processDefinitionKey</span><span class="token punctuation">(</span>processDefinitionKey<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">variableValueEquals</span><span class="token punctuation">(</span><span class="token string">&quot;title&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;启动流程&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">singleResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">String</span> processInstanceId <span class="token operator">=</span> processInstance<span class="token punctuation">.</span><span class="token function">getProcessInstanceId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    runtimeService<span class="token punctuation">.</span><span class="token function">deleteProcessInstance</span><span class="token punctuation">(</span>processInstanceId<span class="token punctuation">,</span><span class="token string">&quot;删除测试&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="流程实例的状态查询" tabindex="-1"><a class="header-anchor" href="#流程实例的状态查询"><span>流程实例的状态查询</span></a></h3><p><strong>注：</strong> 在流程执行的过程中，创建的流程实例ID在整个流程执行过程中都不会变化，当流程结束后，流程实例会在正在执行的流程对象表中删除<code>act_ru_execution</code></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@Test</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">queryProcessInstanceState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">String</span>  processDefinitionKey <span class="token operator">=</span> <span class="token string">&quot;activit_key&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">ProcessInstance</span> processInstance <span class="token operator">=</span> runtimeService<span class="token punctuation">.</span><span class="token function">createProcessInstanceQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">processDefinitionKey</span><span class="token punctuation">(</span>processDefinitionKey<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">singleResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">if</span><span class="token punctuation">(</span>processInstance<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;当前流程处在：&quot;</span><span class="token operator">+</span>processInstance<span class="token punctuation">.</span><span class="token function">getActivityId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;当前流程已结束&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="historyservice" tabindex="-1"><a class="header-anchor" href="#historyservice"><span><code>HistoryService</code></span></a></h2><ul><li>使用<code>HistoryService</code>的<code>createHistoricProcessInstanceQuery()</code>方法就可以得到<code>HistoricProcessInstanceQuery</code> 对象，该对象主要用于流程实例的历史数据查询。对于流程实例，不管流程是否完成，都会保存到<code>ACT_HI_PROCINST</code>表中。</li></ul><h3 id="获取historyservice" tabindex="-1"><a class="header-anchor" href="#获取historyservice"><span>获取<code>HistoryService</code></span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token class-name">HistoryService</span> historyService <span class="token operator">=</span> processEngine<span class="token punctuation">.</span><span class="token function">getHistoryService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="查询历史流程实例" tabindex="-1"><a class="header-anchor" href="#查询历史流程实例"><span>查询历史流程实例</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@Test</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">queryHistoricProcessInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">String</span>  processDefinitionKey <span class="token operator">=</span> <span class="token string">&quot;activit_key&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">HistoricProcessInstance</span><span class="token punctuation">&gt;</span></span> historicProcessInstanceList <span class="token operator">=</span></span>
<span class="line">            historyService<span class="token punctuation">.</span><span class="token function">createHistoricProcessInstanceQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//创建历史流程实例查询对象</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">processDefinitionKey</span><span class="token punctuation">(</span>processDefinitionKey<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">orderByProcessInstanceEndTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">desc</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="查询某个流程实例所有历史活动" tabindex="-1"><a class="header-anchor" href="#查询某个流程实例所有历史活动"><span>查询某个流程实例所有历史活动</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"></span>
<span class="line"><span class="token annotation punctuation">@Test</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">queryHistoricActivityInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">String</span>  processInstanceId <span class="token operator">=</span> <span class="token string">&quot;3002&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">HistoricActivityInstance</span><span class="token punctuation">&gt;</span></span> historicProcessInstanceList <span class="token operator">=</span></span>
<span class="line">            historyService<span class="token punctuation">.</span><span class="token function">createHistoricActivityInstanceQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//创建历史流程活动实例查询对象  包括流程活动全部类型</span></span>
<span class="line">                    <span class="token punctuation">.</span><span class="token function">processInstanceId</span><span class="token punctuation">(</span>processInstanceId<span class="token punctuation">)</span></span>
<span class="line">                    <span class="token punctuation">.</span><span class="token function">activityType</span><span class="token punctuation">(</span><span class="token string">&quot;userTask&quot;</span><span class="token punctuation">)</span> <span class="token comment">//筛选出来 userTask 类型的活动</span></span>
<span class="line">                    <span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="根据办理人查看历史流程任务" tabindex="-1"><a class="header-anchor" href="#根据办理人查看历史流程任务"><span>根据办理人查看历史流程任务</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@Test</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">queryHistoricTaskInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">String</span>  processDefinitionKey <span class="token operator">=</span> <span class="token string">&quot;activit_key&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">String</span> assignee <span class="token operator">=</span> <span class="token string">&quot;代理人张三&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">HistoricTaskInstance</span><span class="token punctuation">&gt;</span></span> historicTaskInstanceList <span class="token operator">=</span></span>
<span class="line">            historyService<span class="token punctuation">.</span><span class="token function">createHistoricTaskInstanceQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                    <span class="token punctuation">.</span><span class="token function">processDefinitionKey</span><span class="token punctuation">(</span>processDefinitionKey<span class="token punctuation">)</span></span>
<span class="line">                    <span class="token punctuation">.</span><span class="token function">taskAssignee</span><span class="token punctuation">(</span>assignee<span class="token punctuation">)</span> <span class="token comment">//筛选出来 userTask 类型的活动</span></span>
<span class="line">                    <span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="根据流程实例的id查看历史流程变量" tabindex="-1"><a class="header-anchor" href="#根据流程实例的id查看历史流程变量"><span>根据流程实例的ID查看历史流程变量</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@Test</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">queryHistoricVariableInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">String</span>  processInstanceId <span class="token operator">=</span> <span class="token string">&quot;3002&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">HistoricVariableInstance</span><span class="token punctuation">&gt;</span></span> historicVariableInstanceList <span class="token operator">=</span></span>
<span class="line">            historyService<span class="token punctuation">.</span><span class="token function">createHistoricVariableInstanceQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                    <span class="token punctuation">.</span><span class="token function">processInstanceId</span><span class="token punctuation">(</span>processInstanceId<span class="token punctuation">)</span></span>
<span class="line">                    <span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="taskservice" tabindex="-1"><a class="header-anchor" href="#taskservice"><span><code>TaskService</code></span></a></h2><ul><li>TaskService提供了许多操作流程任务的API,包括任务的查询、创建与删除、权限设置和参数设置等。</li></ul><h3 id="获取taskservice" tabindex="-1"><a class="header-anchor" href="#获取taskservice"><span>获取<code>TaskService</code></span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token class-name">TaskService</span> taskService <span class="token operator">=</span> processEngine<span class="token punctuation">.</span><span class="token function">getTaskService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="任务的创建与删除" tabindex="-1"><a class="header-anchor" href="#任务的创建与删除"><span>任务的创建与删除</span></a></h3><p>一般情况下，可以通过定义流程描述 XML 文件来定义一个任务，Activiti 在解析该文件时，会将任务写到对应的数据表<code>ACT_RU_TASK</code> 中。在此过程中，创建任务的工作已由 Activiti 完成了。如果需要使用任务数据，则可以调用相应查询的API查询任务数据并且进行相应的设置。</p><ol><li><p>Task接口</p><p>一个Task实例表示流程中的一个任务，与其他实例一样，<code>Task</code>是一个接口，并且遵守数据映射实体的命名规范。<code>Task</code> 的实现类为<code>TaskEntityImpl</code>,对应的数据库表为<code>ACT_RU_TASK</code>。TaskEntityImpl包括以下映射属性</p><ul><li><p>id:主键，对应D字段。</p></li><li><p>revision:该数据版本号，对应REV字段。</p></li><li><p>owner::任务拥有人，对应OWNER字段。</p></li><li><p>assignee:被指定需要执行任务的人，对应ASSIGNEE字段。</p></li><li><p>delegationState:任务被委派的状态，对应DELEGATION字段。</p></li><li><p>parentTaskId:父任务的ID(如果本身是子任务的话)，对应PARENT_TASK_ID_字段。</p></li><li><p>name:任务名称，对应NAME字段。</p></li><li><p>description:任务的描述信息，对应DESCRIPTION字段。</p></li><li><p>priority:任务的优先级，默认值为50，表示正常状态，对应PRIORITY字段。</p></li><li><p>createTime:任务创建时间，对应CREATE_TIME字段。</p></li><li><p>dueDate:预订日期，对应DUE_DATE字段。</p></li><li><p>executionId:该任务对应的执行流D,对应EXECUTION ID字段。</p></li><li><p>processDefinitionId:任务对应的流程定义D,对应PROC_DEF_ID_字段。</p></li><li><p>claimTime:任务的提醒时间，对应CLAIM_TIME字段。</p></li></ul></li><li><p>创建与保存Task实例</p><p>与创建用户组实例(Group)、用户实例(User)一样，<code>TaskService</code>提供了创建<code>Task</code>实例的方法。调用<code>TaskService</code>的<code>newTask()</code> 与<code>new Task(String taskId)</code>方法，可以获取一个<code>Task</code>实例开发人员不需要关心<code>Task</code>的创建细节。调用这两个创建<code>Task</code> 实例的方法时，<code>TaskService</code>会初始化Task的部分属性，这些属性包括<code>taskId</code>、创建时间等。</p><p>创建了Task实例后，如果需要将其保存到数据库中，则可以使用<code>TaskService</code>的<code>saveTask(Task task)</code>方法，如果保存的<code>Task</code> 实例有<code>ID</code>值，则会使用该值作为<code>Task</code>数据的主键，没有的话，则由<code>Activiti</code>为其生成主键。</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token class-name">ProcessEngine</span> processEngine <span class="token operator">=</span> <span class="token class-name">ProcessEngines</span><span class="token punctuation">.</span><span class="token function">getDefaultProcessEngine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">TaskService</span> taskService <span class="token operator">=</span> processEngine<span class="token punctuation">.</span><span class="token function">getTaskService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">//保存第一个Task，不设置ID</span></span>
<span class="line"><span class="token class-name">Task</span> task1 <span class="token operator">=</span> taskService<span class="token punctuation">.</span><span class="token function">newTask</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">taskService<span class="token punctuation">.</span><span class="token function">saveTask</span><span class="token punctuation">(</span>task1<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">//保存第二个task，设置ID</span></span>
<span class="line"><span class="token class-name">Task</span> task2 <span class="token operator">=</span> taskService<span class="token punctuation">.</span><span class="token function">newTask</span><span class="token punctuation">(</span><span class="token string">&quot;审核任务&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">taskService<span class="token punctuation">.</span><span class="token function">saveTask</span><span class="token punctuation">(</span>task2<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>删除任务</p><p>TaskService提供了多个删除任务的方法，包括删除单个任务、删除多个任务的方法。由开发人员决定是否进行级联删除。</p><p>删除任务时，将会删除该任务下面全部的子任务和该任务本身，如果设置了进行级联删除，则会删除与该任务相关的全部历史数据(<code>ACT_HI_TASKINST</code> 表) 和子任务，如果不进行级联删除，则会使用历史数据将该任务设置为结束状态。除此之外，如果尝试删除一条不存的任务数据（提供不存在的<code>taskId</code>) ,此时<code>deleteTask</code>方法会到历史数据表中查询是否存在该任务相关的历史数据，如果存在则删除，不存在则忽略。</p><ul><li><code>deleteTask(String taskId)</code> 根据Task的ID删除Task数据，调用该方法不会进行级联删除。</li><li><code>deleteTask(String taskId,boolean cascade)</code> 根据Task的ID删除Task数据，由调用者决定是否进行级联删除。</li><li>\`deleteTasks(CollectiontaskIds) 提供多个Task的ID进行多条数据删除，调用该方法不会进行级联删除。</li><li>\`deleteTasks(Collection-taskIds,boolean cascade) 提供多个Task的ID进行多条数据删除，由调用者决定是否进行级联删除。</li></ul></li></ol><h3 id="流程变量的设置和获取" tabindex="-1"><a class="header-anchor" href="#流程变量的设置和获取"><span>流程变量的设置和获取</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * 流程实例上的变量设置</span>
<span class="line"> */</span></span>
<span class="line"><span class="token annotation punctuation">@Test</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">startProcessInstanceWithVariables</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">String</span> processDefinitionKey <span class="token operator">=</span> <span class="token string">&quot;activit_key&quot;</span><span class="token punctuation">;</span><span class="token comment">//流程定义key</span></span>
<span class="line">    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span> <span class="token punctuation">,</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> variables <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    variables<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;请假天数&quot;</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    variables<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;请假原因&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;呵呵哒&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    variables<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;请假事件&quot;</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * todo 在流程实例上添加变量：影响的范围，当前流程实例下的所有任务都能够获取到该变量，正在执行的流程对象也能够获取到变量</span>
<span class="line">     * todo 当流程实例结束后：流程变量消失，正在执行的对象消失，流程变量历史表保留变量</span>
<span class="line">     * todo 影响的表如下：</span>
<span class="line">     * select  *  from act_ru_variable; -- 存储运行时变量的表</span>
<span class="line">     * select  *  from act_hi_varinst; -- 存储流程变量的历史表</span>
<span class="line">     */</span></span>
<span class="line">    runtimeService<span class="token punctuation">.</span><span class="token function">startProcessInstanceByKey</span><span class="token punctuation">(</span>processDefinitionKey<span class="token punctuation">,</span>variables<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * 流程实例级别的变量查询（在流程实例启动的时候，就把变量放置到正在执行的流程对象中）</span>
<span class="line"> */</span></span>
<span class="line"><span class="token annotation punctuation">@Test</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">queryProcessInstanceVariable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">String</span>  processDefinitionKey <span class="token operator">=</span> <span class="token string">&quot;activit_key&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// ------  通过任务 获取流程实例上的变量 ----------------</span></span>
<span class="line">    <span class="token comment">//查询正在执行的任务</span></span>
<span class="line">    <span class="token class-name">String</span> assignee <span class="token operator">=</span> <span class="token string">&quot;代理人张三&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Task</span><span class="token punctuation">&gt;</span></span> taskList <span class="token operator">=</span> taskService<span class="token punctuation">.</span><span class="token function">createTaskQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//创建任务查询对象</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">processDefinitionKey</span><span class="token punctuation">(</span>processDefinitionKey<span class="token punctuation">)</span> <span class="token comment">//根据流程定义的key查询</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">taskAssignee</span><span class="token punctuation">(</span>assignee<span class="token punctuation">)</span>  <span class="token comment">//根据代理人查询</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">orderByTaskCreateTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//按照任务创建时间排序</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">desc</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">//获取当前执行的任务</span></span>
<span class="line">    <span class="token class-name">Task</span>  task <span class="token operator">=</span> taskList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">//通过任务获取流程实例上的变量</span></span>
<span class="line">    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span> <span class="token punctuation">,</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> variables <span class="token operator">=</span> taskService<span class="token punctuation">.</span><span class="token function">getVariables</span><span class="token punctuation">(</span>task<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>variables<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// ------  通过执行对象 获取流程实例上的变量 ----------------</span></span>
<span class="line">    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Execution</span><span class="token punctuation">&gt;</span></span> executionList <span class="token operator">=</span> runtimeService<span class="token punctuation">.</span><span class="token function">createExecutionQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//创建正在执行的流程对象</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">processDefinitionKey</span><span class="token punctuation">(</span>processDefinitionKey<span class="token punctuation">)</span> <span class="token comment">//根据流程定义的key查询</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">Execution</span> execution <span class="token operator">=</span> executionList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span> <span class="token punctuation">,</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> variables2 <span class="token operator">=</span> runtimeService<span class="token punctuation">.</span><span class="token function">getVariables</span><span class="token punctuation">(</span>execution<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>variables2<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>数据表</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment"># 存储运行时变量的表</span></span>
<span class="line"><span class="token keyword">select</span>  <span class="token operator">*</span>  <span class="token keyword">from</span> act_ru_variable<span class="token punctuation">;</span> </span>
<span class="line"><span class="token comment"># 存储流程变量的历史表</span></span>
<span class="line"><span class="token keyword">select</span>  <span class="token operator">*</span>  <span class="token keyword">from</span> act_hi_varinst<span class="token punctuation">;</span> </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="在当前任务中存储和查询流程变量" tabindex="-1"><a class="header-anchor" href="#在当前任务中存储和查询流程变量"><span>在当前任务中存储和查询流程变量</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * 在当前任务中存储流程变量， 流程的变量存储在正在执行的流程对象上。当前任务后面的所有任务就都可以拿到这个流程变量</span>
<span class="line"> *</span>
<span class="line"> */</span></span>
<span class="line"><span class="token annotation punctuation">@Test</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">putVariableInTask</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">String</span>  processDefinitionKey <span class="token operator">=</span> <span class="token string">&quot;activit_key&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">//查询正在执行的任务</span></span>
<span class="line">    <span class="token class-name">String</span> assignee <span class="token operator">=</span> <span class="token string">&quot;代理人张三&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Task</span><span class="token punctuation">&gt;</span></span> taskList <span class="token operator">=</span> taskService<span class="token punctuation">.</span><span class="token function">createTaskQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//创建任务查询对象</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">processDefinitionKey</span><span class="token punctuation">(</span>processDefinitionKey<span class="token punctuation">)</span> <span class="token comment">//根据流程定义的key查询</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">taskAssignee</span><span class="token punctuation">(</span>assignee<span class="token punctuation">)</span>  <span class="token comment">//根据代理人查询</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">orderByTaskCreateTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//按照任务创建时间排序</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">desc</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">//获取当前执行的任务</span></span>
<span class="line">    <span class="token class-name">Task</span>  task <span class="token operator">=</span> taskList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">//【方式1】设置流程变量</span></span>
<span class="line">    taskService<span class="token punctuation">.</span><span class="token function">setVariable</span><span class="token punctuation">(</span>task<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&quot;变量1&quot;</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    taskService<span class="token punctuation">.</span><span class="token function">setVariable</span><span class="token punctuation">(</span>task<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&quot;变量21&quot;</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    taskService<span class="token punctuation">.</span><span class="token function">setVariable</span><span class="token punctuation">(</span>task<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&quot;变量3&quot;</span><span class="token punctuation">,</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">//todo  setVariableLocal:流程变量只在当前任务有效，过了当前任务，后面就无法获取变量 【实际使用不多】</span></span>
<span class="line">    taskService<span class="token punctuation">.</span><span class="token function">setVariableLocal</span><span class="token punctuation">(</span>task<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&quot;变量3&quot;</span><span class="token punctuation">,</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">//【方式2】任务完成的同时，设置流程变量</span></span>
<span class="line">    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span>    variableMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    variableMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;变量1&quot;</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    variableMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;变量2&quot;</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    variableMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;变量3&quot;</span><span class="token punctuation">,</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    taskService<span class="token punctuation">.</span><span class="token function">complete</span><span class="token punctuation">(</span>task<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>variableMap<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">//【方式3】放置mode实体变量</span></span>
<span class="line">    <span class="token class-name">LeaveModel</span> leaveModel <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LeaveModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    leaveModel<span class="token punctuation">.</span><span class="token function">setDays</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    leaveModel<span class="token punctuation">.</span><span class="token function">setDescr</span><span class="token punctuation">(</span><span class="token string">&quot;内容&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    leaveModel<span class="token punctuation">.</span><span class="token function">setReason</span><span class="token punctuation">(</span><span class="token string">&quot;内容原因&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span>    variableObjectMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    variableObjectMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;变量4&quot;</span><span class="token punctuation">,</span>leaveModel<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    taskService<span class="token punctuation">.</span><span class="token function">complete</span><span class="token punctuation">(</span>task<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>variableObjectMap<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * 获取流程变量</span>
<span class="line"> */</span></span>
<span class="line"><span class="token annotation punctuation">@Test</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">getVariableInTask</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">String</span>  processDefinitionKey <span class="token operator">=</span> <span class="token string">&quot;activit_key&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">//查询正在执行的任务</span></span>
<span class="line">    <span class="token class-name">String</span> assignee <span class="token operator">=</span> <span class="token string">&quot;代理人张三&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Task</span><span class="token punctuation">&gt;</span></span> taskList <span class="token operator">=</span> taskService<span class="token punctuation">.</span><span class="token function">createTaskQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//创建任务查询对象</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">processDefinitionKey</span><span class="token punctuation">(</span>processDefinitionKey<span class="token punctuation">)</span> <span class="token comment">//根据流程定义的key查询</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">taskAssignee</span><span class="token punctuation">(</span>assignee<span class="token punctuation">)</span>  <span class="token comment">//根据代理人查询</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">orderByTaskCreateTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//按照任务创建时间排序</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">desc</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">//获取当前执行的任务</span></span>
<span class="line">    <span class="token class-name">Task</span>  task <span class="token operator">=</span> taskList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">//【方式1】获取单个流程变量</span></span>
<span class="line">    <span class="token class-name">Integer</span> v1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">)</span> taskService<span class="token punctuation">.</span><span class="token function">getVariable</span><span class="token punctuation">(</span>task<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&quot;变量1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">Integer</span> v2 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">)</span> taskService<span class="token punctuation">.</span><span class="token function">getVariable</span><span class="token punctuation">(</span>task<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&quot;变量21&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">Integer</span> v3 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">)</span> taskService<span class="token punctuation">.</span><span class="token function">getVariable</span><span class="token punctuation">(</span>task<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&quot;变量3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>v1<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>v2<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>v3<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">//【方式2】获取map集合的流程变量</span></span>
<span class="line">    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span>    variableMap <span class="token operator">=</span> taskService<span class="token punctuation">.</span><span class="token function">getVariables</span><span class="token punctuation">(</span>task<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>variableMap<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">//【方式3】获取map中的mode实体变量</span></span>
<span class="line">    <span class="token class-name">LeaveModel</span> leaveModel <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">LeaveModel</span><span class="token punctuation">)</span>variableMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;变量4&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="自定义对象作为流程变量" tabindex="-1"><a class="header-anchor" href="#自定义对象作为流程变量"><span>自定义对象作为流程变量</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * 通过任务    在正在执行的流程对象中，放自定义的实体对象，该实体类必须实现序列化，并且要生成UID（反序列化需要）</span>
<span class="line"> *</span>
<span class="line"> */</span></span>
<span class="line"><span class="token annotation punctuation">@Test</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">putVariableInTaskWithObjectMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">String</span>  processDefinitionKey <span class="token operator">=</span> <span class="token string">&quot;activit_key&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">//查询正在执行的任务</span></span>
<span class="line">    <span class="token class-name">String</span> assignee <span class="token operator">=</span> <span class="token string">&quot;代理人张三&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Task</span><span class="token punctuation">&gt;</span></span> taskList <span class="token operator">=</span> taskService<span class="token punctuation">.</span><span class="token function">createTaskQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//创建任务查询对象</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">processDefinitionKey</span><span class="token punctuation">(</span>processDefinitionKey<span class="token punctuation">)</span> <span class="token comment">//根据流程定义的key查询</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">taskAssignee</span><span class="token punctuation">(</span>assignee<span class="token punctuation">)</span>  <span class="token comment">//根据代理人查询</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">orderByTaskCreateTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//按照任务创建时间排序</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">desc</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">//获取当前执行的任务</span></span>
<span class="line">    <span class="token class-name">Task</span>  task <span class="token operator">=</span> taskList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">//【方式3】放置mode实体变量</span></span>
<span class="line">    <span class="token class-name">LeaveModel</span> leaveModel <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LeaveModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    leaveModel<span class="token punctuation">.</span><span class="token function">setDays</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    leaveModel<span class="token punctuation">.</span><span class="token function">setDescr</span><span class="token punctuation">(</span><span class="token string">&quot;内容&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    leaveModel<span class="token punctuation">.</span><span class="token function">setReason</span><span class="token punctuation">(</span><span class="token string">&quot;内容原因&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span>    variableObjectMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    variableObjectMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;变量4&quot;</span><span class="token punctuation">,</span>leaveModel<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    taskService<span class="token punctuation">.</span><span class="token function">complete</span><span class="token punctuation">(</span>task<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>variableObjectMap<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * 获取流程变量</span>
<span class="line"> */</span></span>
<span class="line"><span class="token annotation punctuation">@Test</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">getVariableInTaskWithObjectMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">String</span>  processDefinitionKey <span class="token operator">=</span> <span class="token string">&quot;activit_key&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">//查询正在执行的任务</span></span>
<span class="line">    <span class="token class-name">String</span> assignee <span class="token operator">=</span> <span class="token string">&quot;代理人张三&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Task</span><span class="token punctuation">&gt;</span></span> taskList <span class="token operator">=</span> taskService<span class="token punctuation">.</span><span class="token function">createTaskQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//创建任务查询对象</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">processDefinitionKey</span><span class="token punctuation">(</span>processDefinitionKey<span class="token punctuation">)</span> <span class="token comment">//根据流程定义的key查询</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">taskAssignee</span><span class="token punctuation">(</span>assignee<span class="token punctuation">)</span>  <span class="token comment">//根据代理人查询</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">orderByTaskCreateTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//按照任务创建时间排序</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">desc</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">//获取当前执行的任务</span></span>
<span class="line">    <span class="token class-name">Task</span>  task <span class="token operator">=</span> taskList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">//【方式1】获取单个流程变量</span></span>
<span class="line">    <span class="token class-name">Integer</span> v1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">)</span> taskService<span class="token punctuation">.</span><span class="token function">getVariable</span><span class="token punctuation">(</span>task<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&quot;变量1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">Integer</span> v2 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">)</span> taskService<span class="token punctuation">.</span><span class="token function">getVariable</span><span class="token punctuation">(</span>task<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&quot;变量21&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">Integer</span> v3 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">)</span> taskService<span class="token punctuation">.</span><span class="token function">getVariable</span><span class="token punctuation">(</span>task<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&quot;变量3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>v1<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>v2<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>v3<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">//【方式2】获取map集合的流程变量</span></span>
<span class="line">    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span>    variableMap <span class="token operator">=</span> taskService<span class="token punctuation">.</span><span class="token function">getVariables</span><span class="token punctuation">(</span>task<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>variableMap<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">//【方式3】获取map中的mode实体变量</span></span>
<span class="line">    <span class="token class-name">LeaveModel</span> leaveModel <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">LeaveModel</span><span class="token punctuation">)</span>variableMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;变量4&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>leaveModel<span class="token punctuation">.</span><span class="token function">getDays</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>leaveModel<span class="token punctuation">.</span><span class="token function">getDescr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>leaveModel<span class="token punctuation">.</span><span class="token function">getReason</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="查询历史流程变量" tabindex="-1"><a class="header-anchor" href="#查询历史流程变量"><span>查询历史流程变量</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"></span>
<span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * 根据流程实例的ID  查看历史流程变量</span>
<span class="line"> */</span></span>
<span class="line"><span class="token annotation punctuation">@Test</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">queryHistoricVariableInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">String</span>  processInstanceId <span class="token operator">=</span> <span class="token string">&quot;3002&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">HistoricVariableInstance</span><span class="token punctuation">&gt;</span></span> historicVariableInstanceList <span class="token operator">=</span></span>
<span class="line">            historyService<span class="token punctuation">.</span><span class="token function">createHistoricVariableInstanceQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                    <span class="token punctuation">.</span><span class="token function">processInstanceId</span><span class="token punctuation">(</span>processInstanceId<span class="token punctuation">)</span></span>
<span class="line">                    <span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,78))])}const b=c(k,[["render",d],["__file","01-核心API.html.vue"]]),g=JSON.parse('{"path":"/docs/activiti/01-%E6%A0%B8%E5%BF%83API.html","title":"核心API","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"ProcessEngine","slug":"processengine","link":"#processengine","children":[{"level":3,"title":"获取ProcessEngine","slug":"获取processengine","link":"#获取processengine","children":[]}]},{"level":2,"title":"服务service","slug":"服务service","link":"#服务service","children":[]},{"level":2,"title":"RepositoryService","slug":"repositoryservice","link":"#repositoryservice","children":[{"level":3,"title":"获取RepositoryService","slug":"获取repositoryservice","link":"#获取repositoryservice","children":[]},{"level":3,"title":"部署工作流","slug":"部署工作流","link":"#部署工作流","children":[]},{"level":3,"title":"生成的表数据","slug":"生成的表数据","link":"#生成的表数据","children":[]},{"level":3,"title":"删除工作流","slug":"删除工作流","link":"#删除工作流","children":[]},{"level":3,"title":"查询工作流","slug":"查询工作流","link":"#查询工作流","children":[]}]},{"level":2,"title":"RuntimeService","slug":"runtimeservice","link":"#runtimeservice","children":[{"level":3,"title":"获取RuntimeService","slug":"获取runtimeservice","link":"#获取runtimeservice","children":[]},{"level":3,"title":"启动流程","slug":"启动流程","link":"#启动流程","children":[]},{"level":3,"title":"生成的表数据","slug":"生成的表数据-1","link":"#生成的表数据-1","children":[]},{"level":3,"title":"流程的激活和挂起","slug":"流程的激活和挂起","link":"#流程的激活和挂起","children":[]},{"level":3,"title":"流程实例的查询","slug":"流程实例的查询","link":"#流程实例的查询","children":[]},{"level":3,"title":"流程对象的查询","slug":"流程对象的查询","link":"#流程对象的查询","children":[]},{"level":3,"title":"流程实例的删除","slug":"流程实例的删除","link":"#流程实例的删除","children":[]},{"level":3,"title":"流程实例的状态查询","slug":"流程实例的状态查询","link":"#流程实例的状态查询","children":[]}]},{"level":2,"title":"HistoryService","slug":"historyservice","link":"#historyservice","children":[{"level":3,"title":"获取HistoryService","slug":"获取historyservice","link":"#获取historyservice","children":[]},{"level":3,"title":"查询历史流程实例","slug":"查询历史流程实例","link":"#查询历史流程实例","children":[]},{"level":3,"title":"查询某个流程实例所有历史活动","slug":"查询某个流程实例所有历史活动","link":"#查询某个流程实例所有历史活动","children":[]},{"level":3,"title":"根据办理人查看历史流程任务","slug":"根据办理人查看历史流程任务","link":"#根据办理人查看历史流程任务","children":[]},{"level":3,"title":"根据流程实例的ID查看历史流程变量","slug":"根据流程实例的id查看历史流程变量","link":"#根据流程实例的id查看历史流程变量","children":[]}]},{"level":2,"title":"TaskService","slug":"taskservice","link":"#taskservice","children":[{"level":3,"title":"获取TaskService","slug":"获取taskservice","link":"#获取taskservice","children":[]},{"level":3,"title":"任务的创建与删除","slug":"任务的创建与删除","link":"#任务的创建与删除","children":[]},{"level":3,"title":"流程变量的设置和获取","slug":"流程变量的设置和获取","link":"#流程变量的设置和获取","children":[]},{"level":3,"title":"在当前任务中存储和查询流程变量","slug":"在当前任务中存储和查询流程变量","link":"#在当前任务中存储和查询流程变量","children":[]},{"level":3,"title":"自定义对象作为流程变量","slug":"自定义对象作为流程变量","link":"#自定义对象作为流程变量","children":[]},{"level":3,"title":"查询历史流程变量","slug":"查询历史流程变量","link":"#查询历史流程变量","children":[]}]}],"git":{"updatedTime":1734528576000,"contributors":[{"name":"wangxiaoquan","email":"wxq","commits":2}]},"filePathRelative":"docs/activiti/01-核心API.md"}');export{b as comp,g as data};
