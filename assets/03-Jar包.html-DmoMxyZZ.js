import{_ as r,c as t,a,b as n,w as l,d,r as c,o as p,e as i}from"./app-CKtXyHQO.js";const o={},m={class:"table-of-contents"};function u(v,s){const e=c("router-link");return p(),t("div",null,[s[6]||(s[6]=a("h1",{id:"jar包",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#jar包"},[a("span",null,"Jar包")])],-1)),s[7]||(s[7]=a("p",null,[a("strong",null,"目录")],-1)),a("nav",m,[a("ul",null,[a("li",null,[n(e,{to:"#命令格式"},{default:l(()=>s[0]||(s[0]=[i("命令格式")])),_:1})]),a("li",null,[n(e,{to:"#参数说明"},{default:l(()=>s[1]||(s[1]=[i("参数说明")])),_:1})]),a("li",null,[n(e,{to:"#示例-1-将两个类文件归档到一个名为-classes-jar-的档案中"},{default:l(()=>s[2]||(s[2]=[i("示例 1: 将两个类文件归档到一个名为 classes.jar 的档案中")])),_:1})]),a("li",null,[n(e,{to:"#示例-2-使用现有的清单文件-mymanifest-并-将-foo-目录中的所有文件归档到-classes-jar-中"},{default:l(()=>s[3]||(s[3]=[i("示例 2: 使用现有的清单文件 'mymanifest' 并 将 foo/ 目录中的所有文件归档到 'classes.jar' 中")])),_:1})]),a("li",null,[n(e,{to:"#解压"},{default:l(()=>s[4]||(s[4]=[i("解压")])),_:1})]),a("li",null,[n(e,{to:"#打包"},{default:l(()=>s[5]||(s[5]=[i("打包")])),_:1})])])]),s[8]||(s[8]=d(`<h2 id="命令格式" tabindex="-1"><a class="header-anchor" href="#命令格式"><span>命令格式</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">jar <span class="token punctuation">{</span>ctxui<span class="token punctuation">}</span><span class="token comment">## [vfmn0PMe] [jar-file] [manifest-file] [entry-point] [-C dir] files ...</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="参数说明" tabindex="-1"><a class="header-anchor" href="#参数说明"><span>参数说明</span></a></h2><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">-c  创建新档案 </span>
<span class="line">-t  列出档案目录 </span>
<span class="line">-x  从档案中提取指定的 (或所有) 文件 </span>
<span class="line">-u  更新现有档案 </span>
<span class="line">-v  在标准输出中生成详细输出 </span>
<span class="line">-f  指定档案文件名 </span>
<span class="line">-m  包含指定清单文件中的清单信息</span>
<span class="line">-n  创建新档案后执行 Pack200 规范化 </span>
<span class="line">-e  为捆绑到可执行 jar 文件的独立应用程序 指定应用程序入口点 </span>
<span class="line">-0  仅存储; 不使用任何 ZIP 压缩 </span>
<span class="line">-P  保留文件名中的前导 &#39;/&#39; (绝对路径) 和 &quot;..&quot; (父目录) 组件 </span>
<span class="line">-M  不创建条目的清单文件 -i  为指定的 jar 文件生成索引信息 </span>
<span class="line">-C  更改为指定的目录并包含以下文件 </span>
<span class="line">如果任何文件为目录, 则对其进行递归处理。</span>
<span class="line">清单文件名, 档案文件名和入口点名称的指定顺序与 &#39;m&#39;, &#39;f&#39; 和 &#39;e&#39; 标记的指定顺序相同。</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="示例-1-将两个类文件归档到一个名为-classes-jar-的档案中" tabindex="-1"><a class="header-anchor" href="#示例-1-将两个类文件归档到一个名为-classes-jar-的档案中"><span>示例 1: 将两个类文件归档到一个名为 classes.jar 的档案中</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">jar cvf classes.jar Foo.class Bar.class</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="示例-2-使用现有的清单文件-mymanifest-并-将-foo-目录中的所有文件归档到-classes-jar-中" tabindex="-1"><a class="header-anchor" href="#示例-2-使用现有的清单文件-mymanifest-并-将-foo-目录中的所有文件归档到-classes-jar-中"><span>示例 2: 使用现有的清单文件 &#39;mymanifest&#39; 并 将 foo/ 目录中的所有文件归档到 &#39;classes.jar&#39; 中</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">jar cvfm classes.jar mymanifest <span class="token parameter variable">-C</span> foo/ <span class="token builtin class-name">.</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="解压" tabindex="-1"><a class="header-anchor" href="#解压"><span>解压</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">jar <span class="token parameter variable">-xvf</span> xxx.jar</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="打包" tabindex="-1"><a class="header-anchor" href="#打包"><span>打包</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">jar cvfM0 xxx.jar <span class="token parameter variable">-C</span> <span class="token builtin class-name">.</span> BOOT-INF/ com/ META-INF/</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,12))])}const b=r(o,[["render",u],["__file","03-Jar包.html.vue"]]),f=JSON.parse(`{"path":"/docs/java/03-Jar%E5%8C%85.html","title":"Jar包","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"命令格式","slug":"命令格式","link":"#命令格式","children":[]},{"level":2,"title":"参数说明","slug":"参数说明","link":"#参数说明","children":[]},{"level":2,"title":"示例 1: 将两个类文件归档到一个名为 classes.jar 的档案中","slug":"示例-1-将两个类文件归档到一个名为-classes-jar-的档案中","link":"#示例-1-将两个类文件归档到一个名为-classes-jar-的档案中","children":[]},{"level":2,"title":"示例 2: 使用现有的清单文件 'mymanifest' 并 将 foo/ 目录中的所有文件归档到 'classes.jar' 中","slug":"示例-2-使用现有的清单文件-mymanifest-并-将-foo-目录中的所有文件归档到-classes-jar-中","link":"#示例-2-使用现有的清单文件-mymanifest-并-将-foo-目录中的所有文件归档到-classes-jar-中","children":[]},{"level":2,"title":"解压","slug":"解压","link":"#解压","children":[]},{"level":2,"title":"打包","slug":"打包","link":"#打包","children":[]}],"git":{"updatedTime":1753779065000,"contributors":[{"name":"wangxiaoquan","email":"wxq","commits":2}]},"filePathRelative":"docs/java/03-Jar包.md"}`);export{b as comp,f as data};
