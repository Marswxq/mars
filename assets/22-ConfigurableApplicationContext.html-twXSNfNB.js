import{_ as e,c as t,a as s,b as p,w as l,d as i,r as o,o as c,e as u}from"./app-CKtXyHQO.js";const r={},d={class:"table-of-contents"};function k(v,n){const a=o("router-link");return c(),t("div",null,[n[1]||(n[1]=s("h1",{id:"configurableapplicationcontext",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#configurableapplicationcontext"},[s("span",null,"ConfigurableApplicationContext")])],-1)),n[2]||(n[2]=s("p",null,[s("strong",null,"目录")],-1)),s("nav",d,[s("ul",null,[s("li",null,[p(a,{to:"#手动注册spring实例"},{default:l(()=>n[0]||(n[0]=[u("手动注册spring实例")])),_:1})])])]),n[3]||(n[3]=i(`<h2 id="手动注册spring实例" tabindex="-1"><a class="header-anchor" href="#手动注册spring实例"><span>手动注册spring实例</span></a></h2><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@Component</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestConfigurableApplicationContext</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">interface</span> <span class="token class-name">TestBean</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">class</span> <span class="token class-name">TestBeanImpl</span> <span class="token keyword">implements</span> <span class="token class-name">TestBean</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">        <span class="token annotation punctuation">@Override</span></span>
<span class="line">        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;this is test method&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">ConfigurableApplicationContext</span> context<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">TestConfigurableApplicationContext</span><span class="token punctuation">(</span><span class="token class-name">ConfigurableApplicationContext</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>context <span class="token operator">=</span> context<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@PostConstruct</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">registerBean</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">TestBean</span> testBean <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TestBeanImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        context<span class="token punctuation">.</span><span class="token function">getBeanFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">registerSingleton</span><span class="token punctuation">(</span><span class="token string">&quot;testBean&quot;</span><span class="token punctuation">,</span> testBean<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2))])}const b=e(r,[["render",k],["__file","22-ConfigurableApplicationContext.html.vue"]]),g=JSON.parse('{"path":"/docs/java/22-ConfigurableApplicationContext.html","title":"ConfigurableApplicationContext","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"手动注册spring实例","slug":"手动注册spring实例","link":"#手动注册spring实例","children":[]}],"git":{"updatedTime":1734338014000,"contributors":[{"name":"wangxiaoquan","email":"wxq","commits":1}]},"filePathRelative":"docs/java/22-ConfigurableApplicationContext.md"}');export{b as comp,g as data};
