import{_ as o,c as r,a,b as n,w as t,d as s,r as d,o as u,e as i}from"./app-CKtXyHQO.js";const m={},p={class:"table-of-contents"};function g(h,e){const l=d("router-link");return u(),r("div",null,[e[5]||(e[5]=a("h1",{id:"validation注解",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#validation注解"},[a("span",null,"validation注解")])],-1)),e[6]||(e[6]=a("p",null,[a("strong",null,"目录")],-1)),a("nav",p,[a("ul",null,[a("li",null,[n(l,{to:"#空检查"},{default:t(()=>e[0]||(e[0]=[i("空检查")])),_:1})]),a("li",null,[n(l,{to:"#booelan检查"},{default:t(()=>e[1]||(e[1]=[i("Booelan检查")])),_:1})]),a("li",null,[n(l,{to:"#长度检查"},{default:t(()=>e[2]||(e[2]=[i("长度检查")])),_:1})]),a("li",null,[n(l,{to:"#日期检查"},{default:t(()=>e[3]||(e[3]=[i("日期检查")])),_:1})]),a("li",null,[n(l,{to:"#数值检查"},{default:t(()=>e[4]||(e[4]=[i("数值检查")])),_:1})])])]),e[7]||(e[7]=s('<h2 id="空检查" tabindex="-1"><a class="header-anchor" href="#空检查"><span>空检查</span></a></h2><p>@Null 验证对象是否为null @NotNull 验证对象是否不为null, 无法查检长度为0的字符串 @NotBlank 检查约束字符串是不是Null还有被Trim的长度是否大于0,只对字符串,且会去掉前后空格. @NotEmpty 检查约束元素是否为NULL或者是EMPTY.</p><h2 id="booelan检查" tabindex="-1"><a class="header-anchor" href="#booelan检查"><span>Booelan检查</span></a></h2><p>@AssertTrue 验证 Boolean 对象是否为 true @AssertFalse 验证 Boolean 对象是否为 false</p><h2 id="长度检查" tabindex="-1"><a class="header-anchor" href="#长度检查"><span>长度检查</span></a></h2><p>@Size(min=, max=) 验证对象（Array,Collection,Map,String）长度是否在给定的范围之内 @Length(min=, max=) 验证字符串的长度是否在给定的范围之内，包含两端</p><h2 id="日期检查" tabindex="-1"><a class="header-anchor" href="#日期检查"><span>日期检查</span></a></h2><p>@Past 验证 Date 和 Calendar 对象是否在当前时间之前 @Future 验证 Date 和 Calendar 对象是否在当前时间之后 @Pattern 验证 String 对象是否符合正则表达式的规则</p><h2 id="数值检查" tabindex="-1"><a class="header-anchor" href="#数值检查"><span>数值检查</span></a></h2><p>建议使用在Stirng,Integer类型，不建议使用在int类型上，因为表单值为“”时无法转换为int，但可以转换为Stirng为&quot;&quot;,Integer为null @Min 验证 Number 和 String 对象是否大等于指定的值 @Max 验证 Number 和 String 对象是否小等于指定的值 @DecimalMax 被标注的值必须不大于约束中指定的最大值. 这个约束的参数是一个通过BigDecimal定义的最大值的字符串表示.小数存在精度 @DecimalMin 被标注的值必须不小于约束中指定的最小值. 这个约束的参数是一个通过BigDecimal定义的最小值的字符串表示.小数存在精度 @Digits 验证 Number 和 String 的构成是否合法 @Digits(integer=,fraction=) 验证字符串是否是符合指定格式的数字，interger指定整数精度，fraction指定小数精度 @Range(min=, max=) Checks whether the annotated value lies between (inclusive) the specified minimum and maximum @Range(min=10000,max=50000,message=&quot;range.bean.wage&quot;) private BigDecimal wage; @Valid递归的对关联对象进行校验, 如果关联对象是个集合或者数组,那么对其中的元素进行递归校验,如果是一个map,则对其中的值部分进行校验.(是否进行递归验证) @CreditCardNumber信用卡验证 @Email 验证是否是邮件地址，如果为null,不进行验证，算通过验证 @ScriptAssert(lang= ,script=, alias=) @URL(protocol=,host=, port=,regexp=, flags=)</p>',10))])}const f=o(m,[["render",g],["__file","05-validation注解.html.vue"]]),v=JSON.parse('{"path":"/docs/java/05-validation%E6%B3%A8%E8%A7%A3.html","title":"validation注解","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"空检查","slug":"空检查","link":"#空检查","children":[]},{"level":2,"title":"Booelan检查","slug":"booelan检查","link":"#booelan检查","children":[]},{"level":2,"title":"长度检查","slug":"长度检查","link":"#长度检查","children":[]},{"level":2,"title":"日期检查","slug":"日期检查","link":"#日期检查","children":[]},{"level":2,"title":"数值检查","slug":"数值检查","link":"#数值检查","children":[]}],"git":{"updatedTime":1734338014000,"contributors":[{"name":"wangxiaoquan","email":"wxq","commits":1}]},"filePathRelative":"docs/java/05-validation注解.md"}');export{f as comp,v as data};
