import{_ as i,c,d as l,a as s,b as t,w as e,r as o,o as u,e as p}from"./app-CKtXyHQO.js";const d={},k={class:"table-of-contents"};function r(m,n){const a=o("router-link");return u(),c("div",null,[n[14]||(n[14]=l('<h1 id="条件注解" tabindex="-1"><a class="header-anchor" href="#条件注解"><span>条件注解</span></a></h1><table><thead><tr><th><strong>条件注解</strong></th><th><strong>解释</strong></th><th><strong>实例</strong></th></tr></thead><tbody><tr><td>@ConditionalOnBean</td><td>Spring容器中存在对应的实例生效</td><td>@ConditionalOnBean(DataSource.class)</td></tr><tr><td>@ConditionalOnMissingBean</td><td>Spring容器中不存在对应的实例生效</td><td>@ConditionalOnMissingBean(name = &quot;redisTemplate&quot;)</td></tr><tr><td>@ConditionalOnSingleCandidate</td><td>Spring容器中是否存在且只存在一个对应的实例，或者虽然有多个但 是指定首选的Bean生效</td><td>@ConditionalOnSingleCandidate(FilteringNotifier.class)</td></tr><tr><td>@ConditionalOnClass</td><td>类加载器中存在对应的类生效</td><td>@ConditionalOnClass(RedisOperations.class)</td></tr><tr><td>@ConditionalOnMissingClass</td><td>类加载器中不存在对应的类生效</td><td>@ConditionalOnMissingClass(RedisOperations.class)</td></tr><tr><td>@ConditionalOnExpression</td><td>判断SpEL 表达式成立生效</td><td>@ConditionalOnExpression(&quot;&#39;${server.host}&#39;==&#39;localhost&#39;&quot;)</td></tr><tr><td>@ConditionalOnJava</td><td>指定Java版本符合要求生效</td><td>@ConditionalOnJava(JavaVersion.EIGHT)</td></tr><tr><td>@ConditionalOnProperty</td><td>应用环境中的属性满足条件生效</td><td>@ConditionalOnProperty(prefix =&quot;spring.aop&quot;, name = &quot;auto&quot;, havingValue = &quot;true&quot;, matchIfMissing = true)</td></tr><tr><td>@ConditionalOnResource</td><td>存在指定的资源文件生效</td><td>@ConditionalOnResource(resources=&quot;mybatis.xml&quot;)</td></tr><tr><td>@ConditionalOnWebApplication</td><td>当前应用是Web应用生效</td><td>@ConditionalOnWebApplication</td></tr><tr><td>@ConditionalOnNotWebApplication</td><td>当前应用不是Web应用生效</td><td>@ConditionalOnNotWebApplication</td></tr></tbody></table><p><strong>条件注解分类</strong></p><ul><li>Bean作为条件：@ConditionalOnBean、@ConditionalOnMissingBean、@ConditionalOnSingleCandidate。</li><li>类作为条件：@ConditionalOnClass、@ConditionalOnMissingClass。</li><li>SpEL表达式作为条件：@ConditionalOnExpression。</li><li>JAVA版本作为条件: @ConditionalOnJava</li><li>配置属性作为条件：@ConditionalOnProperty。</li><li>资源文件作为条件：@ConditionalOnResource。</li><li>是否Web应用作为判断条件：@ConditionalOnWebApplication、@ConditionalOnNotWebApplication。</li></ul><p><strong>目录</strong></p>',5)),s("nav",k,[s("ul",null,[s("li",null,[t(a,{to:"#bean作为条件"},{default:e(()=>n[0]||(n[0]=[p("Bean作为条件")])),_:1}),s("ul",null,[s("li",null,[t(a,{to:"#conditionalonbean"},{default:e(()=>n[1]||(n[1]=[p("@ConditionalOnBean")])),_:1})]),s("li",null,[t(a,{to:"#conditionalonmissingbean"},{default:e(()=>n[2]||(n[2]=[p("@ConditionalOnMissingBean")])),_:1})]),s("li",null,[t(a,{to:"#conditionalonsinglecandidate"},{default:e(()=>n[3]||(n[3]=[p("@ConditionalOnSingleCandidate")])),_:1})])])]),s("li",null,[t(a,{to:"#类作为条件"},{default:e(()=>n[4]||(n[4]=[p("类作为条件")])),_:1}),s("ul",null,[s("li",null,[t(a,{to:"#conditionalonclass"},{default:e(()=>n[5]||(n[5]=[p("@ConditionalOnClass")])),_:1})]),s("li",null,[t(a,{to:"#conditionalonmissingclass"},{default:e(()=>n[6]||(n[6]=[p("@ConditionalOnMissingClass")])),_:1})])])]),s("li",null,[t(a,{to:"#spel表达式作为条件"},{default:e(()=>n[7]||(n[7]=[p("SpEL表达式作为条件")])),_:1})]),s("li",null,[t(a,{to:"#java版本作为判断条件"},{default:e(()=>n[8]||(n[8]=[p("JAVA版本作为判断条件")])),_:1})]),s("li",null,[t(a,{to:"#配置属性作为判断条件"},{default:e(()=>n[9]||(n[9]=[p("配置属性作为判断条件")])),_:1})]),s("li",null,[t(a,{to:"#资源文件是否存在作为判断条件"},{default:e(()=>n[10]||(n[10]=[p("资源文件是否存在作为判断条件")])),_:1})]),s("li",null,[t(a,{to:"#是否web应用作为判断条件"},{default:e(()=>n[11]||(n[11]=[p("是否Web应用作为判断条件")])),_:1}),s("ul",null,[s("li",null,[t(a,{to:"#conditionalonwebapplication"},{default:e(()=>n[12]||(n[12]=[p("@ConditionalOnWebApplication")])),_:1})]),s("li",null,[t(a,{to:"#conditionalonnotwebapplication"},{default:e(()=>n[13]||(n[13]=[p("@ConditionalOnNotWebApplication")])),_:1})])])])])]),n[15]||(n[15]=l(`<h2 id="bean作为条件" tabindex="-1"><a class="header-anchor" href="#bean作为条件"><span>Bean作为条件</span></a></h2><h3 id="conditionalonbean" tabindex="-1"><a class="header-anchor" href="#conditionalonbean"><span>@ConditionalOnBean</span></a></h3><p>@ConditionalOnBean对应的Condition处理类是OnBeanCondition。如果Spring容器里面存在指定的Bean则生效。</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">TYPE</span><span class="token punctuation">,</span> <span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">METHOD</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span><span class="token class-name">RetentionPolicy</span><span class="token punctuation">.</span><span class="token constant">RUNTIME</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token annotation punctuation">@Documented</span></span>
<span class="line"><span class="token annotation punctuation">@Conditional</span><span class="token punctuation">(</span><span class="token class-name">OnBeanCondition</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">ConditionalOnBean</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 需要作为条件的类的Class对象数组</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 需要作为条件的类的Name, Class.getName()</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">type</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * (用于指定注解修饰的Bean)条件所需的注解类</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Annotation</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">annotation</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * Spring容器中Bean的名字</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 搜索容器层级，当前容器，父容器</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token class-name">SearchStrategy</span> <span class="token function">search</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token class-name">SearchStrategy</span><span class="token punctuation">.</span><span class="token constant">ALL</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 可能在其泛型参数中包含指定Bean类型的其他类</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">parameterizedContainer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="conditionalonmissingbean" tabindex="-1"><a class="header-anchor" href="#conditionalonmissingbean"><span>@ConditionalOnMissingBean</span></a></h3><p>@ConditionalOnMissingBean对应的Condition实现类是OnBeanCondition。如果Spring容器里面不存在指定的Bean则生效。</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">TYPE</span><span class="token punctuation">,</span> <span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">METHOD</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span><span class="token class-name">RetentionPolicy</span><span class="token punctuation">.</span><span class="token constant">RUNTIME</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token annotation punctuation">@Documented</span></span>
<span class="line"><span class="token annotation punctuation">@Conditional</span><span class="token punctuation">(</span><span class="token class-name">OnBeanCondition</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">ConditionalOnMissingBean</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 需要作为条件的类的Class对象数组</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 需要作为条件的类的Name, Class.getName()</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">type</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 匹配Bean的时候需要忽视的Class对象数组，一般是父类</span>
<span class="line">     * @ConditionalOnMissingBean(value = JdbcFactory.class, ignored = MySqlDefaultFactory.class)</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">ignored</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 匹配Bean的时候需要忽视的类的Name, Class.getName()</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">ignoredType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * (用于指定注解修饰的Bean)条件所需的注解类</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Annotation</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">annotation</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * Spring容器中Bean的名字</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 搜索容器层级，当前容器，父容器</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token class-name">SearchStrategy</span> <span class="token function">search</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token class-name">SearchStrategy</span><span class="token punctuation">.</span><span class="token constant">ALL</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 可能在其泛型参数中包含指定Bean类型的其他类</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">parameterizedContainer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>比如当容器里面不存在redisTemplate对应的Bean的时候，创建一个RedisTemplate添加到容器里面去。</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@Bean</span></span>
<span class="line"><span class="token annotation punctuation">@ConditionalOnMissingBean</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;redisTemplate&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token class-name">RedisTemplate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> <span class="token function">redisTemplate</span><span class="token punctuation">(</span><span class="token class-name">RedisConnectionFactory</span> redisConnectionFactory<span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">throws</span> <span class="token class-name">UnknownHostException</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">RedisTemplate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> template <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RedisTemplate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    template<span class="token punctuation">.</span><span class="token function">setConnectionFactory</span><span class="token punctuation">(</span>redisConnectionFactory<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">return</span> template<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="conditionalonsinglecandidate" tabindex="-1"><a class="header-anchor" href="#conditionalonsinglecandidate"><span>@ConditionalOnSingleCandidate</span></a></h3><p>@ConditionalOnSingleCandidate对应的Condition处理类是OnBeanCondition。如果当指定Bean在容器中只有一个，或者虽然有多个但是指定首选Bean的时候则生效。</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">TYPE</span><span class="token punctuation">,</span> <span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">METHOD</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span><span class="token class-name">RetentionPolicy</span><span class="token punctuation">.</span><span class="token constant">RUNTIME</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token annotation punctuation">@Documented</span></span>
<span class="line">    <span class="token annotation punctuation">@Conditional</span><span class="token punctuation">(</span><span class="token class-name">OnBeanCondition</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">ConditionalOnSingleCandidate</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">        <span class="token doc-comment comment">/**</span>
<span class="line">* 需要作为条件的类的Class对象</span>
<span class="line">*/</span></span>
<span class="line">        <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token class-name">Object</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token doc-comment comment">/**</span>
<span class="line">* 需要作为条件的类的Name, Class.getName()</span>
<span class="line">*/</span></span>
<span class="line">        <span class="token class-name">String</span> <span class="token function">type</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token doc-comment comment">/**</span>
<span class="line">* 搜索容器层级，当前容器，父容器</span>
<span class="line">*/</span></span>
<span class="line">        <span class="token class-name">SearchStrategy</span> <span class="token function">search</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token class-name">SearchStrategy</span><span class="token punctuation">.</span><span class="token constant">ALL</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="类作为条件" tabindex="-1"><a class="header-anchor" href="#类作为条件"><span>类作为条件</span></a></h2><h3 id="conditionalonclass" tabindex="-1"><a class="header-anchor" href="#conditionalonclass"><span>@ConditionalOnClass</span></a></h3><p>@ConditionalOnClass对应的Condition处理类是OnClassCondition。如果当前类路径下面有指定的类的时候则生效。</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">TYPE</span><span class="token punctuation">,</span> <span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">METHOD</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span><span class="token class-name">RetentionPolicy</span><span class="token punctuation">.</span><span class="token constant">RUNTIME</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token annotation punctuation">@Documented</span></span>
<span class="line"><span class="token annotation punctuation">@Conditional</span><span class="token punctuation">(</span><span class="token class-name">OnClassCondition</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">ConditionalOnClass</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 需要作为条件的类的Class对象数组</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 需要作为条件的类的Name, Class.getName()</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="conditionalonmissingclass" tabindex="-1"><a class="header-anchor" href="#conditionalonmissingclass"><span>@ConditionalOnMissingClass</span></a></h3><p>@ConditionalOnMissingClass对应的Condition处理类是OnClassCondition。如果当前类路径下面没有指定的类的时候则生效。</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">TYPE</span><span class="token punctuation">,</span> <span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">METHOD</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span><span class="token class-name">RetentionPolicy</span><span class="token punctuation">.</span><span class="token constant">RUNTIME</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token annotation punctuation">@Documented</span></span>
<span class="line"><span class="token annotation punctuation">@Conditional</span><span class="token punctuation">(</span><span class="token class-name">OnClassCondition</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">ConditionalOnMissingClass</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 需要作为条件的类的Name, Class.getName()</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="spel表达式作为条件" tabindex="-1"><a class="header-anchor" href="#spel表达式作为条件"><span>SpEL表达式作为条件</span></a></h2><p>@ConditionalOnExpression对应的Condition处理类是OnExpressionCondition。只有当SpEL表达式满足条件的时候则生效。</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span><span class="token class-name">RetentionPolicy</span><span class="token punctuation">.</span><span class="token constant">RUNTIME</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">TYPE</span><span class="token punctuation">,</span> <span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">METHOD</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token annotation punctuation">@Documented</span></span>
<span class="line"><span class="token annotation punctuation">@Conditional</span><span class="token punctuation">(</span><span class="token class-name">OnExpressionCondition</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">ConditionalOnExpression</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 要作为条件的SpEL表达式</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token class-name">String</span> <span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">&quot;true&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>例如@ConditionalOnExpression(&quot;\${<a href="https://links.jianshu.com/go?to=test.enabled%3Atrue" target="_blank" rel="noopener noreferrer">test.enabled:true</a>}&quot;) ，只有当配置文件里面存在test.enabled: true的时候则生效。</p><h2 id="java版本作为判断条件" tabindex="-1"><a class="header-anchor" href="#java版本作为判断条件"><span>JAVA版本作为判断条件</span></a></h2><p>@ConditionalOnJava对应的Condition处理类是OnJavaCondition。只有当指定的JAVA版本条件满足的时候，才会创建对应的Bean。</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">TYPE</span><span class="token punctuation">,</span> <span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">METHOD</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span><span class="token class-name">RetentionPolicy</span><span class="token punctuation">.</span><span class="token constant">RUNTIME</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token annotation punctuation">@Documented</span></span>
<span class="line"><span class="token annotation punctuation">@Conditional</span><span class="token punctuation">(</span><span class="token class-name">OnJavaCondition</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">ConditionalOnJava</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 比较方式，Range.EQUAL_OR_NEWER:当前版本等于或高于、Range.OLDER_THAN:当前版本老于，越早的版本越老</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token class-name">Range</span> <span class="token function">range</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token class-name">Range</span><span class="token punctuation">.</span><span class="token constant">EQUAL_OR_NEWER</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 指定JAVA版本</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token class-name">JavaVersion</span> <span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * Range options.</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token keyword">enum</span> <span class="token class-name">Range</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">        <span class="token doc-comment comment">/**</span>
<span class="line">         * Equal to, or newer than the specified <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">JavaVersion</span></span><span class="token punctuation">}</span>.</span>
<span class="line">         */</span></span>
<span class="line">        <span class="token constant">EQUAL_OR_NEWER</span><span class="token punctuation">,</span></span>
<span class="line"></span>
<span class="line">        <span class="token doc-comment comment">/**</span>
<span class="line">         * Older than the specified <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">JavaVersion</span></span><span class="token punctuation">}</span>.</span>
<span class="line">         */</span></span>
<span class="line">        <span class="token constant">OLDER_THAN</span></span>
<span class="line"></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="配置属性作为判断条件" tabindex="-1"><a class="header-anchor" href="#配置属性作为判断条件"><span>配置属性作为判断条件</span></a></h2><p>@ConditionalOnProperty对应的Condition实现类OnPropertyCondition。只有当对应的配置属性和给定条件的值相等的时候则生效。</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span><span class="token class-name">RetentionPolicy</span><span class="token punctuation">.</span><span class="token constant">RUNTIME</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">TYPE</span><span class="token punctuation">,</span> <span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">METHOD</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token annotation punctuation">@Documented</span></span>
<span class="line"><span class="token annotation punctuation">@Conditional</span><span class="token punctuation">(</span><span class="token class-name">OnPropertyCondition</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">ConditionalOnProperty</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 对应property名称的值</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * property名称的前缀，可有可无</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token class-name">String</span> <span class="token function">prefix</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 与name组合使用，比较获取到的属性值与havingValue给定的值是否相同，相同才加载配置</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token class-name">String</span> <span class="token function">havingValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 缺少该property时是否可以加载。如果为true，没有该property也会正常加载；反之报错</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token keyword">boolean</span> <span class="token function">matchIfMissing</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="资源文件是否存在作为判断条件" tabindex="-1"><a class="header-anchor" href="#资源文件是否存在作为判断条件"><span>资源文件是否存在作为判断条件</span></a></h2><p>@ConditionalOnResource对应的Condition处理类OnResourceCondition。只有当指定的资源文件出现在classpath中则生效。</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">TYPE</span><span class="token punctuation">,</span> <span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">METHOD</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span><span class="token class-name">RetentionPolicy</span><span class="token punctuation">.</span><span class="token constant">RUNTIME</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token annotation punctuation">@Documented</span></span>
<span class="line"><span class="token annotation punctuation">@Conditional</span><span class="token punctuation">(</span><span class="token class-name">OnResourceCondition</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">ConditionalOnResource</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 要作为判断条件的资源文件名称  @ConditionalOnResource(resources=”mybatis.xml”)</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">resources</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="是否web应用作为判断条件" tabindex="-1"><a class="header-anchor" href="#是否web应用作为判断条件"><span>是否Web应用作为判断条件</span></a></h2><h3 id="conditionalonwebapplication" tabindex="-1"><a class="header-anchor" href="#conditionalonwebapplication"><span>@ConditionalOnWebApplication</span></a></h3><p>@ConditionalOnWebApplication对应的Condition处理类是OnWebApplicationCondition。只有当当前项目是Web项目的时候则生效。</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">TYPE</span><span class="token punctuation">,</span> <span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">METHOD</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span><span class="token class-name">RetentionPolicy</span><span class="token punctuation">.</span><span class="token constant">RUNTIME</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token annotation punctuation">@Documented</span></span>
<span class="line"><span class="token annotation punctuation">@Conditional</span><span class="token punctuation">(</span><span class="token class-name">OnWebApplicationCondition</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">ConditionalOnWebApplication</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 需要作为条件的Web应用程序的必需类型</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token class-name">Type</span> <span class="token function">type</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token class-name">Type</span><span class="token punctuation">.</span><span class="token constant">ANY</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * Available application types.</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token keyword">enum</span> <span class="token class-name">Type</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">        <span class="token doc-comment comment">/**</span>
<span class="line">         * 任何web应用都将匹配</span>
<span class="line">         */</span></span>
<span class="line">        <span class="token constant">ANY</span><span class="token punctuation">,</span></span>
<span class="line"></span>
<span class="line">        <span class="token doc-comment comment">/**</span>
<span class="line">         * 仅基于servlet的Web应用程序将匹配</span>
<span class="line">         */</span></span>
<span class="line">        <span class="token constant">SERVLET</span><span class="token punctuation">,</span></span>
<span class="line"></span>
<span class="line">        <span class="token doc-comment comment">/**</span>
<span class="line">         * 仅基于反应式的Web应用程序将匹配</span>
<span class="line">         */</span></span>
<span class="line">        <span class="token constant">REACTIVE</span></span>
<span class="line"></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="conditionalonnotwebapplication" tabindex="-1"><a class="header-anchor" href="#conditionalonnotwebapplication"><span>@ConditionalOnNotWebApplication</span></a></h3><p>@ConditionalOnNotWebApplication对应的Condition处理类是OnWebApplicationCondition。只有当当前项目不是Web项目的时候则生效。</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">TYPE</span><span class="token punctuation">,</span> <span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">METHOD</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span><span class="token class-name">RetentionPolicy</span><span class="token punctuation">.</span><span class="token constant">RUNTIME</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token annotation punctuation">@Documented</span></span>
<span class="line"><span class="token annotation punctuation">@Conditional</span><span class="token punctuation">(</span><span class="token class-name">OnWebApplicationCondition</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">ConditionalOnNotWebApplication</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">}</span>	</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,39))])}const b=i(d,[["render",r],["__file","12-条件注解.html.vue"]]),g=JSON.parse('{"path":"/docs/java/12-%E6%9D%A1%E4%BB%B6%E6%B3%A8%E8%A7%A3.html","title":"条件注解","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"Bean作为条件","slug":"bean作为条件","link":"#bean作为条件","children":[{"level":3,"title":"@ConditionalOnBean","slug":"conditionalonbean","link":"#conditionalonbean","children":[]},{"level":3,"title":"@ConditionalOnMissingBean","slug":"conditionalonmissingbean","link":"#conditionalonmissingbean","children":[]},{"level":3,"title":"@ConditionalOnSingleCandidate","slug":"conditionalonsinglecandidate","link":"#conditionalonsinglecandidate","children":[]}]},{"level":2,"title":"类作为条件","slug":"类作为条件","link":"#类作为条件","children":[{"level":3,"title":"@ConditionalOnClass","slug":"conditionalonclass","link":"#conditionalonclass","children":[]},{"level":3,"title":"@ConditionalOnMissingClass","slug":"conditionalonmissingclass","link":"#conditionalonmissingclass","children":[]}]},{"level":2,"title":"SpEL表达式作为条件","slug":"spel表达式作为条件","link":"#spel表达式作为条件","children":[]},{"level":2,"title":"JAVA版本作为判断条件","slug":"java版本作为判断条件","link":"#java版本作为判断条件","children":[]},{"level":2,"title":"配置属性作为判断条件","slug":"配置属性作为判断条件","link":"#配置属性作为判断条件","children":[]},{"level":2,"title":"资源文件是否存在作为判断条件","slug":"资源文件是否存在作为判断条件","link":"#资源文件是否存在作为判断条件","children":[]},{"level":2,"title":"是否Web应用作为判断条件","slug":"是否web应用作为判断条件","link":"#是否web应用作为判断条件","children":[{"level":3,"title":"@ConditionalOnWebApplication","slug":"conditionalonwebapplication","link":"#conditionalonwebapplication","children":[]},{"level":3,"title":"@ConditionalOnNotWebApplication","slug":"conditionalonnotwebapplication","link":"#conditionalonnotwebapplication","children":[]}]}],"git":{"updatedTime":1734338014000,"contributors":[{"name":"wangxiaoquan","email":"wxq","commits":1}]},"filePathRelative":"docs/java/12-条件注解.md"}');export{b as comp,g as data};
