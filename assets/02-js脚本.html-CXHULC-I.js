import{_ as l,c as i,a as s,b as t,w as p,d as c,r as u,o as r,e}from"./app-CKtXyHQO.js";const d="/mars/images/kettle/kettle_js_function.png",o="/mars/images/kettle/kettle_js_alert_result.png",k="/mars/images/kettle/kettle_script_js_log.png",v="/mars/images/kettle/kettle_script_js_ktrlog.png",m="/mars/images/kettle/kettle_script_js_ktrlog_run.png",g="/mars/images/kettle/kettle_script_js_ktrlog_run_result.png",b="/mars/images/kettle/kettle_job_variable.png",f="/mars/images/kettle/kettle_job_variable_result.png",h="/mars/images/kettle/kettle_ktr_variable_kjb.png",y="/mars/images/kettle/kettle_ktr_variable_ktr.png",w="/mars/images/kettle/kettle_ktr_variable_result.png",q="/mars/images/kettle/kettle_js_currentdate.png",j="/mars/images/kettle/kettle_js_currentdate_result.png",x="/mars/images/kettle/kettle_js_offsetdate.png",L="/mars/images/kettle/kettle_js_offsetdate_result.png",T="/mars/images/kettle/kettle_js_alert.png",_="/mars/images/kettle/kettle_js_json.png",S="/mars/images/kettle/kettle_js_json_sql.png",F="/mars/images/kettle/kettle_js_json_input.png",N="/mars/images/kettle/kettle_js_json_out.png",E="/mars/images/kettle/kettle_js_json_out_col.png",M="/mars/images/kettle/kettle_js_json_obtain.png",D="/mars/images/kettle/kettle_js_json_script.png",A="/mars/images/kettle/kettle_date_format.png",C="/mars/images/kettle/kettle_js_db.png",H={},V={class:"table-of-contents"};function O(U,n){const a=u("router-link");return r(),i("div",null,[n[68]||(n[68]=s("h1",{id:"kettle-js-脚本",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#kettle-js-脚本"},[s("span",null,"Kettle js 脚本")])],-1)),n[69]||(n[69]=s("p",null,[s("strong",null,"目录")],-1)),s("nav",V,[s("ul",null,[s("li",null,[t(a,{to:"#javascript-内置脚本"},{default:p(()=>n[0]||(n[0]=[e("JavaScript 内置脚本")])),_:1})]),s("li",null,[t(a,{to:"#字符串类型的函数"},{default:p(()=>n[1]||(n[1]=[e("字符串类型的函数")])),_:1}),s("ul",null,[s("li",null,[t(a,{to:"#日期转字符串-date2str"},{default:p(()=>n[2]||(n[2]=[e("日期转字符串(date2str)")])),_:1})]),s("li",null,[t(a,{to:"#构造定长字符串-fillstring-char-length"},{default:p(()=>n[3]||(n[3]=[e("构造定长字符串(fillString(char,length))")])),_:1})]),s("li",null,[t(a,{to:"#统计字符串出现频次-getocurancestring-str-searchstr"},{default:p(()=>n[4]||(n[4]=[e("统计字符串出现频次(getOcuranceString(str,searchStr))")])),_:1})]),s("li",null,[t(a,{to:"#获取字符串下标索引-indexof"},{default:p(()=>n[5]||(n[5]=[e("获取字符串下标索引(indexOf)")])),_:1})]),s("li",null,[t(a,{to:"#首字母大写-initcap"},{default:p(()=>n[6]||(n[6]=[e("首字母大写(initCap)")])),_:1})]),s("li",null,[t(a,{to:"#字符串转小写-lower"},{default:p(()=>n[7]||(n[7]=[e("字符串转小写(lower)")])),_:1})]),s("li",null,[t(a,{to:"#字符串填充左侧-lpad-string-char-length"},{default:p(()=>n[8]||(n[8]=[e("字符串填充左侧(lpad(string,char,length))")])),_:1})]),s("li",null,[t(a,{to:"#字符串右侧填充-rpad-string-char-length"},{default:p(()=>n[9]||(n[9]=[e("字符串右侧填充(rpad(string,char,length))")])),_:1})]),s("li",null,[t(a,{to:"#去空左字符-ltrim"},{default:p(()=>n[10]||(n[10]=[e("去空左字符(ltrim)")])),_:1})]),s("li",null,[t(a,{to:"#去除右字符-rtrim"},{default:p(()=>n[11]||(n[11]=[e("去除右字符(rtrim)")])),_:1})]),s("li",null,[t(a,{to:"#去除左右空格-trim"},{default:p(()=>n[12]||(n[12]=[e("去除左右空格(trim)")])),_:1})]),s("li",null,[t(a,{to:"#数字转字符串-num2str"},{default:p(()=>n[13]||(n[13]=[e("数字转字符串(num2str)")])),_:1})]),s("li",null,[t(a,{to:"#xml保护标签函数转换-protectxmlcdata"},{default:p(()=>n[14]||(n[14]=[e("XML保护标签函数转换(protectXMLCDATA)")])),_:1})]),s("li",null,[t(a,{to:"#替换字符串-replace"},{default:p(()=>n[15]||(n[15]=[e("替换字符串(replace)")])),_:1})]),s("li",null,[t(a,{to:"#正则切分-str2regexp"},{default:p(()=>n[16]||(n[16]=[e("正则切分(str2RegExp)")])),_:1})]),s("li",null,[t(a,{to:"#字符串截取-substr"},{default:p(()=>n[17]||(n[17]=[e("字符串截取(substr)")])),_:1})]),s("li",null,[t(a,{to:"#字符串转大写-upper"},{default:p(()=>n[18]||(n[18]=[e("字符串转大写(upper)")])),_:1})])])]),s("li",null,[t(a,{to:"#浮点型的函数"},{default:p(()=>n[19]||(n[19]=[e("浮点型的函数")])),_:1}),s("ul",null,[s("li",null,[t(a,{to:"#计算绝对值-abs-num"},{default:p(()=>n[20]||(n[20]=[e("计算绝对值(abs(num))")])),_:1})]),s("li",null,[t(a,{to:"#字符串转数值-str2num-var"},{default:p(()=>n[21]||(n[21]=[e("字符串转数值(str2num(var))")])),_:1})])])]),s("li",null,[t(a,{to:"#日期类型函数"},{default:p(()=>n[22]||(n[22]=[e("日期类型函数")])),_:1}),s("ul",null,[s("li",null,[t(a,{to:"#日期相加-dateadd-date-format-plusnum"},{default:p(()=>n[23]||(n[23]=[e("日期相加(dateAdd(date,format,plusNum))")])),_:1})]),s("li",null,[t(a,{to:"#日期比较-datediff-startdate-enddate-type"},{default:p(()=>n[24]||(n[24]=[e("日期比较(dateDiff(startDate,endDate,type))")])),_:1})]),s("li",null,[t(a,{to:"#获取指定日期数值-getdaynumber-date-type"},{default:p(()=>n[25]||(n[25]=[e("获取指定日期数值(getDayNumber(date,type))")])),_:1})]),s("li",null,[t(a,{to:"#获取当前月份数值-month-date"},{default:p(()=>n[26]||(n[26]=[e("获取当前月份数值(month(date))")])),_:1})]),s("li",null,[t(a,{to:"#获取年份-year-date"},{default:p(()=>n[27]||(n[27]=[e("获取年份(year(date))")])),_:1})]),s("li",null,[t(a,{to:"#获取当年的周数-week-date"},{default:p(()=>n[28]||(n[28]=[e("获取当年的周数(week(date))")])),_:1})]),s("li",null,[t(a,{to:"#字符串转日期-str2date"},{default:p(()=>n[29]||(n[29]=[e("字符串转日期(str2date)")])),_:1})]),s("li",null,[t(a,{to:"#截取日期-truncdate-date-type"},{default:p(()=>n[30]||(n[30]=[e("截取日期(truncDate(date,type))")])),_:1})])])]),s("li",null,[t(a,{to:"#逻辑判断型函数"},{default:p(()=>n[31]||(n[31]=[e("逻辑判断型函数")])),_:1}),s("ul",null,[s("li",null,[t(a,{to:"#是否为空-isempty-str"},{default:p(()=>n[32]||(n[32]=[e("是否为空(isEmpty(str))")])),_:1})]),s("li",null,[t(a,{to:"#是否日期-isdate-str"},{default:p(()=>n[33]||(n[33]=[e("是否日期(isDate(str))")])),_:1})]),s("li",null,[t(a,{to:"#判断是否是数值-isnum-str"},{default:p(()=>n[34]||(n[34]=[e("判断是否是数值(isNum(str))")])),_:1})]),s("li",null,[t(a,{to:"#是否正则匹配-isregexp"},{default:p(()=>n[35]||(n[35]=[e("是否正则匹配(isRegExp)")])),_:1})])])]),s("li",null,[t(a,{to:"#特殊的函数"},{default:p(()=>n[36]||(n[36]=[e("特殊的函数")])),_:1}),s("ul",null,[s("li",null,[t(a,{to:"#弹框信息-alert-msg"},{default:p(()=>n[37]||(n[37]=[e("弹框信息(Alert(msg))")])),_:1})]),s("li",null,[t(a,{to:"#decode-函数"},{default:p(()=>n[38]||(n[38]=[e("decode 函数")])),_:1})]),s("li",null,[t(a,{to:"#执行sql语句-firetodb"},{default:p(()=>n[39]||(n[39]=[e("执行SQL语句(fireToDB)")])),_:1})]),s("li",null,[t(a,{to:"#仅仅获取数值-getdigitsonly"},{default:p(()=>n[40]||(n[40]=[e("仅仅获取数值(getDigitsOnly)")])),_:1})]),s("li",null,[t(a,{to:"#获取kettle环境变量的值-getenvironmentvar"},{default:p(()=>n[41]||(n[41]=[e("获取Kettle环境变量的值(getEnvironmentVar)")])),_:1})]),s("li",null,[t(a,{to:"#获取kettle环境中的变量值-getvariable"},{default:p(()=>n[42]||(n[42]=[e("获取Kettle环境中的变量值(getVariable)")])),_:1})]),s("li",null,[t(a,{to:"#设置变量-setvariable-key-value-level"},{default:p(()=>n[43]||(n[43]=[e("设置变量(setVariable(key,value,level))")])),_:1})]),s("li",null,[t(a,{to:"#写入日志-writetolog"},{default:p(()=>n[44]||(n[44]=[e("写入日志(writeToLog)")])),_:1})])])]),s("li",null,[t(a,{to:"#文件处理类函数"},{default:p(()=>n[45]||(n[45]=[e("文件处理类函数")])),_:1}),s("ul",null,[s("li",null,[t(a,{to:"#复制文件-copyfile-sourcefile-targetfile-overwrite"},{default:p(()=>n[46]||(n[46]=[e("复制文件(copyFile(sourceFile,targetFile,overwrite))")])),_:1})]),s("li",null,[t(a,{to:"#创建文件夹-createfolder-path"},{default:p(()=>n[47]||(n[47]=[e("创建文件夹(createFolder(path))")])),_:1})]),s("li",null,[t(a,{to:"#删除文件-deletefile"},{default:p(()=>n[48]||(n[48]=[e("删除文件(deleteFile)")])),_:1})]),s("li",null,[t(a,{to:"#判断文件是否存在-fileexists"},{default:p(()=>n[49]||(n[49]=[e("判断文件是否存在(fileExists())")])),_:1})]),s("li",null,[t(a,{to:"#获取文件扩展名-getfileextension"},{default:p(()=>n[50]||(n[50]=[e("获取文件扩展名(getFileExtension)")])),_:1})]),s("li",null,[t(a,{to:"#获取文件大小-getfilesize"},{default:p(()=>n[51]||(n[51]=[e("获取文件大小(getFileSize)")])),_:1})]),s("li",null,[t(a,{to:"#获取文件的父文件夹名称-getparentfoldername"},{default:p(()=>n[52]||(n[52]=[e("获取文件的父文件夹名称(getParentFoldername)")])),_:1})]),s("li",null,[t(a,{to:"#获取文件简称-getshortname"},{default:p(()=>n[53]||(n[53]=[e("获取文件简称(getShortName)")])),_:1})]),s("li",null,[t(a,{to:"#判断是否是一个文件-isfile"},{default:p(()=>n[54]||(n[54]=[e("判断是否是一个文件(isFile)")])),_:1})]),s("li",null,[t(a,{to:"#判断是否是一个文件夹-isfolder"},{default:p(()=>n[55]||(n[55]=[e("判断是否是一个文件夹(isFolder)")])),_:1})]),s("li",null,[t(a,{to:"#加载一个文件的内容-loadfilecontent"},{default:p(()=>n[56]||(n[56]=[e("加载一个文件的内容(loadFileContent)")])),_:1})]),s("li",null,[t(a,{to:"#移动文件-movefile-source-target-overwrite"},{default:p(()=>n[57]||(n[57]=[e("移动文件(moveFile(source,target,overWrite))")])),_:1})]),s("li",null,[t(a,{to:"#创建一个空文件-touch"},{default:p(()=>n[58]||(n[58]=[e("创建一个空文件(touch)")])),_:1})])])]),s("li",null,[t(a,{to:"#javascript-脚本案例"},{default:p(()=>n[59]||(n[59]=[e("JavaScript 脚本案例")])),_:1}),s("ul",null,[s("li",null,[t(a,{to:"#js-输出日志"},{default:p(()=>n[60]||(n[60]=[e("js 输出日志")])),_:1})]),s("li",null,[t(a,{to:"#js-变量"},{default:p(()=>n[61]||(n[61]=[e("js 变量")])),_:1})]),s("li",null,[t(a,{to:"#js-获取当前时间并转为字符串"},{default:p(()=>n[62]||(n[62]=[e("js 获取当前时间并转为字符串")])),_:1})]),s("li",null,[t(a,{to:"#js-时间偏移"},{default:p(()=>n[63]||(n[63]=[e("js 时间偏移")])),_:1})]),s("li",null,[t(a,{to:"#js-脚本弹出"},{default:p(()=>n[64]||(n[64]=[e("js 脚本弹出")])),_:1})]),s("li",null,[t(a,{to:"#js-处理-json"},{default:p(()=>n[65]||(n[65]=[e("js 处理 json")])),_:1})]),s("li",null,[t(a,{to:"#js-时间格式转换通用方法"},{default:p(()=>n[66]||(n[66]=[e("js 时间格式转换通用方法")])),_:1})]),s("li",null,[t(a,{to:"#js-执行sql"},{default:p(()=>n[67]||(n[67]=[e("js 执行sql")])),_:1})])])])])]),n[70]||(n[70]=c('<h2 id="javascript-内置脚本" tabindex="-1"><a class="header-anchor" href="#javascript-内置脚本"><span>JavaScript 内置脚本</span></a></h2><p>js 脚本组件包含的函数主要包括六大类：</p><ul><li><a href="#%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%87%BD%E6%95%B0">字符串类型的函数 (String Functions)</a></li><li><a href="#%E6%B5%AE%E7%82%B9%E5%9E%8B%E7%9A%84%E5%87%BD%E6%95%B0">浮点型的函数 (Numeric Functions)</a></li><li><a href="#%E6%97%A5%E6%9C%9F%E7%B1%BB%E5%9E%8B%E5%87%BD%E6%95%B0">日期类型函数 (Date Functions)</a></li><li><a href="#%E9%80%BB%E8%BE%91%E5%88%A4%E6%96%AD%E5%9E%8B%E5%87%BD%E6%95%B0">逻辑判断型函数 (Logic Functions)</a></li><li><a href="#%E7%89%B9%E6%AE%8A%E7%9A%84%E5%87%BD%E6%95%B0">特殊的函数 (Special Functions)</a></li><li><a href="#%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86%E7%B1%BB%E5%87%BD%E6%95%B0">文件处理类函数 (File Functions)</a></li></ul><p><img src="'+d+`" alt="js脚本内置函数"></p><h2 id="字符串类型的函数" tabindex="-1"><a class="header-anchor" href="#字符串类型的函数"><span>字符串类型的函数</span></a></h2><h3 id="日期转字符串-date2str" tabindex="-1"><a class="header-anchor" href="#日期转字符串-date2str"><span>日期转字符串(<code>date2str</code>)</span></a></h3><p>日期转字符串函数date2str主要有4个方法：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">// 传入日期实例,转换成字符串类型</span></span>
<span class="line"><span class="token function">date2str</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">// 传入日期和格式化参数,进行格式化转换</span></span>
<span class="line"><span class="token function">date2str</span><span class="token punctuation">(</span>date<span class="token punctuation">,</span> format<span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">// 传入日期和参数格式化及ISO代码进行转换,(DE = German, EN = English, FR = France, …)</span></span>
<span class="line"><span class="token function">date2str</span><span class="token punctuation">(</span>date<span class="token punctuation">,</span> format<span class="token punctuation">,</span> iso<span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">// 传入时区进行格式化,例如北京时区(GMT+8)</span></span>
<span class="line"><span class="token function">date2str</span><span class="token punctuation">(</span>date<span class="token punctuation">,</span> format<span class="token punctuation">,</span> iso<span class="token punctuation">,</span> zone<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>常用<code>date2str(date,format)</code>将时间格式化为字符串，如</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">var</span> currentDate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token function">date2str</span><span class="token punctuation">(</span>currentDate<span class="token punctuation">,</span> <span class="token string">&quot;yyyy-MM-dd&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token function">date2str</span><span class="token punctuation">(</span>currentDate<span class="token punctuation">,</span> <span class="token string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>控制台输出结果</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">2024/08/27 13:46:11 - JavaScript代码.0 - 2024-08-27</span>
<span class="line">2024/08/27 13:46:11 - JavaScript代码.0 - 2024-08-27 13:46:11</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="构造定长字符串-fillstring-char-length" tabindex="-1"><a class="header-anchor" href="#构造定长字符串-fillstring-char-length"><span>构造定长字符串(<code>fillString(char,length)</code>)</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token function">fillString</span><span class="token punctuation">(</span><span class="token string">&quot;T&quot;</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token function">fillString</span><span class="token punctuation">(</span><span class="token string">&quot;D&quot;</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>控制台输出结果</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">2024/08/27 13:46:11 - JavaScript代码.0 - TTTTTTTTTT</span>
<span class="line">2024/08/27 13:46:11 - JavaScript代码.0 - DDD</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>注意：</strong> 第一个入参是一个<code>char</code>类型的单字符,不能是字符串</p><h3 id="统计字符串出现频次-getocurancestring-str-searchstr" tabindex="-1"><a class="header-anchor" href="#统计字符串出现频次-getocurancestring-str-searchstr"><span>统计字符串出现频次(<code>getOcuranceString(str,searchStr)</code>)</span></a></h3><p>第一个参数是要搜索的完整字符串,第二个参数是要搜索统计的字符串</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">var</span> sef <span class="token operator">=</span> <span class="token string">&#39;2024-01-11&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token function">getOcuranceString</span><span class="token punctuation">(</span>sef<span class="token punctuation">,</span> <span class="token string">&#39;0&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token function">getOcuranceString</span><span class="token punctuation">(</span>sef<span class="token punctuation">,</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token function">getOcuranceString</span><span class="token punctuation">(</span>sef<span class="token punctuation">,</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token function">getOcuranceString</span><span class="token punctuation">(</span>sef<span class="token punctuation">,</span> <span class="token string">&#39;4&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token function">getOcuranceString</span><span class="token punctuation">(</span>sef<span class="token punctuation">,</span> <span class="token string">&#39;-&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token function">getOcuranceString</span><span class="token punctuation">(</span>sef<span class="token punctuation">,</span> <span class="token string">&#39;11&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>控制台输出结果</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">2024/08/27 13:55:21 - JavaScript代码.0 - 2</span>
<span class="line">2024/08/27 13:55:21 - JavaScript代码.0 - 3</span>
<span class="line">2024/08/27 13:55:21 - JavaScript代码.0 - 2</span>
<span class="line">2024/08/27 13:55:21 - JavaScript代码.0 - 1</span>
<span class="line">2024/08/27 13:55:21 - JavaScript代码.0 - 2</span>
<span class="line">2024/08/27 13:55:21 - JavaScript代码.0 - 1</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="获取字符串下标索引-indexof" tabindex="-1"><a class="header-anchor" href="#获取字符串下标索引-indexof"><span>获取字符串下标索引(<code>indexOf</code>)</span></a></h3><p>获取下标索引主要有2个重构函数,分别是：</p><ul><li>获取出现字符串的索引开始位置：<code>indexOf(string,subString)</code></li><li>指定开始位置,获取字符串索引开始位置：<code>indexOf(string,subString,fromIndex)</code></li></ul><p>示例</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">var</span> str1 <span class="token operator">=</span> <span class="token string">&quot;Hello Pentaho!&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> str2 <span class="token operator">=</span> <span class="token function">indexOf</span><span class="token punctuation">(</span>str1<span class="token punctuation">,</span> <span class="token string">&quot;Pentaho&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> str3 <span class="token operator">=</span> <span class="token function">indexOf</span><span class="token punctuation">(</span>str1<span class="token punctuation">,</span> <span class="token string">&quot;o&quot;</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token string">&quot;Input : &quot;</span> <span class="token operator">+</span> str1<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token string">&quot;Index of &#39;Pentaho&#39; : &quot;</span> <span class="token operator">+</span> str2<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token string">&quot;index of &#39;o&#39;, search from position 7 : &quot;</span> <span class="token operator">+</span> str3<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>控制台输出结果</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">2024/08/27 13:57:15 - JavaScript代码.0 - Input : Hello Pentaho!</span>
<span class="line">2024/08/27 13:57:15 - JavaScript代码.0 - Index of &#39;Pentaho&#39; : 6</span>
<span class="line">2024/08/27 13:57:15 - JavaScript代码.0 - index of &#39;o&#39;, search from position 7 : 12</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="首字母大写-initcap" tabindex="-1"><a class="header-anchor" href="#首字母大写-initcap"><span>首字母大写(<code>initCap</code>)</span></a></h3><p>将字符串的首字母转换为大写字母，如</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">var</span> str1 <span class="token operator">=</span> <span class="token string">&quot;my home&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token function">initCap</span><span class="token punctuation">(</span>str1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token function">initCap</span><span class="token punctuation">(</span><span class="token string">&#39;test a aaa cw&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token function">initCap</span><span class="token punctuation">(</span><span class="token string">&#39;myhome&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>控制台输出结果</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">2024/08/27 14:00:42 - JavaScript代码.0 - My Home</span>
<span class="line">2024/08/27 14:00:42 - JavaScript代码.0 - Test A Aaa Cw</span>
<span class="line">2024/08/27 14:00:42 - JavaScript代码.0 - Myhome</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="字符串转小写-lower" tabindex="-1"><a class="header-anchor" href="#字符串转小写-lower"><span>字符串转小写(<code>lower</code>)</span></a></h3><p>将字符串的首字母转换为大写字母，如</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">var</span> str1 <span class="token operator">=</span> <span class="token string">&quot;Hello World!&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> str2 <span class="token operator">=</span> <span class="token function">lower</span><span class="token punctuation">(</span>str1<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token string">&quot;Input:&quot;</span> <span class="token operator">+</span> str1<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token string">&quot;Converted to LowerCase:&quot;</span> <span class="token operator">+</span> str2<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token function">lower</span><span class="token punctuation">(</span><span class="token string">&#39;DDDHelloSWxss&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>控制台输出结果</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">2024/08/27 14:02:38 - JavaScript代码.0 - Input:Hello World!</span>
<span class="line">2024/08/27 14:02:38 - JavaScript代码.0 - Converted to LowerCase:hello world!</span>
<span class="line">2024/08/27 14:02:38 - JavaScript代码.0 - dddhelloswxss</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="字符串填充左侧-lpad-string-char-length" tabindex="-1"><a class="header-anchor" href="#字符串填充左侧-lpad-string-char-length"><span>字符串填充左侧(<code>lpad(string,char,length)</code>)</span></a></h3><p>用指定长度的给定字符将字符串填充到左侧，第一个参数为传入字符串，第二个参数为填充<strong>单字符</strong>，第三个参数为填充单字符长度，如</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">var</span> lpadStr <span class="token operator">=</span> <span class="token string">&quot;Hello World!&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token string">&quot;Lpad:&quot;</span> <span class="token operator">+</span> <span class="token function">lpad</span><span class="token punctuation">(</span>lpadStr<span class="token punctuation">,</span> <span class="token string">&quot;x&quot;</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>控制台输出结果</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">2024/08/27 14:15:34 - JavaScript代码.0 - Lpad:xxxxxxxxHello World!</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>注意：</strong> 如果length长度小于给定字符串的长度,则默认返回原字符串,不做填充</p><h3 id="字符串右侧填充-rpad-string-char-length" tabindex="-1"><a class="header-anchor" href="#字符串右侧填充-rpad-string-char-length"><span>字符串右侧填充(rpad(string,char,length))</span></a></h3><p>使用方法同<code>lpad</code>，只是一个是左侧，一个是右侧</p><h3 id="去空左字符-ltrim" tabindex="-1"><a class="header-anchor" href="#去空左字符-ltrim"><span>去空左字符(<code>ltrim</code>)</span></a></h3><p>从左侧开始去除空字符串，如</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">var</span> trimStr <span class="token operator">=</span> <span class="token string">&quot; a b c d&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token string">&quot;Input: &quot;</span> <span class="token operator">+</span> trimStr<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token string">&quot;Input ltrim:&quot;</span> <span class="token operator">+</span> <span class="token function">ltrim</span><span class="token punctuation">(</span>trimStr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>控制台输出结果</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">2024/08/27 14:19:20 - JavaScript代码.0 - Input:  a b c d</span>
<span class="line">2024/08/27 14:19:20 - JavaScript代码.0 - Input trim:a b c d</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="去除右字符-rtrim" tabindex="-1"><a class="header-anchor" href="#去除右字符-rtrim"><span>去除右字符(<code>rtrim</code>)</span></a></h3><p>用法同<code>ltrim</code>，只不过一个是去除左侧空格，一个是去除右侧空格</p><h3 id="去除左右空格-trim" tabindex="-1"><a class="header-anchor" href="#去除左右空格-trim"><span>去除左右空格(trim)</span></a></h3><p>用法同<code>ltrim</code>和<code>rtrim</code>,相当于<code>ltrim</code>+<code>rtrim</code></p><h3 id="数字转字符串-num2str" tabindex="-1"><a class="header-anchor" href="#数字转字符串-num2str"><span>数字转字符串(num2str)</span></a></h3><p>将数字转为字符串,主要有3个构造函数</p><ul><li>转换num数字为字符串：<code>num2str(num)</code></li><li>格式化数字为指定字符串：<code>num2str(num,format)</code></li><li>按照本地ISO编码进行格式化：<code>num2str(num,format,iso)</code></li></ul><p>示例</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">var</span> num1 <span class="token operator">=</span> <span class="token number">123.40</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> num2 <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">123.40</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token function">num2str</span><span class="token punctuation">(</span>num1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token function">num2str</span><span class="token punctuation">(</span>num1<span class="token punctuation">,</span> <span class="token string">&quot;0.00&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token function">num2str</span><span class="token punctuation">(</span>num1<span class="token punctuation">,</span> <span class="token string">&quot;0.00&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;EN&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token function">num2str</span><span class="token punctuation">(</span>num2<span class="token punctuation">,</span> <span class="token string">&quot;0.00;(0.00)&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;EN&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>控制台输出结果</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">2024/08/27 14:28:07 - JavaScript代码.0 - 123.4</span>
<span class="line">2024/08/27 14:28:07 - JavaScript代码.0 - 123.40</span>
<span class="line">2024/08/27 14:28:07 - JavaScript代码.0 - 123.40</span>
<span class="line">2024/08/27 14:28:07 - JavaScript代码.0 - (123.40)</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="xml保护标签函数转换-protectxmlcdata" tabindex="-1"><a class="header-anchor" href="#xml保护标签函数转换-protectxmlcdata"><span>XML保护标签函数转换(<code>protectXMLCDATA</code>)</span></a></h3><p>给指定xml添加保护标签，如</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">var</span> xmlstr <span class="token operator">=</span> <span class="token string">&#39;&lt;message&gt;&lt;warning&gt;Hello World &lt;/warning&gt;&lt;/message&gt;&#39;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token string">&#39;CDATA:&#39;</span> <span class="token operator">+</span> <span class="token function">protectXMLCDATA</span><span class="token punctuation">(</span>xmlstr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>控制台输出结果</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">2024/08/27 14:31:28 - JavaScript代码.0 - CDATA:&lt;![CDATA[&lt;message&gt;&lt;warning&gt;Hello World &lt;/warning&gt;&lt;/message&gt;]]&gt;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="替换字符串-replace" tabindex="-1"><a class="header-anchor" href="#替换字符串-replace"><span>替换字符串(<code>replace</code>)</span></a></h3><p>替换字符串主要包括两个构造函数</p><ul><li>从指定字符串中查询，然后替换：<code>replace(str,searchStr,replaceStr)</code></li><li>无限查询替换：<code>replace(str,firstSearch,firstReplace,secondSearch,SecondReplace...)</code></li></ul><p>示例</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">var</span> replaceStr1 <span class="token operator">=</span> <span class="token string">&quot;Hello World, this is a nice function&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> replaceStr2 <span class="token operator">=</span> <span class="token function">replace</span><span class="token punctuation">(</span>replaceStr1<span class="token punctuation">,</span> <span class="token string">&quot;World&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Folk&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span>replaceStr2<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> replaceStr3 <span class="token operator">=</span> <span class="token function">replace</span><span class="token punctuation">(</span>replaceStr1<span class="token punctuation">,</span> <span class="token string">&quot;World&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Folk&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;nice&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;beautifull&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span>replaceStr3<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>控制台输出结果</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">2024/08/27 14:34:38 - JavaScript代码.0 - Hello Folk, this is a nice function</span>
<span class="line">2024/08/27 14:34:38 - JavaScript代码.0 - Hello Folk, this is a beautifull function</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="正则切分-str2regexp" tabindex="-1"><a class="header-anchor" href="#正则切分-str2regexp"><span>正则切分(<code>str2RegExp</code>)</span></a></h3><p>根据正则表达式内容，对字符串执行分割，如</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">var</span> strToMatch <span class="token operator">=</span> <span class="token string">&quot;info@proconis.de&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> strReg <span class="token operator">=</span> <span class="token string">&quot;^(\\\\w+)@([a-zA-Z_]+?)\\\\.([a-zA-Z]{2,3})$&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> xArr <span class="token operator">=</span> <span class="token function">str2RegExp</span><span class="token punctuation">(</span>strToMatch<span class="token punctuation">,</span> strReg<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">(</span>xArr <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> xArr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token string">&quot;正则匹配结果：&quot;</span> <span class="token operator">+</span> xArr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token string">&quot;no match&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>控制台输出结果</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">2024/08/27 14:55:03 - JavaScript代码.0 - 正则匹配结果：info</span>
<span class="line">2024/08/27 14:55:03 - JavaScript代码.0 - 正则匹配结果：proconis</span>
<span class="line">2024/08/27 14:55:03 - JavaScript代码.0 - 正则匹配结果：de</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="字符串截取-substr" tabindex="-1"><a class="header-anchor" href="#字符串截取-substr"><span>字符串截取(<code>substr</code>)</span></a></h3><p>通过指定索引开始对字符串进行截取操作,主要有两个重构参数</p><ul><li>指定开始索引截取字符串：<code>substr(string,from)</code></li><li>指定开始和截止索引进行截取：<code>substr(string,from,to)</code></li></ul><p>示例</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">var</span> substr1 <span class="token operator">=</span> <span class="token string">&quot;Hello Pentaho!&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> substr2 <span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span>substr1<span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> substr3 <span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span>substr1<span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token string">&quot;Input : &quot;</span> <span class="token operator">+</span> substr1<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token string">&quot;From position 6: &quot;</span> <span class="token operator">+</span> substr2<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token string">&quot;From position 6 for 7 long : &quot;</span> <span class="token operator">+</span> substr3<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="字符串转大写-upper" tabindex="-1"><a class="header-anchor" href="#字符串转大写-upper"><span>字符串转大写(<code>upper</code>)</span></a></h3><p>将传入字符串全部转大写，如</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">var</span> upperStr <span class="token operator">=</span> <span class="token string">&quot;Hello World&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token string">&quot;Input: &quot;</span> <span class="token operator">+</span> upperStr<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token string">&quot;Input upper: &quot;</span> <span class="token operator">+</span> <span class="token function">upper</span><span class="token punctuation">(</span>upperStr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>控制台输出结果</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">2024/08/27 14:22:22 - JavaScript代码.0 - Input: Hello World</span>
<span class="line">2024/08/27 14:22:22 - JavaScript代码.0 - Input upper: HELLO WORLD</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="浮点型的函数" tabindex="-1"><a class="header-anchor" href="#浮点型的函数"><span>浮点型的函数</span></a></h2><h3 id="计算绝对值-abs-num" tabindex="-1"><a class="header-anchor" href="#计算绝对值-abs-num"><span>计算绝对值(<code>abs(num)</code>)</span></a></h3><p>计算一个数值的绝对值，如</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">var</span> absNum1 <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1234.01</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> absNum2 <span class="token operator">=</span> <span class="token number">1234.01</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token string">&quot;绝对值absNum1：&quot;</span> <span class="token operator">+</span> <span class="token function">abs</span><span class="token punctuation">(</span>absNum1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token string">&quot;绝对值absNum2：&quot;</span> <span class="token operator">+</span> <span class="token function">abs</span><span class="token punctuation">(</span>absNum1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>控制台输出结果</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">2024/08/27 15:04:38 - 浮点型的函数(Numeric Functions).0 - 绝对值absNum1：1234.01</span>
<span class="line">2024/08/27 15:04:38 - 浮点型的函数(Numeric Functions).0 - 绝对值absNum2：1234.01</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="字符串转数值-str2num-var" tabindex="-1"><a class="header-anchor" href="#字符串转数值-str2num-var"><span>字符串转数值(<code>str2num(var)</code>)</span></a></h3><p>字符串转数值主要包含两个构造函数</p><ul><li>将数字类型的字符串转为数字：<code>str2num(str)</code></li><li>将数字类型的字符串根据指定格式转为数字：<code>str2num(str,format)</code></li></ul><p>示例</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">var</span> numstr1 <span class="token operator">=</span> <span class="token string">&quot;1.234,56&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> numstr2 <span class="token operator">=</span> <span class="token string">&quot;12&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token string">&quot;将&quot;</span> <span class="token operator">+</span> numstr1 <span class="token operator">+</span> <span class="token string">&quot;按照#,##0.00的格式转为数字，结果：&quot;</span> <span class="token operator">+</span> <span class="token function">str2num</span><span class="token punctuation">(</span>numstr1<span class="token punctuation">,</span> <span class="token string">&quot;#,##0.00&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token string">&quot;将&quot;</span> <span class="token operator">+</span> numstr2 <span class="token operator">+</span> <span class="token string">&quot;转为数字，结果：&quot;</span> <span class="token operator">+</span> <span class="token function">str2num</span><span class="token punctuation">(</span>numstr2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>控制台输出结果</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">2024/08/27 15:09:57 - 浮点型的函数(Numeric Functions).0 - 将1.234,56按照#,##0.00的格式转为数字，结果：1.234</span>
<span class="line">2024/08/27 15:09:57 - 浮点型的函数(Numeric Functions).0 - 将12转为数字，结果：12</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="日期类型函数" tabindex="-1"><a class="header-anchor" href="#日期类型函数"><span>日期类型函数</span></a></h2><h3 id="日期相加-dateadd-date-format-plusnum" tabindex="-1"><a class="header-anchor" href="#日期相加-dateadd-date-format-plusnum"><span>日期相加(<code>dateAdd(date,format,plusNum)</code>)</span></a></h3><p>针对日期变量进行相应的添加时间，添加频率包括年、月、日、时、分、秒，参数<code>date</code>为日期对象，参数<code>format</code>为类型，参数<code>plusNum</code> 为时间增加的数值</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">var</span> date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> formatStr <span class="token operator">=</span> <span class="token string">&#39;yyyy-MM-dd HH:mm:ss&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token string">&quot;当前时间，date:&quot;</span> <span class="token operator">+</span> <span class="token function">date2str</span><span class="token punctuation">(</span>date<span class="token punctuation">,</span> formatStr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> addDay <span class="token operator">=</span> <span class="token function">dateAdd</span><span class="token punctuation">(</span>date<span class="token punctuation">,</span> <span class="token string">&#39;d&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> substractDay <span class="token operator">=</span> <span class="token function">dateAdd</span><span class="token punctuation">(</span>date<span class="token punctuation">,</span> <span class="token string">&#39;d&#39;</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token string">&quot;增加一天:&quot;</span> <span class="token operator">+</span> <span class="token function">date2str</span><span class="token punctuation">(</span>addDay<span class="token punctuation">,</span> formatStr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token string">&quot;减少一天:&quot;</span> <span class="token operator">+</span> <span class="token function">date2str</span><span class="token punctuation">(</span>substractDay<span class="token punctuation">,</span> formatStr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> addMonth <span class="token operator">=</span> <span class="token function">dateAdd</span><span class="token punctuation">(</span>date<span class="token punctuation">,</span> <span class="token string">&#39;m&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> substractMonth <span class="token operator">=</span> <span class="token function">dateAdd</span><span class="token punctuation">(</span>date<span class="token punctuation">,</span> <span class="token string">&#39;m&#39;</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token string">&quot;增加一月:&quot;</span> <span class="token operator">+</span> <span class="token function">date2str</span><span class="token punctuation">(</span>addMonth<span class="token punctuation">,</span> formatStr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token string">&quot;减少一月:&quot;</span> <span class="token operator">+</span> <span class="token function">date2str</span><span class="token punctuation">(</span>substractMonth<span class="token punctuation">,</span> formatStr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> addYear <span class="token operator">=</span> <span class="token function">dateAdd</span><span class="token punctuation">(</span>date<span class="token punctuation">,</span> <span class="token string">&#39;y&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> substractYear <span class="token operator">=</span> <span class="token function">dateAdd</span><span class="token punctuation">(</span>date<span class="token punctuation">,</span> <span class="token string">&#39;y&#39;</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token string">&quot;增加一年:&quot;</span> <span class="token operator">+</span> <span class="token function">date2str</span><span class="token punctuation">(</span>addYear<span class="token punctuation">,</span> formatStr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token string">&quot;减少一年:&quot;</span> <span class="token operator">+</span> <span class="token function">date2str</span><span class="token punctuation">(</span>substractYear<span class="token punctuation">,</span> formatStr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> addWeek <span class="token operator">=</span> <span class="token function">dateAdd</span><span class="token punctuation">(</span>date<span class="token punctuation">,</span> <span class="token string">&#39;w&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> substractWeek <span class="token operator">=</span> <span class="token function">dateAdd</span><span class="token punctuation">(</span>date<span class="token punctuation">,</span> <span class="token string">&#39;w&#39;</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token string">&quot;增加一周:&quot;</span> <span class="token operator">+</span> <span class="token function">date2str</span><span class="token punctuation">(</span>addWeek<span class="token punctuation">,</span> formatStr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token string">&quot;减少一周:&quot;</span> <span class="token operator">+</span> <span class="token function">date2str</span><span class="token punctuation">(</span>substractWeek<span class="token punctuation">,</span> formatStr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> addWeekDay <span class="token operator">=</span> <span class="token function">dateAdd</span><span class="token punctuation">(</span>date<span class="token punctuation">,</span> <span class="token string">&#39;wd&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> substractWeekDay <span class="token operator">=</span> <span class="token function">dateAdd</span><span class="token punctuation">(</span>date<span class="token punctuation">,</span> <span class="token string">&#39;wd&#39;</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token string">&quot;增加一周工作日:&quot;</span> <span class="token operator">+</span> <span class="token function">date2str</span><span class="token punctuation">(</span>addWeekDay<span class="token punctuation">,</span> formatStr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token string">&quot;减少一周工作日:&quot;</span> <span class="token operator">+</span> <span class="token function">date2str</span><span class="token punctuation">(</span>substractWeekDay<span class="token punctuation">,</span> formatStr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> addHour <span class="token operator">=</span> <span class="token function">dateAdd</span><span class="token punctuation">(</span>date<span class="token punctuation">,</span> <span class="token string">&#39;hh&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> substractHour <span class="token operator">=</span> <span class="token function">dateAdd</span><span class="token punctuation">(</span>date<span class="token punctuation">,</span> <span class="token string">&#39;hh&#39;</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token string">&quot;增加一小时:&quot;</span> <span class="token operator">+</span> <span class="token function">date2str</span><span class="token punctuation">(</span>addHour<span class="token punctuation">,</span> formatStr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token string">&quot;减少一小时:&quot;</span> <span class="token operator">+</span> <span class="token function">date2str</span><span class="token punctuation">(</span>substractHour<span class="token punctuation">,</span> formatStr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> addMinute <span class="token operator">=</span> <span class="token function">dateAdd</span><span class="token punctuation">(</span>date<span class="token punctuation">,</span> <span class="token string">&#39;mi&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> substractMinute <span class="token operator">=</span> <span class="token function">dateAdd</span><span class="token punctuation">(</span>date<span class="token punctuation">,</span> <span class="token string">&#39;mi&#39;</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token string">&quot;增加一分钟:&quot;</span> <span class="token operator">+</span> <span class="token function">date2str</span><span class="token punctuation">(</span>addMinute<span class="token punctuation">,</span> formatStr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token string">&quot;减少一分钟:&quot;</span> <span class="token operator">+</span> <span class="token function">date2str</span><span class="token punctuation">(</span>substractMinute<span class="token punctuation">,</span> formatStr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> addSecond <span class="token operator">=</span> <span class="token function">dateAdd</span><span class="token punctuation">(</span>date<span class="token punctuation">,</span> <span class="token string">&#39;ss&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> substractSecond <span class="token operator">=</span> <span class="token function">dateAdd</span><span class="token punctuation">(</span>date<span class="token punctuation">,</span> <span class="token string">&#39;ss&#39;</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token string">&quot;增加一秒中:&quot;</span> <span class="token operator">+</span> <span class="token function">date2str</span><span class="token punctuation">(</span>addSecond<span class="token punctuation">,</span> formatStr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token string">&quot;减少一秒钟:&quot;</span> <span class="token operator">+</span> <span class="token function">date2str</span><span class="token punctuation">(</span>substractSecond<span class="token punctuation">,</span> formatStr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>控制台输出结果</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">2024/08/27 15:37:06 - 浮点型的函数(Numeric Functions).0 - 当前时间，date:2024-08-27 15:37:06</span>
<span class="line">2024/08/27 15:37:06 - 浮点型的函数(Numeric Functions).0 - 增加一天:2024-08-28 15:37:06</span>
<span class="line">2024/08/27 15:37:06 - 浮点型的函数(Numeric Functions).0 - 减少一天:2024-08-26 15:37:06</span>
<span class="line">2024/08/27 15:37:06 - 浮点型的函数(Numeric Functions).0 - 增加一月:2024-09-27 15:37:06</span>
<span class="line">2024/08/27 15:37:06 - 浮点型的函数(Numeric Functions).0 - 减少一月:2024-07-27 15:37:06</span>
<span class="line">2024/08/27 15:37:06 - 浮点型的函数(Numeric Functions).0 - 增加一年:2025-08-27 15:37:06</span>
<span class="line">2024/08/27 15:37:06 - 浮点型的函数(Numeric Functions).0 - 减少一年:2023-08-27 15:37:06</span>
<span class="line">2024/08/27 15:37:06 - 浮点型的函数(Numeric Functions).0 - 增加一周:2024-09-03 15:37:06</span>
<span class="line">2024/08/27 15:37:06 - 浮点型的函数(Numeric Functions).0 - 减少一周:2024-08-20 15:37:06</span>
<span class="line">2024/08/27 15:37:06 - 浮点型的函数(Numeric Functions).0 - 增加一周工作日:2024-08-28 15:37:06</span>
<span class="line">2024/08/27 15:37:06 - 浮点型的函数(Numeric Functions).0 - 减少一周工作日:2024-08-27 15:37:06</span>
<span class="line">2024/08/27 15:37:06 - 浮点型的函数(Numeric Functions).0 - 增加一小时:2024-08-27 16:37:06</span>
<span class="line">2024/08/27 15:37:06 - 浮点型的函数(Numeric Functions).0 - 减少一小时:2024-08-27 14:37:06</span>
<span class="line">2024/08/27 15:37:06 - 浮点型的函数(Numeric Functions).0 - 增加一分钟:2024-08-27 15:38:06</span>
<span class="line">2024/08/27 15:37:06 - 浮点型的函数(Numeric Functions).0 - 减少一分钟:2024-08-27 15:36:06</span>
<span class="line">2024/08/27 15:37:06 - 浮点型的函数(Numeric Functions).0 - 增加一秒中:2024-08-27 15:37:07</span>
<span class="line">2024/08/27 15:37:06 - 浮点型的函数(Numeric Functions).0 - 减少一秒钟:2024-08-27 15:37:05</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>注意：</strong> 时间相加<code>format</code>类型如下</p><ul><li>年：<code>y</code></li><li>月：<code>m</code></li><li>日：<code>d</code></li><li>周：<code>w</code></li><li>周（工作日）：<code>wd</code></li><li>小时：<code>hh</code></li><li>分钟：<code>mi</code></li><li>秒：<code>ss</code></li></ul><h3 id="日期比较-datediff-startdate-enddate-type" tabindex="-1"><a class="header-anchor" href="#日期比较-datediff-startdate-enddate-type"><span>日期比较(<code>dateDiff(startDate,endDate,type)</code>)</span></a></h3><p>比较两个时间，参数<code>startDate</code>为开始日期，参数<code>endDate</code>为截止日期，参数<code>type</code>为日期相差返回的格式，如年、月、日……</p><p>示例</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">var</span> now <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> formatStr <span class="token operator">=</span> <span class="token string">&#39;yyyy-MM-dd HH:mm:ss&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> yestorday <span class="token operator">=</span> <span class="token function">dateAdd</span><span class="token punctuation">(</span>now<span class="token punctuation">,</span> <span class="token string">&#39;d&#39;</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token string">&quot;当前时间now:&quot;</span> <span class="token operator">+</span> <span class="token function">date2str</span><span class="token punctuation">(</span>now<span class="token punctuation">,</span> formatStr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token string">&quot;昨天yestorday:&quot;</span> <span class="token operator">+</span> <span class="token function">date2str</span><span class="token punctuation">(</span>yestorday<span class="token punctuation">,</span> formatStr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> diffDate <span class="token operator">=</span> <span class="token function">dateDiff</span><span class="token punctuation">(</span>now<span class="token punctuation">,</span> yestorday<span class="token punctuation">,</span> <span class="token string">&#39;d&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token string">&quot;相差天数:&quot;</span> <span class="token operator">+</span> diffDate<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>控制台输出结果</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">2024/08/27 15:46:22 - 浮点型的函数(Numeric Functions).0 - 当前时间now:2024-08-27 15:46:22</span>
<span class="line">2024/08/27 15:46:22 - 浮点型的函数(Numeric Functions).0 - 昨天yestorday:2024-08-26 15:46:22</span>
<span class="line">2024/08/27 15:46:22 - 浮点型的函数(Numeric Functions).0 - 相差天数:-1</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>注意：</strong> 为日期相差返回的格式<code>type</code>类型如下</p><ul><li>年：<code>y</code></li><li>月：<code>m</code></li><li>日：<code>d</code></li><li>周：<code>w</code></li><li>周（工作日）：<code>wd</code></li><li>小时：<code>hh</code></li><li>分钟：<code>mi</code></li><li>秒：<code>ss</code></li></ul><h3 id="获取指定日期数值-getdaynumber-date-type" tabindex="-1"><a class="header-anchor" href="#获取指定日期数值-getdaynumber-date-type"><span>获取指定日期数值(<code>getDayNumber(date,type)</code>)</span></a></h3><p>根据类型获取指定日期的数值（天数），参数<code>date</code>为日期，参数<code>type</code>为执行类型</p><p>示例</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">var</span> now <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token function">getDayNumber</span><span class="token punctuation">(</span>now<span class="token punctuation">,</span> <span class="token string">&quot;y&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token function">getDayNumber</span><span class="token punctuation">(</span>now<span class="token punctuation">,</span> <span class="token string">&quot;m&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token function">getDayNumber</span><span class="token punctuation">(</span>now<span class="token punctuation">,</span> <span class="token string">&quot;w&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token function">getDayNumber</span><span class="token punctuation">(</span>now<span class="token punctuation">,</span> <span class="token string">&quot;wm&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>控制台输入结果</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">2024/08/27 15:55:06 - 浮点型的函数(Numeric Functions).0 - 240</span>
<span class="line">2024/08/27 15:55:06 - 浮点型的函数(Numeric Functions).0 - 27</span>
<span class="line">2024/08/27 15:55:06 - 浮点型的函数(Numeric Functions).0 - 3</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>注意：</strong></p><ol><li><code>getDayNumber</code>获取的为日期所在周期的天数</li><li><code>type</code>类型如下 <ul><li>获取当年的天数：<code>y</code></li><li>获取当月的天数：<code>m</code></li><li>获取本周的天数：<code>w</code></li><li>获取当月中本周的天数：<code>wm</code></li></ul></li></ol><h3 id="获取当前月份数值-month-date" tabindex="-1"><a class="header-anchor" href="#获取当前月份数值-month-date"><span>获取当前月份数值(<code>month(date)</code>)</span></a></h3><p>获取当前日期的月份数值，需要注意的是，该值的月份是从0开始的，因此我们最终得到的结果应该+1才是我们的真实月份数值，如</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">var</span> now <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token string">&quot;当前月份:&quot;</span> <span class="token operator">+</span> <span class="token function">month</span><span class="token punctuation">(</span>now<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>控制台输出结果</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">2024/08/27 16:18:43 - 浮点型的函数(Numeric Functions).0 - 当前月份:7</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="获取年份-year-date" tabindex="-1"><a class="header-anchor" href="#获取年份-year-date"><span>获取年份(<code>year(date)</code>)</span></a></h3><p>获取传入日期的年份，如</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">var</span> now <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token string">&quot;当前年份:&quot;</span> <span class="token operator">+</span> <span class="token function">year</span><span class="token punctuation">(</span>now<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>控制台输出结果</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">2024/08/27 16:30:26 - 浮点型的函数(Numeric Functions).0 - 当前年份:2024</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="获取当年的周数-week-date" tabindex="-1"><a class="header-anchor" href="#获取当年的周数-week-date"><span>获取当年的周数(<code>week(date)</code>)</span></a></h3><p>获取指定日期的周数，如</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">var</span> now <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token string">&quot;当前周数:&quot;</span> <span class="token operator">+</span> <span class="token function">week</span><span class="token punctuation">(</span>now<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>控制台除数结果</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">2024/08/27 16:37:09 - 浮点型的函数(Numeric Functions).0 - 当前周数:35</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="字符串转日期-str2date" tabindex="-1"><a class="header-anchor" href="#字符串转日期-str2date"><span>字符串转日期(<code>str2date</code>)</span></a></h3><p>字符串转日期和日期转字符串有点类似,只不过主体对换了一下,但是传入的格式参数都是一样的，主要有4个重载函数:</p><ul><li>默认转换：<code>str2date(str)</code></li><li>传入format格式化参数：<code>str2date(str,format)</code></li><li>根据iso编码及格式化参数进行转换：<code>str2date(str,format,iso)</code></li><li>根据不同时区的iso编码进行格式化转换：<code>str2date(str,format,iso,timezone)</code></li></ul><p>示例</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token string">&quot;字符串转时间（yyyy-MM-dd）：&quot;</span> <span class="token operator">+</span> <span class="token function">str2date</span><span class="token punctuation">(</span><span class="token string">&quot;2024-01-02&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;yyyy-MM-dd&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>控制台输出结果</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">2024/08/27 16:44:12 - 浮点型的函数(Numeric Functions).0 - 字符串转时间（yyyy-MM-dd）：Tue Jan 02 00:00:00 CST 2024</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="截取日期-truncdate-date-type" tabindex="-1"><a class="header-anchor" href="#截取日期-truncdate-date-type"><span>截取日期(<code>truncDate(date,type)</code>)</span></a></h3><p>指定截取不同的日期部分，参数<code>date</code>为传入时间，参数<code>type</code>为截取类型</p><p>示例</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">var</span> now <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> date0 <span class="token operator">=</span> <span class="token function">truncDate</span><span class="token punctuation">(</span>now<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> date1 <span class="token operator">=</span> <span class="token function">truncDate</span><span class="token punctuation">(</span>now<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> date2 <span class="token operator">=</span> <span class="token function">truncDate</span><span class="token punctuation">(</span>now<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> date3 <span class="token operator">=</span> <span class="token function">truncDate</span><span class="token punctuation">(</span>now<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> date4 <span class="token operator">=</span> <span class="token function">truncDate</span><span class="token punctuation">(</span>now<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> date5 <span class="token operator">=</span> <span class="token function">truncDate</span><span class="token punctuation">(</span>now<span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token string">&quot;当前时间-now:&quot;</span> <span class="token operator">+</span> <span class="token function">date2str</span><span class="token punctuation">(</span>now<span class="token punctuation">,</span> <span class="token string">&#39;yyyy-MM-dd HH:mm:ss&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token string">&quot;截取时间-date0:&quot;</span> <span class="token operator">+</span> <span class="token function">date2str</span><span class="token punctuation">(</span>date0<span class="token punctuation">,</span> <span class="token string">&#39;yyyy-MM-dd HH:mm:ss&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token string">&quot;截取时间-date1:&quot;</span> <span class="token operator">+</span> <span class="token function">date2str</span><span class="token punctuation">(</span>date1<span class="token punctuation">,</span> <span class="token string">&#39;yyyy-MM-dd HH:mm:ss&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token string">&quot;截取时间-date2:&quot;</span> <span class="token operator">+</span> <span class="token function">date2str</span><span class="token punctuation">(</span>date2<span class="token punctuation">,</span> <span class="token string">&#39;yyyy-MM-dd HH:mm:ss&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token string">&quot;截取时间-date3:&quot;</span> <span class="token operator">+</span> <span class="token function">date2str</span><span class="token punctuation">(</span>date3<span class="token punctuation">,</span> <span class="token string">&#39;yyyy-MM-dd HH:mm:ss&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token string">&quot;截取时间-date4:&quot;</span> <span class="token operator">+</span> <span class="token function">date2str</span><span class="token punctuation">(</span>date4<span class="token punctuation">,</span> <span class="token string">&#39;yyyy-MM-dd HH:mm:ss&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token string">&quot;截取时间-date5:&quot;</span> <span class="token operator">+</span> <span class="token function">date2str</span><span class="token punctuation">(</span>date5<span class="token punctuation">,</span> <span class="token string">&#39;yyyy-MM-dd HH:mm:ss&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>控制台输出结果</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">2024/08/27 17:07:39 - 浮点型的函数(Numeric Functions).0 - 当前时间-now:2024-08-27 17:07:39</span>
<span class="line">2024/08/27 17:07:39 - 浮点型的函数(Numeric Functions).0 - 截取时间-date0:2024-08-27 17:07:39</span>
<span class="line">2024/08/27 17:07:39 - 浮点型的函数(Numeric Functions).0 - 截取时间-date1:2024-08-27 17:07:00</span>
<span class="line">2024/08/27 17:07:39 - 浮点型的函数(Numeric Functions).0 - 截取时间-date2:2024-08-27 17:00:00</span>
<span class="line">2024/08/27 17:07:39 - 浮点型的函数(Numeric Functions).0 - 截取时间-date3:2024-08-27 00:00:00</span>
<span class="line">2024/08/27 17:07:39 - 浮点型的函数(Numeric Functions).0 - 截取时间-date4:2024-08-01 00:00:00</span>
<span class="line">2024/08/27 17:07:39 - 浮点型的函数(Numeric Functions).0 - 截取时间-date5:2024-01-01 00:00:00</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="逻辑判断型函数" tabindex="-1"><a class="header-anchor" href="#逻辑判断型函数"><span>逻辑判断型函数</span></a></h2><h3 id="是否为空-isempty-str" tabindex="-1"><a class="header-anchor" href="#是否为空-isempty-str"><span>是否为空(<code>isEmpty(str)</code>)</span></a></h3><p>判断字符串是否为空，如</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">var</span> d <span class="token operator">=</span> <span class="token string">&quot;Hello World&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">Alert</span><span class="token punctuation">(</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>控制台输出结果</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">2024/08/27 17:41:10 - 逻辑判断型函数(Logic Functions).0 - false</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="是否日期-isdate-str" tabindex="-1"><a class="header-anchor" href="#是否日期-isdate-str"><span>是否日期(<code>isDate(str)</code>)</span></a></h3><p>判断当前字符串是否日期，如</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">var</span> d1 <span class="token operator">=</span> <span class="token string">&quot;Hello World&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> d2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token function">isDate</span><span class="token punctuation">(</span>d1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token function">isDate</span><span class="token punctuation">(</span>d2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>控制台输出结果</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">2024/08/27 17:18:51 - 逻辑判断型函数(Logic Functions).0 - false</span>
<span class="line">2024/08/27 17:18:51 - 逻辑判断型函数(Logic Functions).0 - true</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="判断是否是数值-isnum-str" tabindex="-1"><a class="header-anchor" href="#判断是否是数值-isnum-str"><span>判断是否是数值(<code>isNum(str)</code>)</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">var</span> str1 <span class="token operator">=</span> <span class="token string">&quot;Hello World&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> str2 <span class="token operator">=</span> <span class="token number">123456</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token function">isNum</span><span class="token punctuation">(</span>str1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token function">isNum</span><span class="token punctuation">(</span>str2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>控制台输出结果</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">2024/08/27 17:42:32 - 逻辑判断型函数(Logic Functions).0 - false</span>
<span class="line">2024/08/27 17:42:32 - 逻辑判断型函数(Logic Functions).0 - true</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="是否正则匹配-isregexp" tabindex="-1"><a class="header-anchor" href="#是否正则匹配-isregexp"><span>是否正则匹配(<code>isRegExp</code>)</span></a></h3><p>判断给定的正则表达式是否匹配当前的字符串，主要有2个函数定义：</p><ul><li>给定正则判断字符串是否匹配：<code>isRegExp(str,reg)</code></li><li>可以递归判断正则匹配：<code>isRegExp(str,reg1,reg2,reg3…)</code></li></ul><p><strong>注意：</strong> 返回值是匹配的次数（数值类型），如果不匹配，返回-1</p><p>示例</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">var</span> email1 <span class="token operator">=</span> <span class="token string">&quot;info@proconis.de&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> email2 <span class="token operator">=</span> <span class="token string">&quot;support@proconis.co.uk&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> email3 <span class="token operator">=</span> <span class="token string">&quot;HelloWorld@x&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">var</span> reg1 <span class="token operator">=</span> <span class="token string">&quot;^\\\\w+@[a-zA-Z_]+?\\\\.[a-zA-Z]{2,3}$&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> reg2 <span class="token operator">=</span> <span class="token string">&quot;^[\\\\w-\\.]+@([\\\\w-]+\\\\.)+[\\\\w-]{2,4}$&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token function">isRegExp</span><span class="token punctuation">(</span>email1<span class="token punctuation">,</span> reg1<span class="token punctuation">,</span> reg2<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; Matches&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token function">isRegExp</span><span class="token punctuation">(</span>email2<span class="token punctuation">,</span> reg1<span class="token punctuation">,</span> reg2<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; Matches&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token function">isRegExp</span><span class="token punctuation">(</span>email3<span class="token punctuation">,</span> reg1<span class="token punctuation">,</span> reg2<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; Matches&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>控制台输出结果</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">2024/08/27 17:44:32 - 逻辑判断型函数(Logic Functions).0 - 1 Matches</span>
<span class="line">2024/08/27 17:44:32 - 逻辑判断型函数(Logic Functions).0 - 2 Matches</span>
<span class="line">2024/08/27 17:44:32 - 逻辑判断型函数(Logic Functions).0 - -1 Matches</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="特殊的函数" tabindex="-1"><a class="header-anchor" href="#特殊的函数"><span>特殊的函数</span></a></h2><h3 id="弹框信息-alert-msg" tabindex="-1"><a class="header-anchor" href="#弹框信息-alert-msg"><span>弹框信息(Alert(msg))</span></a></h3><p>在屏幕前弹出一个信息框</p><p><img src="`+o+`" alt="js脚本弹出结果"></p><h3 id="decode-函数" tabindex="-1"><a class="header-anchor" href="#decode-函数"><span>decode 函数</span></a></h3><p>decode函数有点类似于IF-THEN-ELSE语句，即表示通过给定查询的字符串是否存在，如果存在，即替换,否则返回默认值，如</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">var</span> str1 <span class="token operator">=</span> <span class="token string">&quot;Hallo&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token function">decode</span><span class="token punctuation">(</span>str1<span class="token punctuation">,</span> <span class="token string">&quot;Hallo&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token function">decode</span><span class="token punctuation">(</span>str1<span class="token punctuation">,</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Mr&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Mrs&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;N/A&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token function">decode</span><span class="token punctuation">(</span>str1<span class="token punctuation">,</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Mr&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Mrs&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">str1 <span class="token operator">=</span> <span class="token string">&quot;Mrs&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token function">decode</span><span class="token punctuation">(</span>str1<span class="token punctuation">,</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Mr&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Mrs&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>控制台输出结果</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">2024/08/27 17:50:57 - 特殊的函数(Special Functions).0 - Hallo 替换为 Hello ：Hello</span>
<span class="line">2024/08/27 17:50:57 - 特殊的函数(Special Functions).0 - N/A</span>
<span class="line">2024/08/27 17:50:57 - 特殊的函数(Special Functions).0 - Hallo</span>
<span class="line">2024/08/27 17:50:57 - 特殊的函数(Special Functions).0 - Mrs</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="执行sql语句-firetodb" tabindex="-1"><a class="header-anchor" href="#执行sql语句-firetodb"><span>执行SQL语句(<code>fireToDB</code>)</span></a></h3><p>通过获取数据库连接名称，传递SQL语句并返回SQL查询的值。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">// kettle 配置的数据库连接名称</span></span>
<span class="line"><span class="token keyword">var</span> strConn <span class="token operator">=</span> <span class="token string">&quot;XXXX&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// sql 语句，也可以是过程</span></span>
<span class="line"><span class="token keyword">var</span> strSQL <span class="token operator">=</span> <span class="token string">&quot;call Pro_B1_1_1_2_1_dept(&#39;2024-01-01&#39;,&#39;2024-02-01&#39;,&#39;1&#39;,&#39;&#39;)&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> xArr <span class="token operator">=</span> <span class="token function">fireToDB</span><span class="token punctuation">(</span>strConn<span class="token punctuation">,</span> strSQL<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 处理结果</span></span>
<span class="line"><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token keyword">in</span> xArr<span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">	<span class="token keyword">var</span> dept <span class="token operator">=</span> xArr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">var</span> sum <span class="token operator">=</span> xArr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token string">&quot;dept:&quot;</span><span class="token operator">+</span>dept<span class="token operator">+</span><span class="token string">&quot;,sum:&quot;</span><span class="token operator">+</span>sum<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="仅仅获取数值-getdigitsonly" tabindex="-1"><a class="header-anchor" href="#仅仅获取数值-getdigitsonly"><span>仅仅获取数值(<code>getDigitsOnly</code>)</span></a></h3><p>在给定的字符串中仅仅筛选过滤得到数值，如</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">var</span> str1 <span class="token operator">=</span> <span class="token string">&quot;abc123cde&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token function">getDigitsOnly</span><span class="token punctuation">(</span>str1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>控制台输出结果</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">2024/08/27 17:52:52 - 特殊的函数(Special Functions).0 - 123</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="获取kettle环境变量的值-getenvironmentvar" tabindex="-1"><a class="header-anchor" href="#获取kettle环境变量的值-getenvironmentvar"><span>获取Kettle环境变量的值(<code>getEnvironmentVar</code>)</span></a></h3><p>获取在Kettle中的环境变量的值，如</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token function">getEnvironmentVar</span><span class="token punctuation">(</span><span class="token string">&quot;user.dir&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token function">getEnvironmentVar</span><span class="token punctuation">(</span><span class="token string">&quot;user.name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>控制台输出结果</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">2024/08/27 17:55:02 - 特殊的函数(Special Functions).0 - D:\\develop\\kettle\\data-integration</span>
<span class="line">2024/08/27 17:55:02 - 特殊的函数(Special Functions).0 - mars</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="获取kettle环境中的变量值-getvariable" tabindex="-1"><a class="header-anchor" href="#获取kettle环境中的变量值-getvariable"><span>获取Kettle环境中的变量值(<code>getVariable</code>)</span></a></h3><p>从当前的Kettle环境中获取指定的变量值,目前函数有2个重载：</p><ul><li>根据变量名获取值,如果不存在则使用默认值：<code>getVariable(varName,defaultValue)</code></li></ul><p>示例</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">var</span> strVarName <span class="token operator">=</span> <span class="token string">&quot;getVariableTest&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> strVarValue <span class="token operator">=</span> <span class="token string">&quot;123456&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">Alert</span><span class="token punctuation">(</span><span class="token function">getVariable</span><span class="token punctuation">(</span>strVarName<span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">setVariable</span><span class="token punctuation">(</span>strVarName<span class="token punctuation">,</span> strVarValue<span class="token punctuation">,</span> <span class="token string">&quot;r&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">Alert</span><span class="token punctuation">(</span><span class="token function">getVariable</span><span class="token punctuation">(</span>strVarName<span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">strVarValue <span class="token operator">=</span> <span class="token string">&quot;654321&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">setVariable</span><span class="token punctuation">(</span>strVarName<span class="token punctuation">,</span> strVarValue<span class="token punctuation">,</span> <span class="token string">&quot;r&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">Alert</span><span class="token punctuation">(</span><span class="token function">getVariable</span><span class="token punctuation">(</span>strVarName<span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="设置变量-setvariable-key-value-level" tabindex="-1"><a class="header-anchor" href="#设置变量-setvariable-key-value-level"><span>设置变量(<code>setVariable(key,value,level)</code>)</span></a></h3><p>通过<code>setVariable</code>函数设置环境变量,该用途可以用于重新赋值Kettle环境中已经存在的变量值或者重新生成变量值，参数<code>key</code> 为变量名称，参数<code>value</code>为变量值，参数<code>level</code>为变量级别</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">var</span> strVarName <span class="token operator">=</span> <span class="token string">&quot;setEnvTest&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> strVarValue <span class="token operator">=</span> <span class="token string">&quot;123456&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">Alert</span><span class="token punctuation">(</span><span class="token function">getVariable</span><span class="token punctuation">(</span>strVarName<span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">setVariable</span><span class="token punctuation">(</span>strVarName<span class="token punctuation">,</span> strVarValue<span class="token punctuation">,</span> <span class="token string">&quot;r&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">Alert</span><span class="token punctuation">(</span><span class="token function">getVariable</span><span class="token punctuation">(</span>strVarName<span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">strVarValue <span class="token operator">=</span> <span class="token string">&quot;654321&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">setVariable</span><span class="token punctuation">(</span>strVarName<span class="token punctuation">,</span> strVarValue<span class="token punctuation">,</span> <span class="token string">&quot;r&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">Alert</span><span class="token punctuation">(</span><span class="token function">getVariable</span><span class="token punctuation">(</span>strVarName<span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>注意：</strong> 参数<code>level</code>级别如下</p><ul><li>system:s</li><li>root:r</li><li>parent:p</li><li>grandparent:g</li></ul><h3 id="写入日志-writetolog" tabindex="-1"><a class="header-anchor" href="#写入日志-writetolog"><span>写入日志(writeToLog)</span></a></h3><p>打印并写入日志信息,该函数可能是我们用到的最多的函数,可以帮助我们调试信息,主要有两个重载</p><ul><li>写入msg日志信息：<code>writeToLog(msg)</code></li><li>根据level基本写入msg信息:<code>writeToLog(level,msg)</code></li></ul><p><strong>注意：</strong> 参数<code>level</code>级别如下</p><ul><li>调试模式（Debug）：d</li><li>详细（Detailde）：i</li><li>错误（error）：e</li><li>最小日志（Minimal）：m</li><li>行级日志（RowLevel）:r</li></ul><h2 id="文件处理类函数" tabindex="-1"><a class="header-anchor" href="#文件处理类函数"><span>文件处理类函数</span></a></h2><h3 id="复制文件-copyfile-sourcefile-targetfile-overwrite" tabindex="-1"><a class="header-anchor" href="#复制文件-copyfile-sourcefile-targetfile-overwrite"><span>复制文件(<code>copyFile(sourceFile,targetFile,overwrite)</code>)</span></a></h3><p>复制一个文件到目标目录，参数<code>sourceFile</code>为源文件，参数<code>targetFile</code>为目标文件，参数<code>overwrite</code>为是否覆盖（布尔类型）</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">var</span> file1 <span class="token operator">=</span> <span class="token string">&quot;F:/bak/log.txt&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">var</span> targetFile <span class="token operator">=</span> <span class="token string">&quot;F:/bak/logTarget.txt&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token function">copyFile</span><span class="token punctuation">(</span>file1<span class="token punctuation">,</span> targetFile<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="创建文件夹-createfolder-path" tabindex="-1"><a class="header-anchor" href="#创建文件夹-createfolder-path"><span>创建文件夹(<code>createFolder(path)</code>)</span></a></h3><p>创建一个文件夹</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">var</span> strFolder <span class="token operator">=</span> <span class="token string">&quot;F:/bak/createFolder&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">createFolder</span><span class="token punctuation">(</span>strFolder<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="删除文件-deletefile" tabindex="-1"><a class="header-anchor" href="#删除文件-deletefile"><span>删除文件(deleteFile)</span></a></h3><p>删除一个文件(不能删除文件夹)</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">var</span> targetFile <span class="token operator">=</span> <span class="token string">&quot;F:/bak/logTarget.txt&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">deleteFile</span><span class="token punctuation">(</span>targetFile<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="判断文件是否存在-fileexists" tabindex="-1"><a class="header-anchor" href="#判断文件是否存在-fileexists"><span>判断文件是否存在(fileExists())</span></a></h3><p>判断文件是否存在</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">var</span> targetFile <span class="token operator">=</span> <span class="token string">&quot;F:/bak/logTarget.txt&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">fileExists</span><span class="token punctuation">(</span>targetFile<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="获取文件扩展名-getfileextension" tabindex="-1"><a class="header-anchor" href="#获取文件扩展名-getfileextension"><span>获取文件扩展名(getFileExtension)</span></a></h3><p>如果文件不存在,则返回null</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">var</span> file1 <span class="token operator">=</span> <span class="token string">&quot;F:/bak/log.txt&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> ext <span class="token operator">=</span> <span class="token function">getFileExtension</span><span class="token punctuation">(</span>file1<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token string">&quot;扩展名：&quot;</span> <span class="token operator">+</span> ext<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="获取文件大小-getfilesize" tabindex="-1"><a class="header-anchor" href="#获取文件大小-getfilesize"><span>获取文件大小(getFileSize)</span></a></h3><p>获取文件大小,结果是一个long类型的长整型数值</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">var</span> file1 <span class="token operator">=</span> <span class="token string">&quot;F:/bak/log.txt&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> ext <span class="token operator">=</span> <span class="token function">getFileSize</span><span class="token punctuation">(</span>file1<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token string">&quot;大小：&quot;</span> <span class="token operator">+</span> ext<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="获取文件的父文件夹名称-getparentfoldername" tabindex="-1"><a class="header-anchor" href="#获取文件的父文件夹名称-getparentfoldername"><span>获取文件的父文件夹名称(getParentFoldername)</span></a></h3><p>获取文件的父文件夹名称</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">var</span> file1 <span class="token operator">=</span> <span class="token string">&quot;F:/bak/log.txt&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> parentFolder <span class="token operator">=</span> <span class="token function">getParentFoldername</span><span class="token punctuation">(</span>file1<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="获取文件简称-getshortname" tabindex="-1"><a class="header-anchor" href="#获取文件简称-getshortname"><span>获取文件简称(getShortName)</span></a></h3><p>获取文件简称</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">var</span> file1 <span class="token operator">=</span> <span class="token string">&quot;F:/bak/log.txt&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> shortName <span class="token operator">=</span> <span class="token function">getShortFilename</span><span class="token punctuation">(</span>file1<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token string">&quot;简单名称:&quot;</span> <span class="token operator">+</span> shortName<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="判断是否是一个文件-isfile" tabindex="-1"><a class="header-anchor" href="#判断是否是一个文件-isfile"><span>判断是否是一个文件(isFile)</span></a></h3><p>判断是否是一个文件</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">var</span> file1 <span class="token operator">=</span> <span class="token string">&quot;F:/bak/log.txt&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> flag <span class="token operator">=</span> <span class="token function">isFile</span><span class="token punctuation">(</span>file1<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="判断是否是一个文件夹-isfolder" tabindex="-1"><a class="header-anchor" href="#判断是否是一个文件夹-isfolder"><span>判断是否是一个文件夹(isFolder)</span></a></h3><p>判断是否是一个文件夹</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">var</span> file1 <span class="token operator">=</span> <span class="token string">&quot;F:/bak/log.txt&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> flag <span class="token operator">=</span> <span class="token function">isFolder</span><span class="token punctuation">(</span>file1<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="加载一个文件的内容-loadfilecontent" tabindex="-1"><a class="header-anchor" href="#加载一个文件的内容-loadfilecontent"><span>加载一个文件的内容(loadFileContent)</span></a></h3><p>从指定文件中加载内容,主要有两个重载函数：</p><ul><li>默认加载文件：<code>loadFileContent(filePath)</code></li><li>指定编码加载文件内容：<code>loadFileContent(filePath,encoding)</code></li></ul><p>示例：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">var</span> file1 <span class="token operator">=</span> <span class="token string">&quot;F:/bak/log.txt&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> content <span class="token operator">=</span> <span class="token function">loadFileContent</span><span class="token punctuation">(</span>file1<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> c1 <span class="token operator">=</span> <span class="token function">loadFileContent</span><span class="token punctuation">(</span>file1<span class="token punctuation">,</span> <span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="移动文件-movefile-source-target-overwrite" tabindex="-1"><a class="header-anchor" href="#移动文件-movefile-source-target-overwrite"><span>移动文件(<code>moveFile(source,target,overWrite)</code>)</span></a></h3><p>移动指定文件， 参数<code>source</code>为源文件，参数<code>target</code>为目标文件，参数<code>overWrite</code>为 是否覆盖</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">var</span> file1 <span class="token operator">=</span> <span class="token string">&quot;F:/bak/log.txt&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> targetFile <span class="token operator">=</span> <span class="token string">&quot;F:/bak/logTarget.txt&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">moveFile</span><span class="token punctuation">(</span>file1<span class="token punctuation">,</span> targetFile<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="创建一个空文件-touch" tabindex="-1"><a class="header-anchor" href="#创建一个空文件-touch"><span>创建一个空文件(touch)</span></a></h3><p>创建一个空文件</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">var</span> strFile <span class="token operator">=</span> <span class="token string">&quot;F:/bak/log.txt&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">touch</span><span class="token punctuation">(</span>strFile<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="javascript-脚本案例" tabindex="-1"><a class="header-anchor" href="#javascript-脚本案例"><span>JavaScript 脚本案例</span></a></h2><h3 id="js-输出日志" tabindex="-1"><a class="header-anchor" href="#js-输出日志"><span>js 输出日志</span></a></h3><ul><li>作业中 js 输出日志</li></ul><p><strong>方式一</strong></p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">var</span> subject <span class="token operator">=</span> <span class="token string">&quot;自定义日志输出&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">//实例化工厂类</span></span>
<span class="line"><span class="token keyword">var</span> logFactory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">org<span class="token punctuation">.</span>pentaho<span class="token punctuation">.</span>di<span class="token punctuation">.</span>core<span class="token punctuation">.</span>logging<span class="token punctuation">.</span>LogChannelFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">//实例化日志channel对象</span></span>
<span class="line"><span class="token keyword">var</span> log <span class="token operator">=</span> logFactory<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>subject<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">//日志输出</span></span>
<span class="line">log<span class="token punctuation">.</span><span class="token function">logMinimal</span><span class="token punctuation">(</span><span class="token string">&quot;************************************-js日志输出方式1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token boolean">true</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>方式二</strong></p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">var</span> subject <span class="token operator">=</span> <span class="token string">&quot;自定义日志输出-方式2&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">//实例化日志channel对象</span></span>
<span class="line"><span class="token keyword">var</span> log <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">org<span class="token punctuation">.</span>pentaho<span class="token punctuation">.</span>di<span class="token punctuation">.</span>core<span class="token punctuation">.</span>logging<span class="token punctuation">.</span>LogChannel</span><span class="token punctuation">(</span>subject<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">//日志输出</span></span>
<span class="line">log<span class="token punctuation">.</span><span class="token function">logMinimal</span><span class="token punctuation">(</span><span class="token string">&quot;************************************-js日志输出方式2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token boolean">true</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>日志输出</strong></p><p><img src="`+k+'" alt="作业中js输出日志方式"></p><ul><li>转换中 js 输出日志</li></ul><p><img src="'+v+`" alt="转换中js输出日志"></p><p><strong>输出日志</strong></p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token string">&quot;测试日志,id:&quot;</span> <span class="token operator">+</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token string">&quot;测试日志,name:&quot;</span> <span class="token operator">+</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>注意：</strong> 运行时，日志级别需要在 debug (调试) 以上</p><p><img src="`+m+'" alt="日志级别"></p><p><strong>日志输出</strong></p><p><img src="'+g+'" alt="日志结果"></p><h3 id="js-变量" tabindex="-1"><a class="header-anchor" href="#js-变量"><span>js 变量</span></a></h3><p><strong>作业中 js 获取/设置变量</strong></p><p><img src="'+b+`" alt="作业中js获取/设置变量"></p><ul><li>js 脚本</li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">// 日志</span></span>
<span class="line"><span class="token keyword">var</span> subject <span class="token operator">=</span> <span class="token string">&quot;作业js获取变量&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> logFactory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">org<span class="token punctuation">.</span>pentaho<span class="token punctuation">.</span>di<span class="token punctuation">.</span>core<span class="token punctuation">.</span>logging<span class="token punctuation">.</span>LogChannelFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> log <span class="token operator">=</span> logFactory<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>subject<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 获取变量</span></span>
<span class="line"><span class="token keyword">var</span> startTime <span class="token operator">=</span> parent_job<span class="token punctuation">.</span><span class="token function">getVariable</span><span class="token punctuation">(</span><span class="token string">&quot;startTime&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 设置变量</span></span>
<span class="line">parent_job<span class="token punctuation">.</span><span class="token function">setVariable</span><span class="token punctuation">(</span><span class="token string">&quot;startTime&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;2024-01-02&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">//日志输出</span></span>
<span class="line">log<span class="token punctuation">.</span><span class="token function">logMinimal</span><span class="token punctuation">(</span><span class="token string">&quot;作业js获取变量，startTime：&quot;</span> <span class="token operator">+</span> startTime<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">log<span class="token punctuation">.</span><span class="token function">logMinimal</span><span class="token punctuation">(</span><span class="token string">&quot;作业js设置变量，startTime：&quot;</span> <span class="token operator">+</span> parent_job<span class="token punctuation">.</span><span class="token function">getVariable</span><span class="token punctuation">(</span><span class="token string">&quot;startTime&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token boolean">true</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>结果</li></ul><p><img src="`+f+'" alt="结果"></p><p><strong>转换中 js 获取/设置变量</strong></p><ul><li>作业内容</li></ul><p><img src="'+h+'" alt="转换中js获取/设置变量作业内容"></p><ul><li>转换内容</li></ul><p><img src="'+y+`" alt="转换中js获取/设置变量转换内容"></p><ul><li>js 内容</li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">var</span> testTime <span class="token operator">=</span> startTime<span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 设置变量</span></span>
<span class="line">testTime <span class="token operator">=</span> <span class="token string">&quot;2024-01-02&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>结果</li></ul><p><img src="`+w+'" alt="转换中js获取/设置变量结果"></p><h3 id="js-获取当前时间并转为字符串" tabindex="-1"><a class="header-anchor" href="#js-获取当前时间并转为字符串"><span>js 获取当前时间并转为字符串</span></a></h3><ul><li>转换内容</li></ul><p><img src="'+q+`" alt="js获取当前时间"></p><ul><li>js 内容</li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">var</span> subject <span class="token operator">=</span> <span class="token string">&quot;自定义日志输出&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">//实例化工厂类</span></span>
<span class="line"><span class="token keyword">var</span> logFactory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">org<span class="token punctuation">.</span>pentaho<span class="token punctuation">.</span>di<span class="token punctuation">.</span>core<span class="token punctuation">.</span>logging<span class="token punctuation">.</span>LogChannelFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">//实例化日志channel对象</span></span>
<span class="line"><span class="token keyword">var</span> log <span class="token operator">=</span> logFactory<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>subject<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 当前时间</span></span>
<span class="line"><span class="token keyword">var</span> now <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">log<span class="token punctuation">.</span><span class="token function">logMinimal</span><span class="token punctuation">(</span><span class="token string">&quot;当前时间now：&quot;</span> <span class="token operator">+</span> now<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 单枪时间字符串</span></span>
<span class="line"><span class="token keyword">var</span> nowStr <span class="token operator">=</span> <span class="token function">date2str</span><span class="token punctuation">(</span>now<span class="token punctuation">,</span> <span class="token string">&quot;yyyy-MM-dd&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token string">&quot;当前时间,yyyy-MM-dd：&quot;</span> <span class="token operator">+</span> nowStr<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>结果</li></ul><p><img src="`+j+'" alt="js获取当前时间结果"></p><h3 id="js-时间偏移" tabindex="-1"><a class="header-anchor" href="#js-时间偏移"><span>js 时间偏移</span></a></h3><ul><li>转换内容</li></ul><p><img src="'+x+`" alt="js时间偏移"></p><ul><li>js 内容</li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">// 测试时间</span></span>
<span class="line"><span class="token keyword">var</span> startDateStr <span class="token operator">=</span> <span class="token string">&quot;2024-01-01&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> endDateStr <span class="token operator">=</span> <span class="token string">&quot;2024-02-02&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">//创建日期对象</span></span>
<span class="line"><span class="token keyword">var</span> simpleDateFormat <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">java<span class="token punctuation">.</span>text<span class="token punctuation">.</span>SimpleDateFormat</span><span class="token punctuation">(</span><span class="token string">&quot;yyyy-MM-dd&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">//将日期字符串转为Date</span></span>
<span class="line"><span class="token keyword">var</span> startParse <span class="token operator">=</span> simpleDateFormat<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>startDateStr<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> endParse <span class="token operator">=</span> simpleDateFormat<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>endDateStr<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">//创建日历对象</span></span>
<span class="line"><span class="token keyword">var</span> startDate <span class="token operator">=</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Calendar<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">startDate<span class="token punctuation">.</span><span class="token function">setTime</span><span class="token punctuation">(</span>startParse<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> endDate <span class="token operator">=</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Calendar<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">endDate<span class="token punctuation">.</span><span class="token function">setTime</span><span class="token punctuation">(</span>endParse<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 时间增加一天</span></span>
<span class="line">startDate<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>startDate<span class="token punctuation">.</span><span class="token constant">DAY_OF_MONTH</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 时间减少一天</span></span>
<span class="line">endDate<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>startDate<span class="token punctuation">.</span><span class="token constant">DAY_OF_MONTH</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 格式化为yyyy-mm-dd</span></span>
<span class="line"><span class="token keyword">var</span> startStr <span class="token operator">=</span> simpleDateFormat<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>startDate<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> endStr <span class="token operator">=</span> simpleDateFormat<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>endDate<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// kettle 自带函数</span></span>
<span class="line"><span class="token keyword">var</span> d1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> fmt <span class="token operator">=</span> <span class="token string">&#39;yyyy-MM-dd HH:mm:ss&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> addyear <span class="token operator">=</span> <span class="token function">dateAdd</span><span class="token punctuation">(</span>d1<span class="token punctuation">,</span> <span class="token string">&#39;y&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> addmonth <span class="token operator">=</span> <span class="token function">dateAdd</span><span class="token punctuation">(</span>d1<span class="token punctuation">,</span> <span class="token string">&#39;m&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> addday <span class="token operator">=</span> <span class="token function">dateAdd</span><span class="token punctuation">(</span>d1<span class="token punctuation">,</span> <span class="token string">&#39;d&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>结果</li></ul><p><img src="`+L+'" alt="js时间偏移结果"></p><h3 id="js-脚本弹出" tabindex="-1"><a class="header-anchor" href="#js-脚本弹出"><span>js 脚本弹出</span></a></h3><ul><li>转换内容</li></ul><p><img src="'+T+`" alt="js脚本弹出"></p><ul><li>js 内容</li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">var</span> d <span class="token operator">=</span> <span class="token string">&quot;Hello World&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">Alert</span><span class="token punctuation">(</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>结果</li></ul><p><img src="`+o+'" alt="js脚本弹出结果"></p><h3 id="js-处理-json" tabindex="-1"><a class="header-anchor" href="#js-处理-json"><span>js 处理 json</span></a></h3><ul><li>转换</li></ul><p><img src="'+_+'" alt="js处理json"></p><ol><li>测试数据，使用“执行SQL脚本”组件</li></ol><p><img src="'+S+'" alt="测试数据"></p><ul><li>js 内容</li></ul><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">if</span> <span class="token operator">not</span> <span class="token keyword">exists</span> <span class="token identifier"><span class="token punctuation">`</span>dict_convert<span class="token punctuation">`</span></span> <span class="token punctuation">(</span></span>\n<span class="line">  <span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;主键&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token identifier"><span class="token punctuation">`</span>dict_item<span class="token punctuation">`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;字典项目&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token identifier"><span class="token punctuation">`</span>dict_value<span class="token punctuation">`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;字典值&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token identifier"><span class="token punctuation">`</span>dict_name<span class="token punctuation">`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">150</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;字典名称&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token identifier"><span class="token punctuation">`</span>dict_convert_value<span class="token punctuation">`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;字典转换值&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token identifier"><span class="token punctuation">`</span>dict_description<span class="token punctuation">`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">150</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;字典说明&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token identifier"><span class="token punctuation">`</span>memo<span class="token punctuation">`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;备注&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token identifier"><span class="token punctuation">`</span>vali_flag<span class="token punctuation">`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;有效标志&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token identifier"><span class="token punctuation">`</span>remark<span class="token punctuation">`</span></span> <span class="token keyword">text</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;remark&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token identifier"><span class="token punctuation">`</span>create_time<span class="token punctuation">`</span></span> <span class="token keyword">timestamp</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CURRENT_TIMESTAMP</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;创建时间&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token identifier"><span class="token punctuation">`</span>creator<span class="token punctuation">`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;创建人&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token identifier"><span class="token punctuation">`</span>update_time<span class="token punctuation">`</span></span> <span class="token keyword">timestamp</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CURRENT_TIMESTAMP</span> <span class="token keyword">ON</span> <span class="token keyword">UPDATE</span> <span class="token keyword">CURRENT_TIMESTAMP</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;操作时间&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token identifier"><span class="token punctuation">`</span>operator<span class="token punctuation">`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;操作人&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token identifier"><span class="token punctuation">`</span>dict_id<span class="token punctuation">`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;数据字典id&#39;</span></span>\n<span class="line"><span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8mb4<span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">REPLACE</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">`</span>demo<span class="token punctuation">`</span></span><span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>dict_convert<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>dict_item<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>dict_value<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>dict_name<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>dict_convert_value<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>dict_description<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>memo<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>vali_flag<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>remark<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>create_time<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>creator<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>update_time<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>operator<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>dict_id<span class="token punctuation">`</span></span><span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">&#39;9&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;RC013&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;局部麻醉&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;06&#39;</span><span class="token punctuation">,</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span> <span class="token string">&#39;2024-06-19 02:26:37&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;init&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2024-06-20 07:17:27&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;init&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">REPLACE</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">`</span>demo<span class="token punctuation">`</span></span><span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>dict_convert<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>dict_item<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>dict_value<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>dict_name<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>dict_convert_value<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>dict_description<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>memo<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>vali_flag<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>remark<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>create_time<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>creator<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>update_time<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>operator<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>dict_id<span class="token punctuation">`</span></span><span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">&#39;8&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;RC013&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;20209&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;脑神经阻滞：三叉神经阻滞、舌咽神经阻滞&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;0309&#39;</span><span class="token punctuation">,</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span> <span class="token string">&#39;2024-06-19 02:18:10&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;init&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2024-06-21 11:59:37&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;init&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">REPLACE</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">`</span>demo<span class="token punctuation">`</span></span><span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>dict_convert<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>dict_item<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>dict_value<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>dict_name<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>dict_convert_value<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>dict_description<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>memo<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>vali_flag<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>remark<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>create_time<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>creator<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>update_time<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>operator<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>dict_id<span class="token punctuation">`</span></span><span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">&#39;7&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;RC013&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;20204&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;躯干神经阻滞：肋间神经阻滞&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;0308&#39;</span><span class="token punctuation">,</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span> <span class="token string">&#39;2024-06-19 02:18:10&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;init&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2024-06-21 11:59:34&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;init&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">REPLACE</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">`</span>demo<span class="token punctuation">`</span></span><span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>dict_convert<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>dict_item<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>dict_value<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>dict_name<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>dict_convert_value<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>dict_description<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>memo<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>vali_flag<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>remark<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>create_time<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>creator<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>update_time<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>operator<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>dict_id<span class="token punctuation">`</span></span><span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">&#39;6&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;RC013&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;20205&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;椎旁神经阻滞&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;0304&#39;</span><span class="token punctuation">,</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span> <span class="token string">&#39;2024-06-19 02:18:10&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;init&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2024-06-21 11:59:32&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;init&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">REPLACE</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">`</span>demo<span class="token punctuation">`</span></span><span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>dict_convert<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>dict_item<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>dict_value<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>dict_name<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>dict_convert_value<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>dict_description<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>memo<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>vali_flag<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>remark<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>create_time<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>creator<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>update_time<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>operator<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>dict_id<span class="token punctuation">`</span></span><span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">&#39;5&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;RC013&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;5&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;复合麻醉&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;05&#39;</span><span class="token punctuation">,</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span> <span class="token string">&#39;2024-06-19 02:18:10&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;init&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2024-06-20 07:00:49&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;init&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">REPLACE</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">`</span>demo<span class="token punctuation">`</span></span><span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>dict_convert<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>dict_item<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>dict_value<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>dict_name<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>dict_convert_value<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>dict_description<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>memo<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>vali_flag<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>remark<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>create_time<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>creator<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>update_time<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>operator<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>dict_id<span class="token punctuation">`</span></span><span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;RC013&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;201&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;椎管内麻醉&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;02&#39;</span><span class="token punctuation">,</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span> <span class="token string">&#39;2024-06-19 02:18:10&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;init&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2024-06-20 07:18:26&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;init&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">REPLACE</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">`</span>demo<span class="token punctuation">`</span></span><span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>dict_convert<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>dict_item<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>dict_value<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>dict_name<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>dict_convert_value<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>dict_description<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>memo<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>vali_flag<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>remark<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>create_time<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>creator<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>update_time<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>operator<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>dict_id<span class="token punctuation">`</span></span><span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">&#39;36&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;RC013&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;502&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;不同方法的复合：静吸复合全麻，针药复合麻醉，全身 -硬膜外复合麻醉，脊髓-硬膜外复合麻醉等&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;0405&#39;</span><span class="token punctuation">,</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span> <span class="token string">&#39;2024-06-19 09:40:01&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;init&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2024-06-21 11:59:30&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;init&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">REPLACE</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">`</span>demo<span class="token punctuation">`</span></span><span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>dict_convert<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>dict_item<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>dict_value<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>dict_name<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>dict_convert_value<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>dict_description<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>memo<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>vali_flag<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>remark<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>create_time<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>creator<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>update_time<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>operator<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>dict_id<span class="token punctuation">`</span></span><span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">&#39;35&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;RC013&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;502&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;不同方法的复合：静吸复合全麻，针药复合麻醉，全身 -硬膜外复合麻醉，脊髓-硬膜外复合麻醉等&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;0404&#39;</span><span class="token punctuation">,</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span> <span class="token string">&#39;2024-06-19 09:40:01&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;init&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2024-06-21 11:59:27&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;init&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>获取数据，使用“表输入”组件</li></ol><p><img src="'+F+`" alt="获取数据"></p><p>脚本内容</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">SELECT</span></span>
<span class="line"><span class="token operator">*</span></span>
<span class="line"><span class="token keyword">FROM</span> demo<span class="token punctuation">.</span>dict_convert</span>
<span class="line"><span class="token keyword">where</span> dict_item <span class="token operator">=</span> <span class="token string">&#39;RC013&#39;</span>  </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>将数据转为json，使用“JSON output”组件</li></ol><p><img src="`+N+'" alt="将数据转为json"></p><p><strong>注意：</strong></p><p>一个数据条目的数据行: 使用0，将所有记录写入到一个json数组种，如果使用1，将会输出多个json</p><p><img src="'+E+'" alt="将数据转为json字段"></p><ol start="4"><li>选择json，使用“字段选择”组件，排除掉其他流程字段，只保留要使用的json字段</li></ol><p><img src="'+M+'" alt="选择json"></p><ol start="5"><li>遍历json数据，使用“JavaScript代码”组件</li></ol><p><img src="'+D+`" alt="遍历json数据"></p><p>js 内容</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token function">eval</span><span class="token punctuation">(</span><span class="token string">&#39;var json=&#39;</span> <span class="token operator">+</span> outputValue<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> json<span class="token punctuation">.</span>data<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token string">&quot;第&quot;</span> <span class="token operator">+</span> i <span class="token operator">+</span> <span class="token string">&quot;条数据 - dict_convert_value:&quot;</span> <span class="token operator">+</span> json<span class="token punctuation">.</span>data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>dict_convert_value <span class="token operator">+</span> <span class="token string">&quot;,dict_value:&quot;</span> <span class="token operator">+</span> json<span class="token punctuation">.</span>data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>dict_value<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="js-时间格式转换通用方法" tabindex="-1"><a class="header-anchor" href="#js-时间格式转换通用方法"><span>js 时间格式转换通用方法</span></a></h3><ul><li>转换</li></ul><p><img src="`+A+`" alt="js时间格式换通用方法"></p><ul><li>js 内容</li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">var</span> format <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> format1 <span class="token operator">=</span> <span class="token string">&quot;^\\\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\\\d|3[01])$&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> format2 <span class="token operator">=</span> <span class="token string">&quot;^\\\\d{4}\\/(0[1-9]|1[0-2])\\/(0[1-9]|[12]\\\\d|3[01])$&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> format3 <span class="token operator">=</span> <span class="token string">&quot;^\\\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\\\d|3[01])$&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> format4 <span class="token operator">=</span> <span class="token string">&quot;(^\\\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\\\d|3[01]))(0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9]$)&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> format5 <span class="token operator">=</span> <span class="token string">&quot;(^\\\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\\\d|3[01])) (0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9]$)&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> format6 <span class="token operator">=</span> <span class="token string">&quot;(^\\\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\\\d|3[01]))(0[0-9]|1[0-9]|2[0-3])([0-5][0-9])([0-5][0-9]$)&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> format7 <span class="token operator">=</span> <span class="token string">&quot;(^\\\\d{4}(0[1-9]|1[0-2])(0[1-9]|[12]\\\\d|3[01])) (0[0-9]|1[0-9]|2[0-3])([0-5][0-9])([0-5][0-9]$)&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> format8 <span class="token operator">=</span> <span class="token string">&quot;(^\\\\d{4}\\/(0[1-9]|1[0-2])\\/(0[1-9]|[12]\\\\d|3[01]))(0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9]$)&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> format9 <span class="token operator">=</span> <span class="token string">&quot;(^\\\\d{4}\\/(0[1-9]|1[0-2])\\/(0[1-9]|[12]\\\\d|3[01])) (0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9]$)&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> format10 <span class="token operator">=</span> <span class="token string">&quot;(^\\\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\\\d|3[01]))(0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9]$)&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> format11 <span class="token operator">=</span> <span class="token string">&quot;(^\\\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\\\d|3[01])) (0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9]$)&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">obtainFormat</span><span class="token punctuation">(</span><span class="token parameter">dateStr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isRegExp</span><span class="token punctuation">(</span>dateStr<span class="token punctuation">,</span> format1<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token string">&quot;yyyy-MM-dd&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isRegExp</span><span class="token punctuation">(</span>dateStr<span class="token punctuation">,</span> format2<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token string">&quot;yyyy/MM/dd&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isRegExp</span><span class="token punctuation">(</span>dateStr<span class="token punctuation">,</span> format3<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token string">&quot;yyyyMMdd&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isRegExp</span><span class="token punctuation">(</span>dateStr<span class="token punctuation">,</span> format4<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token string">&quot;yyyyMMddHH:mm:ss&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isRegExp</span><span class="token punctuation">(</span>dateStr<span class="token punctuation">,</span> format5<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token string">&quot;yyyyMMdd HH:mm:ss&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isRegExp</span><span class="token punctuation">(</span>dateStr<span class="token punctuation">,</span> format6<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token string">&quot;yyyyMMddHHmmss&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isRegExp</span><span class="token punctuation">(</span>dateStr<span class="token punctuation">,</span> format7<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token string">&quot;yyyyMMdd HHmmss&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isRegExp</span><span class="token punctuation">(</span>dateStr<span class="token punctuation">,</span> format8<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token string">&quot;yyyy/MM/ddHH:mm:ss&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isRegExp</span><span class="token punctuation">(</span>dateStr<span class="token punctuation">,</span> format9<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token string">&quot;yyyy/MM/dd HH:mm:ss&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isRegExp</span><span class="token punctuation">(</span>dateStr<span class="token punctuation">,</span> format10<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token string">&quot;yyyy-MM-ddHH:mm:ss&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isRegExp</span><span class="token punctuation">(</span>dateStr<span class="token punctuation">,</span> format11<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">var</span> testdate <span class="token operator">=</span> <span class="token string">&quot;2024-01-01 10:01:01&quot;</span><span class="token punctuation">;</span></span>
<span class="line">format <span class="token operator">=</span> <span class="token function">obtainFormat</span><span class="token punctuation">(</span>testdate<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">Alert</span><span class="token punctuation">(</span>format<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">Alert</span><span class="token punctuation">(</span><span class="token function">date2str</span><span class="token punctuation">(</span><span class="token function">str2date</span><span class="token punctuation">(</span>testdate<span class="token punctuation">,</span> format<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="js-执行sql" tabindex="-1"><a class="header-anchor" href="#js-执行sql"><span>js 执行sql</span></a></h3><p>除了使用<a href="#%E6%89%A7%E8%A1%8Csql%E8%AF%AD%E5%8F%A5firetodb">firetodb</a>方式，还可以通过内嵌<code>java</code>方式实现，优点是更方便获取返回值中明确的内容</p><ul><li>转换</li></ul><p><img src="`+C+`" alt="kettle_js_db.png"></p><ul><li>js 内容</li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">// 加载JDBC驱动</span></span>
<span class="line"><span class="token keyword">var</span> DriverClass <span class="token operator">=</span> Packages<span class="token punctuation">.</span>java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>Class<span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;com.mysql.jdbc.Driver&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"> </span>
<span class="line"><span class="token comment">// 设置数据库连接字符串，用户名和密码</span></span>
<span class="line"><span class="token keyword">var</span> url <span class="token operator">=</span> <span class="token string">&quot;jdbc:mysql://ip:port/dbname?serverTimezone=UTC&amp;characterEncoding=utf8&amp;useUnicode=true&amp;zeroDateTimeBehavior=convertToNull&amp;useSSL=false&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> username <span class="token operator">=</span> <span class="token string">&#39;root&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> password <span class="token operator">=</span> <span class="token string">&#39;password&#39;</span><span class="token punctuation">;</span></span>
<span class="line"> </span>
<span class="line"><span class="token comment">// 创建数据库连接</span></span>
<span class="line"><span class="token keyword">var</span> connection <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Packages<span class="token punctuation">.</span>java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span>DriverManager<span class="token punctuation">.</span>getConnection</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> username<span class="token punctuation">,</span> password<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"> </span>
<span class="line"><span class="token comment">// 创建一个Statement对象来执行SQL语句</span></span>
<span class="line"><span class="token keyword">var</span> statement <span class="token operator">=</span> connection<span class="token punctuation">.</span><span class="token function">createStatement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"> </span>
<span class="line"><span class="token comment">// 执行一个SQL查询</span></span>
<span class="line"><span class="token keyword">var</span> resultSet <span class="token operator">=</span> statement<span class="token punctuation">.</span><span class="token function">executeQuery</span><span class="token punctuation">(</span><span class="token string">&quot;call Pro_B1_1_1_2_1_dept(&#39;2024-01-01&#39;,&#39;2024-02-01&#39;,&#39;1&#39;,&#39;&#39;)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 处理结果</span></span>
<span class="line"><span class="token keyword">while</span> <span class="token punctuation">(</span>resultSet<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 获取并处理结果集中的数据</span></span>
<span class="line">    <span class="token keyword">var</span> dept <span class="token operator">=</span> resultSet<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;deptCode&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">var</span> sum <span class="token operator">=</span> resultSet<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;sumVal&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token function">writeToLog</span><span class="token punctuation">(</span><span class="token string">&quot;科室编码：&quot;</span><span class="token operator">+</span>dept <span class="token operator">+</span> <span class="token string">&quot;    统计值：&quot;</span> <span class="token operator">+</span> sum<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"> </span>
<span class="line"><span class="token comment">// 关闭结果集、语句和连接</span></span>
<span class="line">resultSet<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">statement<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">connection<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,344))])}const B=l(H,[["render",O],["__file","02-js脚本.html.vue"]]),J=JSON.parse('{"path":"/docs/kettle/02-js%E8%84%9A%E6%9C%AC.html","title":"Kettle js 脚本","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"JavaScript 内置脚本","slug":"javascript-内置脚本","link":"#javascript-内置脚本","children":[]},{"level":2,"title":"字符串类型的函数","slug":"字符串类型的函数","link":"#字符串类型的函数","children":[{"level":3,"title":"日期转字符串(date2str)","slug":"日期转字符串-date2str","link":"#日期转字符串-date2str","children":[]},{"level":3,"title":"构造定长字符串(fillString(char,length))","slug":"构造定长字符串-fillstring-char-length","link":"#构造定长字符串-fillstring-char-length","children":[]},{"level":3,"title":"统计字符串出现频次(getOcuranceString(str,searchStr))","slug":"统计字符串出现频次-getocurancestring-str-searchstr","link":"#统计字符串出现频次-getocurancestring-str-searchstr","children":[]},{"level":3,"title":"获取字符串下标索引(indexOf)","slug":"获取字符串下标索引-indexof","link":"#获取字符串下标索引-indexof","children":[]},{"level":3,"title":"首字母大写(initCap)","slug":"首字母大写-initcap","link":"#首字母大写-initcap","children":[]},{"level":3,"title":"字符串转小写(lower)","slug":"字符串转小写-lower","link":"#字符串转小写-lower","children":[]},{"level":3,"title":"字符串填充左侧(lpad(string,char,length))","slug":"字符串填充左侧-lpad-string-char-length","link":"#字符串填充左侧-lpad-string-char-length","children":[]},{"level":3,"title":"字符串右侧填充(rpad(string,char,length))","slug":"字符串右侧填充-rpad-string-char-length","link":"#字符串右侧填充-rpad-string-char-length","children":[]},{"level":3,"title":"去空左字符(ltrim)","slug":"去空左字符-ltrim","link":"#去空左字符-ltrim","children":[]},{"level":3,"title":"去除右字符(rtrim)","slug":"去除右字符-rtrim","link":"#去除右字符-rtrim","children":[]},{"level":3,"title":"去除左右空格(trim)","slug":"去除左右空格-trim","link":"#去除左右空格-trim","children":[]},{"level":3,"title":"数字转字符串(num2str)","slug":"数字转字符串-num2str","link":"#数字转字符串-num2str","children":[]},{"level":3,"title":"XML保护标签函数转换(protectXMLCDATA)","slug":"xml保护标签函数转换-protectxmlcdata","link":"#xml保护标签函数转换-protectxmlcdata","children":[]},{"level":3,"title":"替换字符串(replace)","slug":"替换字符串-replace","link":"#替换字符串-replace","children":[]},{"level":3,"title":"正则切分(str2RegExp)","slug":"正则切分-str2regexp","link":"#正则切分-str2regexp","children":[]},{"level":3,"title":"字符串截取(substr)","slug":"字符串截取-substr","link":"#字符串截取-substr","children":[]},{"level":3,"title":"字符串转大写(upper)","slug":"字符串转大写-upper","link":"#字符串转大写-upper","children":[]}]},{"level":2,"title":"浮点型的函数","slug":"浮点型的函数","link":"#浮点型的函数","children":[{"level":3,"title":"计算绝对值(abs(num))","slug":"计算绝对值-abs-num","link":"#计算绝对值-abs-num","children":[]},{"level":3,"title":"字符串转数值(str2num(var))","slug":"字符串转数值-str2num-var","link":"#字符串转数值-str2num-var","children":[]}]},{"level":2,"title":"日期类型函数","slug":"日期类型函数","link":"#日期类型函数","children":[{"level":3,"title":"日期相加(dateAdd(date,format,plusNum))","slug":"日期相加-dateadd-date-format-plusnum","link":"#日期相加-dateadd-date-format-plusnum","children":[]},{"level":3,"title":"日期比较(dateDiff(startDate,endDate,type))","slug":"日期比较-datediff-startdate-enddate-type","link":"#日期比较-datediff-startdate-enddate-type","children":[]},{"level":3,"title":"获取指定日期数值(getDayNumber(date,type))","slug":"获取指定日期数值-getdaynumber-date-type","link":"#获取指定日期数值-getdaynumber-date-type","children":[]},{"level":3,"title":"获取当前月份数值(month(date))","slug":"获取当前月份数值-month-date","link":"#获取当前月份数值-month-date","children":[]},{"level":3,"title":"获取年份(year(date))","slug":"获取年份-year-date","link":"#获取年份-year-date","children":[]},{"level":3,"title":"获取当年的周数(week(date))","slug":"获取当年的周数-week-date","link":"#获取当年的周数-week-date","children":[]},{"level":3,"title":"字符串转日期(str2date)","slug":"字符串转日期-str2date","link":"#字符串转日期-str2date","children":[]},{"level":3,"title":"截取日期(truncDate(date,type))","slug":"截取日期-truncdate-date-type","link":"#截取日期-truncdate-date-type","children":[]}]},{"level":2,"title":"逻辑判断型函数","slug":"逻辑判断型函数","link":"#逻辑判断型函数","children":[{"level":3,"title":"是否为空(isEmpty(str))","slug":"是否为空-isempty-str","link":"#是否为空-isempty-str","children":[]},{"level":3,"title":"是否日期(isDate(str))","slug":"是否日期-isdate-str","link":"#是否日期-isdate-str","children":[]},{"level":3,"title":"判断是否是数值(isNum(str))","slug":"判断是否是数值-isnum-str","link":"#判断是否是数值-isnum-str","children":[]},{"level":3,"title":"是否正则匹配(isRegExp)","slug":"是否正则匹配-isregexp","link":"#是否正则匹配-isregexp","children":[]}]},{"level":2,"title":"特殊的函数","slug":"特殊的函数","link":"#特殊的函数","children":[{"level":3,"title":"弹框信息(Alert(msg))","slug":"弹框信息-alert-msg","link":"#弹框信息-alert-msg","children":[]},{"level":3,"title":"decode 函数","slug":"decode-函数","link":"#decode-函数","children":[]},{"level":3,"title":"执行SQL语句(fireToDB)","slug":"执行sql语句-firetodb","link":"#执行sql语句-firetodb","children":[]},{"level":3,"title":"仅仅获取数值(getDigitsOnly)","slug":"仅仅获取数值-getdigitsonly","link":"#仅仅获取数值-getdigitsonly","children":[]},{"level":3,"title":"获取Kettle环境变量的值(getEnvironmentVar)","slug":"获取kettle环境变量的值-getenvironmentvar","link":"#获取kettle环境变量的值-getenvironmentvar","children":[]},{"level":3,"title":"获取Kettle环境中的变量值(getVariable)","slug":"获取kettle环境中的变量值-getvariable","link":"#获取kettle环境中的变量值-getvariable","children":[]},{"level":3,"title":"设置变量(setVariable(key,value,level))","slug":"设置变量-setvariable-key-value-level","link":"#设置变量-setvariable-key-value-level","children":[]},{"level":3,"title":"写入日志(writeToLog)","slug":"写入日志-writetolog","link":"#写入日志-writetolog","children":[]}]},{"level":2,"title":"文件处理类函数","slug":"文件处理类函数","link":"#文件处理类函数","children":[{"level":3,"title":"复制文件(copyFile(sourceFile,targetFile,overwrite))","slug":"复制文件-copyfile-sourcefile-targetfile-overwrite","link":"#复制文件-copyfile-sourcefile-targetfile-overwrite","children":[]},{"level":3,"title":"创建文件夹(createFolder(path))","slug":"创建文件夹-createfolder-path","link":"#创建文件夹-createfolder-path","children":[]},{"level":3,"title":"删除文件(deleteFile)","slug":"删除文件-deletefile","link":"#删除文件-deletefile","children":[]},{"level":3,"title":"判断文件是否存在(fileExists())","slug":"判断文件是否存在-fileexists","link":"#判断文件是否存在-fileexists","children":[]},{"level":3,"title":"获取文件扩展名(getFileExtension)","slug":"获取文件扩展名-getfileextension","link":"#获取文件扩展名-getfileextension","children":[]},{"level":3,"title":"获取文件大小(getFileSize)","slug":"获取文件大小-getfilesize","link":"#获取文件大小-getfilesize","children":[]},{"level":3,"title":"获取文件的父文件夹名称(getParentFoldername)","slug":"获取文件的父文件夹名称-getparentfoldername","link":"#获取文件的父文件夹名称-getparentfoldername","children":[]},{"level":3,"title":"获取文件简称(getShortName)","slug":"获取文件简称-getshortname","link":"#获取文件简称-getshortname","children":[]},{"level":3,"title":"判断是否是一个文件(isFile)","slug":"判断是否是一个文件-isfile","link":"#判断是否是一个文件-isfile","children":[]},{"level":3,"title":"判断是否是一个文件夹(isFolder)","slug":"判断是否是一个文件夹-isfolder","link":"#判断是否是一个文件夹-isfolder","children":[]},{"level":3,"title":"加载一个文件的内容(loadFileContent)","slug":"加载一个文件的内容-loadfilecontent","link":"#加载一个文件的内容-loadfilecontent","children":[]},{"level":3,"title":"移动文件(moveFile(source,target,overWrite))","slug":"移动文件-movefile-source-target-overwrite","link":"#移动文件-movefile-source-target-overwrite","children":[]},{"level":3,"title":"创建一个空文件(touch)","slug":"创建一个空文件-touch","link":"#创建一个空文件-touch","children":[]}]},{"level":2,"title":"JavaScript 脚本案例","slug":"javascript-脚本案例","link":"#javascript-脚本案例","children":[{"level":3,"title":"js 输出日志","slug":"js-输出日志","link":"#js-输出日志","children":[]},{"level":3,"title":"js 变量","slug":"js-变量","link":"#js-变量","children":[]},{"level":3,"title":"js 获取当前时间并转为字符串","slug":"js-获取当前时间并转为字符串","link":"#js-获取当前时间并转为字符串","children":[]},{"level":3,"title":"js 时间偏移","slug":"js-时间偏移","link":"#js-时间偏移","children":[]},{"level":3,"title":"js 脚本弹出","slug":"js-脚本弹出","link":"#js-脚本弹出","children":[]},{"level":3,"title":"js 处理 json","slug":"js-处理-json","link":"#js-处理-json","children":[]},{"level":3,"title":"js 时间格式转换通用方法","slug":"js-时间格式转换通用方法","link":"#js-时间格式转换通用方法","children":[]},{"level":3,"title":"js 执行sql","slug":"js-执行sql","link":"#js-执行sql","children":[]}]}],"git":{"updatedTime":1743061570000,"contributors":[{"name":"wangxiaoquan","email":"wxq","commits":2}]},"filePathRelative":"docs/kettle/02-js脚本.md"}');export{B as comp,J as data};
